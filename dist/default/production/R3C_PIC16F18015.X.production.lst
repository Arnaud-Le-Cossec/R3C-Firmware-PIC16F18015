

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 24 17:55:20 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18015
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Generated 19/10/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F18015 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0000                     	;# 
    79     0001                     	;# 
    80     0002                     	;# 
    81     0003                     	;# 
    82     0004                     	;# 
    83     0005                     	;# 
    84     0006                     	;# 
    85     0007                     	;# 
    86     0008                     	;# 
    87     0009                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     0012                     	;# 
    92     0018                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0096                     	;# 
    99     0097                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009A                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     018E                     	;# 
   106     018F                     	;# 
   107     019C                     	;# 
   108     019C                     	;# 
   109     019D                     	;# 
   110     019D                     	;# 
   111     019E                     	;# 
   112     019F                     	;# 
   113     020E                     	;# 
   114     020F                     	;# 
   115     0210                     	;# 
   116     0211                     	;# 
   117     0212                     	;# 
   118     0213                     	;# 
   119     0214                     	;# 
   120     028C                     	;# 
   121     028C                     	;# 
   122     028D                     	;# 
   123     028E                     	;# 
   124     028F                     	;# 
   125     028F                     	;# 
   126     0290                     	;# 
   127     0290                     	;# 
   128     0291                     	;# 
   129     0291                     	;# 
   130     0292                     	;# 
   131     0292                     	;# 
   132     0293                     	;# 
   133     0294                     	;# 
   134     0295                     	;# 
   135     0295                     	;# 
   136     0296                     	;# 
   137     0296                     	;# 
   138     0297                     	;# 
   139     0297                     	;# 
   140     030C                     	;# 
   141     030C                     	;# 
   142     030D                     	;# 
   143     030D                     	;# 
   144     030E                     	;# 
   145     030F                     	;# 
   146     0310                     	;# 
   147     0310                     	;# 
   148     0311                     	;# 
   149     0312                     	;# 
   150     0312                     	;# 
   151     0313                     	;# 
   152     0313                     	;# 
   153     0314                     	;# 
   154     0315                     	;# 
   155     0316                     	;# 
   156     0316                     	;# 
   157     0317                     	;# 
   158     0318                     	;# 
   159     0318                     	;# 
   160     0319                     	;# 
   161     0319                     	;# 
   162     031A                     	;# 
   163     031B                     	;# 
   164     031C                     	;# 
   165     031C                     	;# 
   166     031D                     	;# 
   167     038C                     	;# 
   168     038C                     	;# 
   169     038D                     	;# 
   170     038E                     	;# 
   171     038F                     	;# 
   172     0390                     	;# 
   173     0390                     	;# 
   174     0391                     	;# 
   175     0392                     	;# 
   176     0393                     	;# 
   177     039F                     	;# 
   178     040C                     	;# 
   179     040C                     	;# 
   180     040D                     	;# 
   181     040E                     	;# 
   182     040F                     	;# 
   183     040F                     	;# 
   184     0410                     	;# 
   185     0411                     	;# 
   186     0412                     	;# 
   187     0412                     	;# 
   188     0413                     	;# 
   189     0414                     	;# 
   190     041F                     	;# 
   191     048C                     	;# 
   192     048C                     	;# 
   193     048D                     	;# 
   194     048E                     	;# 
   195     048F                     	;# 
   196     048F                     	;# 
   197     0490                     	;# 
   198     0491                     	;# 
   199     0492                     	;# 
   200     0493                     	;# 
   201     050C                     	;# 
   202     050C                     	;# 
   203     050D                     	;# 
   204     050D                     	;# 
   205     050E                     	;# 
   206     050F                     	;# 
   207     0510                     	;# 
   208     0511                     	;# 
   209     0512                     	;# 
   210     0513                     	;# 
   211     0514                     	;# 
   212     058C                     	;# 
   213     058D                     	;# 
   214     058E                     	;# 
   215     058F                     	;# 
   216     0590                     	;# 
   217     0591                     	;# 
   218     0592                     	;# 
   219     0593                     	;# 
   220     0594                     	;# 
   221     0595                     	;# 
   222     0596                     	;# 
   223     0597                     	;# 
   224     060C                     	;# 
   225     060D                     	;# 
   226     060E                     	;# 
   227     060E                     	;# 
   228     060F                     	;# 
   229     0610                     	;# 
   230     0611                     	;# 
   231     0612                     	;# 
   232     0616                     	;# 
   233     0617                     	;# 
   234     0618                     	;# 
   235     0618                     	;# 
   236     0619                     	;# 
   237     061A                     	;# 
   238     061B                     	;# 
   239     061C                     	;# 
   240     068C                     	;# 
   241     068D                     	;# 
   242     068E                     	;# 
   243     068F                     	;# 
   244     0690                     	;# 
   245     0691                     	;# 
   246     0692                     	;# 
   247     0696                     	;# 
   248     0697                     	;# 
   249     0698                     	;# 
   250     0699                     	;# 
   251     069A                     	;# 
   252     069B                     	;# 
   253     069C                     	;# 
   254     100C                     	;# 
   255     100D                     	;# 
   256     101F                     	;# 
   257     108C                     	;# 
   258     108D                     	;# 
   259     108E                     	;# 
   260     108F                     	;# 
   261     109F                     	;# 
   262     109F                     	;# 
   263     110C                     	;# 
   264     110D                     	;# 
   265     1C8C                     	;# 
   266     1C8C                     	;# 
   267     1C8D                     	;# 
   268     1C8E                     	;# 
   269     1C8E                     	;# 
   270     1C8F                     	;# 
   271     1C90                     	;# 
   272     1C91                     	;# 
   273     1D0C                     	;# 
   274     1D0C                     	;# 
   275     1D0D                     	;# 
   276     1D0E                     	;# 
   277     1D0E                     	;# 
   278     1D0F                     	;# 
   279     1D10                     	;# 
   280     1D10                     	;# 
   281     1D11                     	;# 
   282     1D12                     	;# 
   283     1D12                     	;# 
   284     1D13                     	;# 
   285     1D14                     	;# 
   286     1D14                     	;# 
   287     1D15                     	;# 
   288     1D16                     	;# 
   289     1D16                     	;# 
   290     1D17                     	;# 
   291     1D18                     	;# 
   292     1D19                     	;# 
   293     1D1A                     	;# 
   294     1D1B                     	;# 
   295     1D1B                     	;# 
   296     1D1C                     	;# 
   297     1D1D                     	;# 
   298     1D1D                     	;# 
   299     1D1E                     	;# 
   300     1D1F                     	;# 
   301     1D21                     	;# 
   302     1D21                     	;# 
   303     1D22                     	;# 
   304     1D23                     	;# 
   305     1D24                     	;# 
   306     1D24                     	;# 
   307     1D25                     	;# 
   308     1D26                     	;# 
   309     1D27                     	;# 
   310     1D28                     	;# 
   311     1D29                     	;# 
   312     1D2A                     	;# 
   313     1D2B                     	;# 
   314     1D2C                     	;# 
   315     1D2D                     	;# 
   316     1D2E                     	;# 
   317     1D8C                     	;# 
   318     1D8D                     	;# 
   319     1D8E                     	;# 
   320     1D90                     	;# 
   321     1D91                     	;# 
   322     1E0C                     	;# 
   323     1E0D                     	;# 
   324     1E0E                     	;# 
   325     1E0F                     	;# 
   326     1E10                     	;# 
   327     1E11                     	;# 
   328     1E12                     	;# 
   329     1E19                     	;# 
   330     1E1A                     	;# 
   331     1E1B                     	;# 
   332     1E1E                     	;# 
   333     1E1F                     	;# 
   334     1E39                     	;# 
   335     1E3D                     	;# 
   336     1E3E                     	;# 
   337     1E3F                     	;# 
   338     1E40                     	;# 
   339     1E41                     	;# 
   340     1E41                     	;# 
   341     1E42                     	;# 
   342     1E42                     	;# 
   343     1E43                     	;# 
   344     1E43                     	;# 
   345     1E44                     	;# 
   346     1E44                     	;# 
   347     1E47                     	;# 
   348     1E48                     	;# 
   349     1E49                     	;# 
   350     1E4A                     	;# 
   351     1E4B                     	;# 
   352     1E4C                     	;# 
   353     1E50                     	;# 
   354     1E8C                     	;# 
   355     1E8D                     	;# 
   356     1E8E                     	;# 
   357     1E8F                     	;# 
   358     1E90                     	;# 
   359     1E91                     	;# 
   360     1E92                     	;# 
   361     1E93                     	;# 
   362     1EE1                     	;# 
   363     1EE2                     	;# 
   364     1F0C                     	;# 
   365     1F0D                     	;# 
   366     1F0E                     	;# 
   367     1FE4                     	;# 
   368     1FE5                     	;# 
   369     1FE6                     	;# 
   370     1FE7                     	;# 
   371     1FE8                     	;# 
   372     1FE8                     	;# 
   373     1FE9                     	;# 
   374     1FEA                     	;# 
   375     1FEA                     	;# 
   376     1FEB                     	;# 
   377     1FED                     	;# 
   378     1FEE                     	;# 
   379     1FEF                     	;# 
   380     0000                     	;# 
   381     0001                     	;# 
   382     0002                     	;# 
   383     0003                     	;# 
   384     0004                     	;# 
   385     0005                     	;# 
   386     0006                     	;# 
   387     0007                     	;# 
   388     0008                     	;# 
   389     0009                     	;# 
   390     000A                     	;# 
   391     000B                     	;# 
   392     000C                     	;# 
   393     0012                     	;# 
   394     0018                     	;# 
   395     008C                     	;# 
   396     008D                     	;# 
   397     008E                     	;# 
   398     008F                     	;# 
   399     0090                     	;# 
   400     0096                     	;# 
   401     0097                     	;# 
   402     0098                     	;# 
   403     0099                     	;# 
   404     009A                     	;# 
   405     018C                     	;# 
   406     018D                     	;# 
   407     018E                     	;# 
   408     018F                     	;# 
   409     019C                     	;# 
   410     019C                     	;# 
   411     019D                     	;# 
   412     019D                     	;# 
   413     019E                     	;# 
   414     019F                     	;# 
   415     020E                     	;# 
   416     020F                     	;# 
   417     0210                     	;# 
   418     0211                     	;# 
   419     0212                     	;# 
   420     0213                     	;# 
   421     0214                     	;# 
   422     028C                     	;# 
   423     028C                     	;# 
   424     028D                     	;# 
   425     028E                     	;# 
   426     028F                     	;# 
   427     028F                     	;# 
   428     0290                     	;# 
   429     0290                     	;# 
   430     0291                     	;# 
   431     0291                     	;# 
   432     0292                     	;# 
   433     0292                     	;# 
   434     0293                     	;# 
   435     0294                     	;# 
   436     0295                     	;# 
   437     0295                     	;# 
   438     0296                     	;# 
   439     0296                     	;# 
   440     0297                     	;# 
   441     0297                     	;# 
   442     030C                     	;# 
   443     030C                     	;# 
   444     030D                     	;# 
   445     030D                     	;# 
   446     030E                     	;# 
   447     030F                     	;# 
   448     0310                     	;# 
   449     0310                     	;# 
   450     0311                     	;# 
   451     0312                     	;# 
   452     0312                     	;# 
   453     0313                     	;# 
   454     0313                     	;# 
   455     0314                     	;# 
   456     0315                     	;# 
   457     0316                     	;# 
   458     0316                     	;# 
   459     0317                     	;# 
   460     0318                     	;# 
   461     0318                     	;# 
   462     0319                     	;# 
   463     0319                     	;# 
   464     031A                     	;# 
   465     031B                     	;# 
   466     031C                     	;# 
   467     031C                     	;# 
   468     031D                     	;# 
   469     038C                     	;# 
   470     038C                     	;# 
   471     038D                     	;# 
   472     038E                     	;# 
   473     038F                     	;# 
   474     0390                     	;# 
   475     0390                     	;# 
   476     0391                     	;# 
   477     0392                     	;# 
   478     0393                     	;# 
   479     039F                     	;# 
   480     040C                     	;# 
   481     040C                     	;# 
   482     040D                     	;# 
   483     040E                     	;# 
   484     040F                     	;# 
   485     040F                     	;# 
   486     0410                     	;# 
   487     0411                     	;# 
   488     0412                     	;# 
   489     0412                     	;# 
   490     0413                     	;# 
   491     0414                     	;# 
   492     041F                     	;# 
   493     048C                     	;# 
   494     048C                     	;# 
   495     048D                     	;# 
   496     048E                     	;# 
   497     048F                     	;# 
   498     048F                     	;# 
   499     0490                     	;# 
   500     0491                     	;# 
   501     0492                     	;# 
   502     0493                     	;# 
   503     050C                     	;# 
   504     050C                     	;# 
   505     050D                     	;# 
   506     050D                     	;# 
   507     050E                     	;# 
   508     050F                     	;# 
   509     0510                     	;# 
   510     0511                     	;# 
   511     0512                     	;# 
   512     0513                     	;# 
   513     0514                     	;# 
   514     058C                     	;# 
   515     058D                     	;# 
   516     058E                     	;# 
   517     058F                     	;# 
   518     0590                     	;# 
   519     0591                     	;# 
   520     0592                     	;# 
   521     0593                     	;# 
   522     0594                     	;# 
   523     0595                     	;# 
   524     0596                     	;# 
   525     0597                     	;# 
   526     060C                     	;# 
   527     060D                     	;# 
   528     060E                     	;# 
   529     060E                     	;# 
   530     060F                     	;# 
   531     0610                     	;# 
   532     0611                     	;# 
   533     0612                     	;# 
   534     0616                     	;# 
   535     0617                     	;# 
   536     0618                     	;# 
   537     0618                     	;# 
   538     0619                     	;# 
   539     061A                     	;# 
   540     061B                     	;# 
   541     061C                     	;# 
   542     068C                     	;# 
   543     068D                     	;# 
   544     068E                     	;# 
   545     068F                     	;# 
   546     0690                     	;# 
   547     0691                     	;# 
   548     0692                     	;# 
   549     0696                     	;# 
   550     0697                     	;# 
   551     0698                     	;# 
   552     0699                     	;# 
   553     069A                     	;# 
   554     069B                     	;# 
   555     069C                     	;# 
   556     100C                     	;# 
   557     100D                     	;# 
   558     101F                     	;# 
   559     108C                     	;# 
   560     108D                     	;# 
   561     108E                     	;# 
   562     108F                     	;# 
   563     109F                     	;# 
   564     109F                     	;# 
   565     110C                     	;# 
   566     110D                     	;# 
   567     1C8C                     	;# 
   568     1C8C                     	;# 
   569     1C8D                     	;# 
   570     1C8E                     	;# 
   571     1C8E                     	;# 
   572     1C8F                     	;# 
   573     1C90                     	;# 
   574     1C91                     	;# 
   575     1D0C                     	;# 
   576     1D0C                     	;# 
   577     1D0D                     	;# 
   578     1D0E                     	;# 
   579     1D0E                     	;# 
   580     1D0F                     	;# 
   581     1D10                     	;# 
   582     1D10                     	;# 
   583     1D11                     	;# 
   584     1D12                     	;# 
   585     1D12                     	;# 
   586     1D13                     	;# 
   587     1D14                     	;# 
   588     1D14                     	;# 
   589     1D15                     	;# 
   590     1D16                     	;# 
   591     1D16                     	;# 
   592     1D17                     	;# 
   593     1D18                     	;# 
   594     1D19                     	;# 
   595     1D1A                     	;# 
   596     1D1B                     	;# 
   597     1D1B                     	;# 
   598     1D1C                     	;# 
   599     1D1D                     	;# 
   600     1D1D                     	;# 
   601     1D1E                     	;# 
   602     1D1F                     	;# 
   603     1D21                     	;# 
   604     1D21                     	;# 
   605     1D22                     	;# 
   606     1D23                     	;# 
   607     1D24                     	;# 
   608     1D24                     	;# 
   609     1D25                     	;# 
   610     1D26                     	;# 
   611     1D27                     	;# 
   612     1D28                     	;# 
   613     1D29                     	;# 
   614     1D2A                     	;# 
   615     1D2B                     	;# 
   616     1D2C                     	;# 
   617     1D2D                     	;# 
   618     1D2E                     	;# 
   619     1D8C                     	;# 
   620     1D8D                     	;# 
   621     1D8E                     	;# 
   622     1D90                     	;# 
   623     1D91                     	;# 
   624     1E0C                     	;# 
   625     1E0D                     	;# 
   626     1E0E                     	;# 
   627     1E0F                     	;# 
   628     1E10                     	;# 
   629     1E11                     	;# 
   630     1E12                     	;# 
   631     1E19                     	;# 
   632     1E1A                     	;# 
   633     1E1B                     	;# 
   634     1E1E                     	;# 
   635     1E1F                     	;# 
   636     1E39                     	;# 
   637     1E3D                     	;# 
   638     1E3E                     	;# 
   639     1E3F                     	;# 
   640     1E40                     	;# 
   641     1E41                     	;# 
   642     1E41                     	;# 
   643     1E42                     	;# 
   644     1E42                     	;# 
   645     1E43                     	;# 
   646     1E43                     	;# 
   647     1E44                     	;# 
   648     1E44                     	;# 
   649     1E47                     	;# 
   650     1E48                     	;# 
   651     1E49                     	;# 
   652     1E4A                     	;# 
   653     1E4B                     	;# 
   654     1E4C                     	;# 
   655     1E50                     	;# 
   656     1E8C                     	;# 
   657     1E8D                     	;# 
   658     1E8E                     	;# 
   659     1E8F                     	;# 
   660     1E90                     	;# 
   661     1E91                     	;# 
   662     1E92                     	;# 
   663     1E93                     	;# 
   664     1EE1                     	;# 
   665     1EE2                     	;# 
   666     1F0C                     	;# 
   667     1F0D                     	;# 
   668     1F0E                     	;# 
   669     1FE4                     	;# 
   670     1FE5                     	;# 
   671     1FE6                     	;# 
   672     1FE7                     	;# 
   673     1FE8                     	;# 
   674     1FE8                     	;# 
   675     1FE9                     	;# 
   676     1FEA                     	;# 
   677     1FEA                     	;# 
   678     1FEB                     	;# 
   679     1FED                     	;# 
   680     1FEE                     	;# 
   681     1FEF                     	;# 
   682                           
   683                           	psect	stringtext1
   684     0512                     __pstringtext1:
   685     0512                     EUSART_print_hex@ref:
   686     0512  3430               	retlw	48
   687     0513  3431               	retlw	49
   688     0514  3432               	retlw	50
   689     0515  3433               	retlw	51
   690     0516  3434               	retlw	52
   691     0517  3435               	retlw	53
   692     0518  3436               	retlw	54
   693     0519  3437               	retlw	55
   694     051A  3438               	retlw	56
   695     051B  3439               	retlw	57
   696     051C  3441               	retlw	65
   697     051D  3442               	retlw	66
   698     051E  3443               	retlw	67
   699     051F  3444               	retlw	68
   700     0520  3445               	retlw	69
   701     0521  3446               	retlw	70
   702     0522                     __end_ofEUSART_print_hex@ref:
   703     000C                     _PORTA	set	12
   704     000B                     _INTCONbits	set	11
   705     0012                     _TRISA	set	18
   706     0012                     _TRISAbits	set	18
   707     0099                     _PIE3bits	set	153
   708     008F                     _PIR3bits	set	143
   709     018C                     _WDTCONbits	set	396
   710     0616                     _RC2REG	set	1558
   711     0617                     _TX2REG	set	1559
   712     0619                     _SP2BRGH	set	1561
   713     0618                     _SP2BRGL	set	1560
   714     061A                     _RC2STAbits	set	1562
   715     061B                     _TX2STAbits	set	1563
   716     061C                     _BAUD2CONbits	set	1564
   717     068C                     _SSP1BUF	set	1676
   718     0691                     _SSP1CON2bits	set	1681
   719     068F                     _SSP1STAT	set	1679
   720     068D                     _SSP1ADD	set	1677
   721     0691                     _SSP1CON2	set	1681
   722     0690                     _SSP1CON1bits	set	1680
   723     068F                     _SSP1STATbits	set	1679
   724     1D1D                     _ADRES	set	7453
   725     1D26                     _ADCON0bits	set	7462
   726     1D2B                     _ADREF	set	7467
   727     1D1F                     _ADPCH	set	7455
   728     1D8E                     _RA2PPS	set	7566
   729     1D8D                     _RA1PPS	set	7565
   730     1D91                     _RA5PPS	set	7569
   731     1E48                     _SSP1DATPPS	set	7752
   732     1E47                     _SSP1CLKPPS	set	7751
   733     1E43                     _RX2PPS	set	7747
   734     1E8C                     _ANSELA	set	7820
   735     1E8E                     _ODCONAbits	set	7822
   736     0522                     STR_8:
   737     0522  342B               	retlw	43	;'+'
   738     0523  344A               	retlw	74	;'J'
   739     0524  344F               	retlw	79	;'O'
   740     0525  3449               	retlw	73	;'I'
   741     0526  344E               	retlw	78	;'N'
   742     0527  343A               	retlw	58	;':'
   743     0528  3420               	retlw	32	;' '
   744     0529  344A               	retlw	74	;'J'
   745     052A  346F               	retlw	111	;'o'
   746     052B  3469               	retlw	105	;'i'
   747     052C  346E               	retlw	110	;'n'
   748     052D  3465               	retlw	101	;'e'
   749     052E  3464               	retlw	100	;'d'
   750     052F  3420               	retlw	32	;' '
   751     0530  3461               	retlw	97	;'a'
   752     0531  346C               	retlw	108	;'l'
   753     0532  3472               	retlw	114	;'r'
   754     0533  3465               	retlw	101	;'e'
   755     0534  3461               	retlw	97	;'a'
   756     0535  3464               	retlw	100	;'d'
   757     0536  3479               	retlw	121	;'y'
   758     0537  3400               	retlw	0
   759                           
   760                           	psect	stringtext2
   761     05EF                     __pstringtext2:
   762     05EF                     STR_11:
   763     05EF  3443               	retlw	67	;'C'
   764     05F0  346F               	retlw	111	;'o'
   765     05F1  346E               	retlw	110	;'n'
   766     05F2  346E               	retlw	110	;'n'
   767     05F3  3465               	retlw	101	;'e'
   768     05F4  3463               	retlw	99	;'c'
   769     05F5  3474               	retlw	116	;'t'
   770     05F6  3465               	retlw	101	;'e'
   771     05F7  3464               	retlw	100	;'d'
   772     05F8  3420               	retlw	32	;' '
   773     05F9  3421               	retlw	33	;'!'
   774     05FA  3400               	retlw	0
   775                           
   776                           	psect	stringtext3
   777     05FB                     __pstringtext3:
   778     05FB                     STR_13:
   779     05FB  3441               	retlw	65	;'A'
   780     05FC  3454               	retlw	84	;'T'
   781     05FD  342B               	retlw	43	;'+'
   782     05FE  344C               	retlw	76	;'L'
   783     05FF  344F               	retlw	79	;'O'
   784     0600  3457               	retlw	87	;'W'
   785     0601  3450               	retlw	80	;'P'
   786     0602  344F               	retlw	79	;'O'
   787     0603  3457               	retlw	87	;'W'
   788     0604  3445               	retlw	69	;'E'
   789     0605  3452               	retlw	82	;'R'
   790     0606  3400               	retlw	0
   791                           
   792                           	psect	stringtext4
   793     0613                     __pstringtext4:
   794     0613                     STR_1:
   795     0613  3457               	retlw	87	;'W'
   796     0614  3461               	retlw	97	;'a'
   797     0615  346B               	retlw	107	;'k'
   798     0616  3465               	retlw	101	;'e'
   799     0617  3420               	retlw	32	;' '
   800     0618  3475               	retlw	117	;'u'
   801     0619  3470               	retlw	112	;'p'
   802     061A  3420               	retlw	32	;' '
   803     061B  3421               	retlw	33	;'!'
   804     061C  3421               	retlw	33	;'!'
   805     061D  3400               	retlw	0
   806                           
   807                           	psect	stringtext5
   808     061E                     __pstringtext5:
   809     061E                     STR_12:
   810     061E  3441               	retlw	65	;'A'
   811     061F  3454               	retlw	84	;'T'
   812     0620  342B               	retlw	43	;'+'
   813     0621  344D               	retlw	77	;'M'
   814     0622  3453               	retlw	83	;'S'
   815     0623  3447               	retlw	71	;'G'
   816     0624  3448               	retlw	72	;'H'
   817     0625  3445               	retlw	69	;'E'
   818     0626  3458               	retlw	88	;'X'
   819     0627  343D               	retlw	61	;'='
   820     0628  3400               	retlw	0
   821                           
   822                           	psect	stringtext6
   823     0629                     __pstringtext6:
   824     0629                     STR_6:
   825     0629  3452               	retlw	82	;'R'
   826     062A  3458               	retlw	88	;'X'
   827     062B  342F               	retlw	47	;'/'
   828     062C  3454               	retlw	84	;'T'
   829     062D  3458               	retlw	88	;'X'
   830     062E  3420               	retlw	32	;' '
   831     062F  3446               	retlw	70	;'F'
   832     0630  3461               	retlw	97	;'a'
   833     0631  3469               	retlw	105	;'i'
   834     0632  346C               	retlw	108	;'l'
   835     0633  3400               	retlw	0
   836                           
   837                           	psect	stringtext7
   838     063E                     __pstringtext7:
   839     063E                     STR_3:
   840     063E  342B               	retlw	43	;'+'
   841     063F  3441               	retlw	65	;'A'
   842     0640  3454               	retlw	84	;'T'
   843     0641  343A               	retlw	58	;':'
   844     0642  3420               	retlw	32	;' '
   845     0643  344F               	retlw	79	;'O'
   846     0644  344B               	retlw	75	;'K'
   847     0645  3400               	retlw	0
   848                           
   849                           	psect	stringtext8
   850     0646                     __pstringtext8:
   851     0646                     STR_7:
   852     0646  3441               	retlw	65	;'A'
   853     0647  3454               	retlw	84	;'T'
   854     0648  342B               	retlw	43	;'+'
   855     0649  344A               	retlw	74	;'J'
   856     064A  344F               	retlw	79	;'O'
   857     064B  3449               	retlw	73	;'I'
   858     064C  344E               	retlw	78	;'N'
   859     064D  3400               	retlw	0
   860                           
   861                           	psect	stringtext9
   862     065A                     __pstringtext9:
   863     065A                     STR_2:
   864     065A  3441               	retlw	65	;'A'
   865     065B  3454               	retlw	84	;'T'
   866     065C  3400               	retlw	0
   867                           
   868                           	psect	stringtext10
   869     0000                     __pstringtext10:
   870     0613                     
   871                           	psect	cinit
   872     002D                     start_initialization:	
   873                           ; #config settings
   874                           
   875     002D                     __initialization:
   876                           
   877                           ; Clear objects allocated to COMMON
   878     002D  01FC               	clrf	__pbssCOMMON& (0+127)
   879                           
   880                           ; Clear objects allocated to BANK1
   881     002E  30A0               	movlw	low __pbssBANK1
   882     002F  0084               	movwf	4
   883     0030  3000               	movlw	high __pbssBANK1
   884     0031  0085               	movwf	5
   885     0032  3050               	movlw	80
   886     0033  3186  264E  3180   	fcall	clear_ram0
   887     0036                     end_of_initialization:	
   888                           ;End of C runtime variable initialization code
   889                           
   890     0036                     __end_of__initialization:
   891     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   892     0037  0140               	movlb	0
   893     0038  3183  2B20         	ljmp	_main	;jump to C main() function
   894                           
   895                           	psect	bssCOMMON
   896     007C                     __pbssCOMMON:
   897     007C                     _RX_index:
   898     007C                     	ds	1
   899                           
   900                           	psect	bssBANK1
   901     00A0                     __pbssBANK1:
   902     00A0                     _RX_buffer:
   903     00A0                     	ds	80
   904                           
   905                           	psect	clrtext
   906     064E                     clear_ram0:	
   907                           ;	Called with FSR0 containing the base address, and
   908                           ;	WREG with the size to clear
   909                           
   910     064E  0064               	clrwdt	;clear the watchdog before getting into this loop
   911     064F                     clrloop0:
   912     064F  0180               	clrf	0	;clear RAM location pointed to by FSR
   913     0650  3101               	addfsr 0,1
   914     0651  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   915     0652  2E4F               	goto	clrloop0	;have we reached the end yet?
   916     0653  3400               	retlw	0	;all done for this memory range, return
   917                           
   918                           	psect	cstackCOMMON
   919     0070                     __pcstackCOMMON:
   920     0070                     ?_WDT_setup:
   921     0070                     ?_SLEEP_start:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0070                     ?_EUSART_setup:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0070                     ?_EUSART_write:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0070                     ?_EUSART_print_hex:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0070                     ?_Analog_setup:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0070                     ?_Analog_read_percent:	
   937                           ; 1 bytes @ 0x0
   938                           
   939     0070                     ?_LoRa_setup:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0070                     ?_ISR:	
   943                           ; 1 bytes @ 0x0
   944                           
   945     0070                     ??_ISR:	
   946                           ; 1 bytes @ 0x0
   947                           
   948     0070                     ?_main:	
   949                           ; 1 bytes @ 0x0
   950                           
   951                           
   952                           ; 1 bytes @ 0x0
   953     0070                     	ds	1
   954     0071                     ??_WDT_setup:
   955     0071                     ??_SLEEP_start:	
   956                           ; 1 bytes @ 0x1
   957                           
   958     0071                     ??_EUSART_setup:	
   959                           ; 1 bytes @ 0x1
   960                           
   961     0071                     ??_EUSART_write:	
   962                           ; 1 bytes @ 0x1
   963                           
   964     0071                     ?_EUSART_clear_buffer:	
   965                           ; 1 bytes @ 0x1
   966                           
   967     0071                     ??_Analog_setup:	
   968                           ; 1 bytes @ 0x1
   969                           
   970     0071                     ?__Umul8_16:	
   971                           ; 1 bytes @ 0x1
   972                           
   973     0071                     ?_Analog_read_raw:	
   974                           ; 2 bytes @ 0x1
   975                           
   976     0071                     ?___xxtofl:	
   977                           ; 2 bytes @ 0x1
   978                           
   979     0071                     EUSART_write@txData:	
   980                           ; 4 bytes @ 0x1
   981                           
   982     0071                     EUSART_clear_buffer@size:	
   983                           ; 1 bytes @ 0x1
   984                           
   985     0071                     __Umul8_16@multiplicand:	
   986                           ; 1 bytes @ 0x1
   987                           
   988     0071                     ___xxtofl@val:	
   989                           ; 1 bytes @ 0x1
   990                           
   991                           
   992                           ; 4 bytes @ 0x1
   993     0071                     	ds	1
   994     0072                     ?_EUSART_print:
   995     0072                     ??_EUSART_print_hex:	
   996                           ; 1 bytes @ 0x2
   997                           
   998     0072                     ??_EUSART_clear_buffer:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001     0072                     EUSART_print@string:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004                           
  1005                           ; 2 bytes @ 0x2
  1006     0072                     	ds	1
  1007     0073                     ??__Umul8_16:
  1008     0073                     ??_Analog_read_raw:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011     0073                     EUSART_print_hex@number:	
  1012                           ; 1 bytes @ 0x3
  1013                           
  1014     0073                     EUSART_clear_buffer@buffer:	
  1015                           ; 1 bytes @ 0x3
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x3
  1019     0073                     	ds	1
  1020     0074                     ??_EUSART_print:
  1021     0074                     EUSART_print_hex@a:	
  1022                           ; 1 bytes @ 0x4
  1023                           
  1024     0074                     EUSART_clear_buffer@i:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x4
  1029     0074                     	ds	1
  1030     0075                     ??___xxtofl:
  1031     0075                     __Umul8_16@product:	
  1032                           ; 1 bytes @ 0x5
  1033                           
  1034                           
  1035                           ; 2 bytes @ 0x5
  1036     0075                     	ds	2
  1037     0077                     EUSART_print@c:
  1038     0077                     __Umul8_16@word_mpld:	
  1039                           ; 1 bytes @ 0x7
  1040                           
  1041                           
  1042                           ; 2 bytes @ 0x7
  1043     0077                     	ds	1
  1044     0078                     ?_AT_command:
  1045     0078                     ??_AT_command_check:	
  1046                           ; 1 bytes @ 0x8
  1047                           
  1048     0078                     ??_LoRa_send_data:	
  1049                           ; 1 bytes @ 0x8
  1050                           
  1051     0078                     AT_command@at_command:	
  1052                           ; 1 bytes @ 0x8
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x8
  1056     0078                     	ds	1
  1057     0079                     __Umul8_16@multiplier:
  1058                           
  1059                           ; 1 bytes @ 0x9
  1060     0079                     	ds	1
  1061     007A                     ??_AT_command:
  1062     007A                     ___fltol@sign1:	
  1063                           ; 1 bytes @ 0xA
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0xA
  1067     007A                     	ds	1
  1068     007B                     AT_command_check@i:
  1069     007B                     ___fltol@exp1:	
  1070                           ; 1 bytes @ 0xB
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0xB
  1074     007B                     	ds	1
  1075     007C                     ??_Analog_read_percent:
  1076                           
  1077                           	psect	cstackBANK0
  1078     0020                     __pcstackBANK0:	
  1079                           ; 1 bytes @ 0xC
  1080                           
  1081     0020                     ?_AT_command_check:
  1082     0020                     ?_LoRa_send_data:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0020                     ___xxtofl@sign:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088     0020                     LoRa_send_data@temperature:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091     0020                     AT_command_check@at_command:	
  1092                           ; 2 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 2 bytes @ 0x0
  1096     0020                     	ds	1
  1097     0021                     ___xxtofl@exp:
  1098                           
  1099                           ; 1 bytes @ 0x1
  1100     0021                     	ds	1
  1101     0022                     LoRa_send_data@humidity:
  1102     0022                     AT_command_check@expected_response:	
  1103                           ; 2 bytes @ 0x2
  1104                           
  1105     0022                     ___xxtofl@arg:	
  1106                           ; 2 bytes @ 0x2
  1107                           
  1108                           
  1109                           ; 4 bytes @ 0x2
  1110     0022                     	ds	2
  1111     0024                     LoRa_send_data@battery:
  1112     0024                     AT_command_check@response_size:	
  1113                           ; 1 bytes @ 0x4
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x4
  1117     0024                     	ds	1
  1118     0025                     ??_LoRa_setup:
  1119                           
  1120                           ; 1 bytes @ 0x5
  1121     0025                     	ds	1
  1122     0026                     ?___flmul:
  1123     0026                     ___flmul@b:	
  1124                           ; 4 bytes @ 0x6
  1125                           
  1126                           
  1127                           ; 4 bytes @ 0x6
  1128     0026                     	ds	4
  1129     002A                     ___flmul@a:
  1130                           
  1131                           ; 4 bytes @ 0xA
  1132     002A                     	ds	4
  1133     002E                     ??___flmul:
  1134                           
  1135                           ; 1 bytes @ 0xE
  1136     002E                     	ds	5
  1137     0033                     ___flmul@sign:
  1138                           
  1139                           ; 1 bytes @ 0x13
  1140     0033                     	ds	1
  1141     0034                     ___flmul@grs:
  1142                           
  1143                           ; 4 bytes @ 0x14
  1144     0034                     	ds	4
  1145     0038                     ___flmul@aexp:
  1146                           
  1147                           ; 1 bytes @ 0x18
  1148     0038                     	ds	1
  1149     0039                     ___flmul@bexp:
  1150                           
  1151                           ; 1 bytes @ 0x19
  1152     0039                     	ds	1
  1153     003A                     ___flmul@prod:
  1154                           
  1155                           ; 4 bytes @ 0x1A
  1156     003A                     	ds	4
  1157     003E                     ___flmul@temp:
  1158                           
  1159                           ; 2 bytes @ 0x1E
  1160     003E                     	ds	2
  1161     0040                     ?___fltol:
  1162     0040                     ___fltol@f1:	
  1163                           ; 4 bytes @ 0x20
  1164                           
  1165                           
  1166                           ; 4 bytes @ 0x20
  1167     0040                     	ds	4
  1168     0044                     ??___fltol:
  1169                           
  1170                           ; 1 bytes @ 0x24
  1171     0044                     	ds	4
  1172     0048                     Analog_read_percent@a:
  1173                           
  1174                           ; 2 bytes @ 0x28
  1175     0048                     	ds	2
  1176     004A                     Analog_read_percent@r:
  1177                           
  1178                           ; 1 bytes @ 0x2A
  1179     004A                     	ds	1
  1180     004B                     ??_main:
  1181                           
  1182                           ; 1 bytes @ 0x2B
  1183     004B                     	ds	2
  1184     004D                     main@battery:
  1185                           
  1186                           ; 1 bytes @ 0x2D
  1187     004D                     	ds	1
  1188     004E                     main@sleep_counter:
  1189                           
  1190                           ; 1 bytes @ 0x2E
  1191     004E                     	ds	1
  1192                           
  1193                           	psect	maintext
  1194     0320                     __pmaintext:	
  1195 ;;
  1196 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1197 ;;
  1198 ;; *************** function _main *****************
  1199 ;; Defined at:
  1200 ;;		line 99 in file "main.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  humidity        4    0        float 
  1205 ;;  temp            4    0        float 
  1206 ;;  sleep_counte    1   46[BANK0 ] unsigned char 
  1207 ;;  battery         1   45[BANK0 ] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : B3F/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1220 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1221 ;;Total ram usage:        4 bytes
  1222 ;; Hardware stack levels required when called: 5
  1223 ;; This function calls:
  1224 ;;		_AT_command
  1225 ;;		_AT_command_check
  1226 ;;		_Analog_read_percent
  1227 ;;		_Analog_setup
  1228 ;;		_EUSART_clear_buffer
  1229 ;;		_EUSART_setup
  1230 ;;		_LoRa_send_data
  1231 ;;		_LoRa_setup
  1232 ;;		_SLEEP_start
  1233 ;;		_WDT_setup
  1234 ;; This function is called by:
  1235 ;;		Startup code after reset
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239     0320                     _main:	
  1240                           ;psect for function _main
  1241                           
  1242     0320                     l1925:	
  1243                           ;incstack = 0
  1244                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1245                           
  1246                           
  1247                           ;main.c: 101:     INTCONbits.PEIE = 1;
  1248     0320  170B               	bsf	11,6	;volatile
  1249                           
  1250                           ;main.c: 102:     INTCONbits.GIE = 1;
  1251     0321  178B               	bsf	11,7	;volatile
  1252     0322                     l1927:
  1253                           
  1254                           ;main.c: 105:     TRISA &= !(1<<2);
  1255     0322  0140               	movlb	0	; select bank0
  1256     0323  0192               	clrf	18	;volatile
  1257                           
  1258                           ;main.c: 107:     ANSELA = 0x0;
  1259     0324  017D               	movlb	61	; select bank61
  1260     0325  018C               	clrf	12	;volatile
  1261     0326                     l1929:
  1262                           
  1263                           ;main.c: 113:     EUSART_setup();
  1264     0326  3185  25CE  3183   	fcall	_EUSART_setup
  1265     0329                     l1931:
  1266                           
  1267                           ;main.c: 114:     EUSART_clear_buffer(RX_buffer, 80);
  1268     0329  3050               	movlw	80
  1269     032A  00F1               	movwf	EUSART_clear_buffer@size
  1270     032B  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
  1271     032C  3185  25A5  3183   	fcall	_EUSART_clear_buffer
  1272     032F                     l1933:
  1273                           
  1274                           ;main.c: 117:     Analog_setup();
  1275     032F  3185  25E2  3183   	fcall	_Analog_setup
  1276     0332                     l1935:
  1277                           
  1278                           ;main.c: 120:     PORTA |= (1<<2);
  1279     0332  0140               	movlb	0	; select bank0
  1280     0333  150C               	bsf	12,2	;volatile
  1281     0334                     l1937:
  1282                           
  1283                           ;main.c: 121:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1284     0334  3002               	movlw	2
  1285     0335  0140               	movlb	0	; select bank0
  1286     0336  00CC               	movwf	??_main+1
  1287     0337  3045               	movlw	69
  1288     0338  00CB               	movwf	??_main
  1289     0339  30A9               	movlw	169
  1290     033A                     u1577:
  1291     033A  0B89               	decfsz	9,f
  1292     033B  2B3A               	goto	u1577
  1293     033C  0BCB               	decfsz	??_main,f
  1294     033D  2B3A               	goto	u1577
  1295     033E  0BCC               	decfsz	??_main+1,f
  1296     033F  2B3A               	goto	u1577
  1297     0340  3200               	nop2
  1298     0341                     l1939:
  1299                           
  1300                           ;main.c: 122:     LoRa_setup();
  1301     0341  3184  2464  3183   	fcall	_LoRa_setup
  1302     0344                     l1941:
  1303                           
  1304                           ;main.c: 123:     PORTA &= !(1<<2);
  1305     0344  0140               	movlb	0	; select bank0
  1306     0345  018C               	clrf	12	;volatile
  1307     0346                     l1943:
  1308                           
  1309                           ;main.c: 126:     WDT_setup();
  1310     0346  3186  2654  3183   	fcall	_WDT_setup
  1311     0349                     l1945:
  1312                           
  1313                           ;main.c: 129:     uint8_t sleep_counter = 0;
  1314     0349  0140               	movlb	0	; select bank0
  1315     034A  01CE               	clrf	main@sleep_counter
  1316     034B                     l1947:
  1317                           
  1318                           ;main.c: 144:         AT_command("AT+LOWPOWER");
  1319     034B  30FB               	movlw	low (STR_13| (0+32768))
  1320     034C  00F8               	movwf	AT_command@at_command
  1321     034D  3085               	movlw	high (STR_13| (0+32768))
  1322     034E  00F9               	movwf	AT_command@at_command+1
  1323     034F  3185  25BA  3183   	fcall	_AT_command
  1324     0352                     l1949:
  1325                           
  1326                           ;main.c: 145:         SLEEP_start();
  1327     0352  3186  265D  3183   	fcall	_SLEEP_start
  1328     0355                     l1951:
  1329                           
  1330                           ;main.c: 148:         sleep_counter++;
  1331     0355  3001               	movlw	1
  1332     0356  0140               	movlb	0	; select bank0
  1333     0357  00CB               	movwf	??_main
  1334     0358  084B               	movf	??_main,w
  1335     0359  07CE               	addwf	main@sleep_counter,f
  1336     035A                     l1953:
  1337                           
  1338                           ;main.c: 150:         if(sleep_counter >= 1){
  1339     035A  084E               	movf	main@sleep_counter,w
  1340     035B  1903               	btfsc	3,2
  1341     035C  2B5E               	goto	u1551
  1342     035D  2B5F               	goto	u1550
  1343     035E                     u1551:
  1344     035E  2B4B               	goto	l1947
  1345     035F                     u1550:
  1346     035F                     l1955:
  1347                           
  1348                           ;main.c: 152:             sleep_counter = 0;
  1349     035F  01CE               	clrf	main@sleep_counter
  1350     0360                     l1957:
  1351                           
  1352                           ;main.c: 154:             AT_command("Wake up !!");
  1353     0360  3013               	movlw	low (STR_1| (0+32768))
  1354     0361  00F8               	movwf	AT_command@at_command
  1355     0362  3086               	movlw	high (STR_1| (0+32768))
  1356     0363  00F9               	movwf	AT_command@at_command+1
  1357     0364  3185  25BA  3183   	fcall	_AT_command
  1358     0367                     l1959:
  1359                           
  1360                           ;main.c: 156:             if(!AT_command_check("AT+JOIN", "+JOIN: Joined already", 21)){
  1361     0367  3046               	movlw	low (STR_7| (0+32768))
  1362     0368  0140               	movlb	0	; select bank0
  1363     0369  00A0               	movwf	AT_command_check@at_command
  1364     036A  3086               	movlw	high (STR_7| (0+32768))
  1365     036B  00A1               	movwf	AT_command_check@at_command+1
  1366     036C  3022               	movlw	low (STR_8| (0+32768))
  1367     036D  00A2               	movwf	AT_command_check@expected_response
  1368     036E  3085               	movlw	high (STR_8| (0+32768))
  1369     036F  00A3               	movwf	AT_command_check@expected_response+1
  1370     0370  3015               	movlw	21
  1371     0371  00A4               	movwf	AT_command_check@response_size
  1372     0372  3184  2403  3183   	fcall	_AT_command_check
  1373     0375  3A00               	xorlw	0
  1374     0376  1D03               	skipz
  1375     0377  2B79               	goto	u1561
  1376     0378  2B7A               	goto	u1560
  1377     0379                     u1561:
  1378     0379  2B7D               	goto	l1963
  1379     037A                     u1560:
  1380     037A                     l1961:
  1381                           
  1382                           ;main.c: 158:                 LoRa_setup();
  1383     037A  3184  2464  3183   	fcall	_LoRa_setup
  1384     037D                     l1963:
  1385                           
  1386                           ;main.c: 163:             battery = Analog_read_percent();
  1387     037D  3184  24AE  3183   	fcall	_Analog_read_percent
  1388     0380  0140               	movlb	0	; select bank0
  1389     0381  00CD               	movwf	main@battery
  1390     0382                     l1965:
  1391                           
  1392                           ;main.c: 166:             LoRa_send_data(0x2525, 0x2323, battery);
  1393     0382  3025               	movlw	37
  1394     0383  00A0               	movwf	LoRa_send_data@temperature
  1395     0384  3025               	movlw	37
  1396     0385  00A1               	movwf	LoRa_send_data@temperature+1
  1397     0386  3023               	movlw	35
  1398     0387  00A2               	movwf	LoRa_send_data@humidity
  1399     0388  3023               	movlw	35
  1400     0389  00A3               	movwf	LoRa_send_data@humidity+1
  1401     038A  084D               	movf	main@battery,w
  1402     038B  00A4               	movwf	LoRa_send_data@battery
  1403     038C  3184  24E5  3183   	fcall	_LoRa_send_data
  1404     038F  2B4B               	goto	l1947
  1405     0390  3180  282B         	ljmp	start
  1406     0392                     __end_of_main:
  1407                           
  1408                           	psect	text1
  1409     0654                     __ptext1:	
  1410 ;; *************** function _WDT_setup *****************
  1411 ;; Defined at:
  1412 ;;		line 4 in file "./watchdog_driver.h"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440     0654                     _WDT_setup:	
  1441                           ;psect for function _WDT_setup
  1442                           
  1443     0654                     l1691:	
  1444                           ;incstack = 0
  1445                           ; Regs used in _WDT_setup: [wreg+status,2+status,0]
  1446                           
  1447                           
  1448                           ;./watchdog_driver.h: 7:     WDTCONbits.PS = 0b10000;
  1449     0654  0143               	movlb	3	; select bank3
  1450     0655  080C               	movf	12,w	;volatile
  1451     0656  39C1               	andlw	-63
  1452     0657  3820               	iorlw	32
  1453     0658  008C               	movwf	12	;volatile
  1454     0659                     l79:
  1455     0659  0008               	return
  1456     065A                     __end_of_WDT_setup:
  1457                           
  1458                           	psect	text2
  1459     065D                     __ptext2:	
  1460 ;; *************** function _SLEEP_start *****************
  1461 ;; Defined at:
  1462 ;;		line 10 in file "./watchdog_driver.h"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		None
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;Total ram usage:        0 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490     065D                     _SLEEP_start:	
  1491                           ;psect for function _SLEEP_start
  1492                           
  1493     065D                     l1693:	
  1494                           ;incstack = 0
  1495                           ; Regs used in _SLEEP_start: []
  1496                           
  1497     065D  0064               	clrwdt	;# 
  1498     065E  0063               	sleep	;# 
  1499     065F                     l82:
  1500     065F  0008               	return
  1501     0660                     __end_of_SLEEP_start:
  1502                           
  1503                           	psect	text3
  1504     0464                     __ptext3:	
  1505 ;; *************** function _LoRa_setup *****************
  1506 ;; Defined at:
  1507 ;;		line 8 in file "./lora_driver.h"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;Total ram usage:        2 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 4
  1528 ;; This function calls:
  1529 ;;		_AT_command
  1530 ;;		_AT_command_check
  1531 ;;		_EUSART_print
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537     0464                     _LoRa_setup:	
  1538                           ;psect for function _LoRa_setup
  1539                           
  1540     0464                     l1899:	
  1541                           ;incstack = 0
  1542                           ; Regs used in _LoRa_setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1543                           
  1544                           
  1545                           ;./lora_driver.h: 10:     AT_command("Wake up !!");
  1546     0464  3013               	movlw	low (STR_1| (0+32768))
  1547     0465  00F8               	movwf	AT_command@at_command
  1548     0466  3086               	movlw	high (STR_1| (0+32768))
  1549     0467  00F9               	movwf	AT_command@at_command+1
  1550     0468  3185  25BA  3184   	fcall	_AT_command
  1551     046B                     l1901:
  1552                           
  1553                           ;./lora_driver.h: 12:     if(!AT_command_check("AT", "+AT: OK", 7)){
  1554     046B  305A               	movlw	low (STR_2| (0+32768))
  1555     046C  0140               	movlb	0	; select bank0
  1556     046D  00A0               	movwf	AT_command_check@at_command
  1557     046E  3086               	movlw	high (STR_2| (0+32768))
  1558     046F  00A1               	movwf	AT_command_check@at_command+1
  1559     0470  303E               	movlw	low (STR_3| (0+32768))
  1560     0471  00A2               	movwf	AT_command_check@expected_response
  1561     0472  3086               	movlw	high (STR_3| (0+32768))
  1562     0473  00A3               	movwf	AT_command_check@expected_response+1
  1563     0474  3007               	movlw	7
  1564     0475  00A4               	movwf	AT_command_check@response_size
  1565     0476  3184  2403  3184   	fcall	_AT_command_check
  1566     0479  3A00               	xorlw	0
  1567     047A  1D03               	skipz
  1568     047B  2C7D               	goto	u1531
  1569     047C  2C7E               	goto	u1530
  1570     047D                     u1531:
  1571     047D  2C93               	goto	l1907
  1572     047E                     u1530:
  1573     047E                     l1903:
  1574                           
  1575                           ;./lora_driver.h: 13:         EUSART_print("RX/TX Fail");
  1576     047E  3029               	movlw	low (STR_6| (0+32768))
  1577     047F  00F2               	movwf	EUSART_print@string
  1578     0480  3086               	movlw	high (STR_6| (0+32768))
  1579     0481  00F3               	movwf	EUSART_print@string+1
  1580     0482  3185  2538  3184   	fcall	_EUSART_print
  1581     0485  2C93               	goto	l1907
  1582     0486                     l1905:
  1583                           
  1584                           ;./lora_driver.h: 17:         _delay((unsigned long)((20000)*(1000000/4000.0)));
  1585     0486  301A               	movlw	26
  1586     0487  0140               	movlb	0	; select bank0
  1587     0488  00A6               	movwf	??_LoRa_setup+1
  1588     0489  305E               	movlw	94
  1589     048A  00A5               	movwf	??_LoRa_setup
  1590     048B  306E               	movlw	110
  1591     048C                     u1587:
  1592     048C  0B89               	decfsz	9,f
  1593     048D  2C8C               	goto	u1587
  1594     048E  0BA5               	decfsz	??_LoRa_setup,f
  1595     048F  2C8C               	goto	u1587
  1596     0490  0BA6               	decfsz	??_LoRa_setup+1,f
  1597     0491  2C8C               	goto	u1587
  1598     0492  0000               	nop
  1599     0493                     l1907:
  1600                           
  1601                           ;./lora_driver.h: 16:     while(!AT_command_check("AT+JOIN", "+JOIN: Joined already", 21
      +                          )){
  1602     0493  3046               	movlw	low (STR_7| (0+32768))
  1603     0494  0140               	movlb	0	; select bank0
  1604     0495  00A0               	movwf	AT_command_check@at_command
  1605     0496  3086               	movlw	high (STR_7| (0+32768))
  1606     0497  00A1               	movwf	AT_command_check@at_command+1
  1607     0498  3022               	movlw	low (STR_8| (0+32768))
  1608     0499  00A2               	movwf	AT_command_check@expected_response
  1609     049A  3085               	movlw	high (STR_8| (0+32768))
  1610     049B  00A3               	movwf	AT_command_check@expected_response+1
  1611     049C  3015               	movlw	21
  1612     049D  00A4               	movwf	AT_command_check@response_size
  1613     049E  3184  2403  3184   	fcall	_AT_command_check
  1614     04A1  3A00               	xorlw	0
  1615     04A2  1903               	skipnz
  1616     04A3  2CA5               	goto	u1541
  1617     04A4  2CA6               	goto	u1540
  1618     04A5                     u1541:
  1619     04A5  2C86               	goto	l1905
  1620     04A6                     u1540:
  1621     04A6                     l1909:
  1622                           
  1623                           ;./lora_driver.h: 19:     EUSART_print("Connected !");
  1624     04A6  30EF               	movlw	low (STR_11| (0+32768))
  1625     04A7  00F2               	movwf	EUSART_print@string
  1626     04A8  3085               	movlw	high (STR_11| (0+32768))
  1627     04A9  00F3               	movwf	EUSART_print@string+1
  1628     04AA  3185  2538  3184   	fcall	_EUSART_print
  1629     04AD                     l183:
  1630     04AD  0008               	return
  1631     04AE                     __end_of_LoRa_setup:
  1632                           
  1633                           	psect	text4
  1634     0403                     __ptext4:	
  1635 ;; *************** function _AT_command_check *****************
  1636 ;; Defined at:
  1637 ;;		line 37 in file "./lora_driver.h"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  at_command      2    0[BANK0 ] PTR const unsigned char 
  1640 ;;		 -> STR_17(8), STR_9(8), STR_4(3), 
  1641 ;;  expected_res    2    2[BANK0 ] PTR const unsigned char 
  1642 ;;		 -> STR_18(22), STR_10(22), STR_5(8), 
  1643 ;;  response_siz    1    4[BANK0 ] unsigned char 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  i               1   11[COMMON] unsigned char 
  1646 ;;  tmp             1    0        unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      unsigned char 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1656 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1658 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1659 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1660 ;;Total ram usage:        9 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 3
  1663 ;; This function calls:
  1664 ;;		_EUSART_clear_buffer
  1665 ;;		_EUSART_print
  1666 ;;		_EUSART_write
  1667 ;; This function is called by:
  1668 ;;		_LoRa_setup
  1669 ;;		_main
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673     0403                     _AT_command_check:	
  1674                           ;psect for function _AT_command_check
  1675                           
  1676     0403                     l1865:	
  1677                           ;incstack = 0
  1678                           ; Regs used in _AT_command_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1679                           
  1680                           
  1681                           ;./lora_driver.h: 39:     EUSART_clear_buffer(RX_buffer, 80);
  1682     0403  3050               	movlw	80
  1683     0404  00F1               	movwf	EUSART_clear_buffer@size
  1684     0405  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
  1685     0406  3185  25A5  3184   	fcall	_EUSART_clear_buffer
  1686     0409                     l1867:
  1687                           
  1688                           ;./lora_driver.h: 40:     RX_index = 0;
  1689     0409  01FC               	clrf	_RX_index
  1690                           
  1691                           ;./lora_driver.h: 42:     uint8_t tmp;;./lora_driver.h: 43:     while(PIR3bits.RC2IF){
  1692     040A  2C0D               	goto	l1871
  1693     040B                     l1869:
  1694     040B  014C               	movlb	12	; select bank12
  1695     040C  0816               	movf	22,w	;volatile
  1696     040D                     l1871:
  1697                           
  1698                           ;./lora_driver.h: 43:     while(PIR3bits.RC2IF){
  1699     040D  0141               	movlb	1	; select bank1
  1700     040E  1A8F               	btfsc	15,5	;volatile
  1701     040F  2C11               	goto	u1491
  1702     0410  2C12               	goto	u1490
  1703     0411                     u1491:
  1704     0411  2C0B               	goto	l1869
  1705     0412                     u1490:
  1706     0412                     l191:
  1707                           
  1708                           ;./lora_driver.h: 46:     RC2STAbits.CREN = 0;
  1709     0412  014C               	movlb	12	; select bank12
  1710     0413  121A               	bcf	26,4	;volatile
  1711                           
  1712                           ;./lora_driver.h: 47:     RC2STAbits.CREN = 1;
  1713     0414  161A               	bsf	26,4	;volatile
  1714                           
  1715                           ;./lora_driver.h: 49:     PIE3bits.RC2IE = 1;
  1716     0415  0141               	movlb	1	; select bank1
  1717     0416  1699               	bsf	25,5	;volatile
  1718     0417                     l1873:
  1719                           
  1720                           ;./lora_driver.h: 51:     EUSART_print(at_command);
  1721     0417  0140               	movlb	0	; select bank0
  1722     0418  0821               	movf	AT_command_check@at_command+1,w
  1723     0419  00F3               	movwf	EUSART_print@string+1
  1724     041A  0820               	movf	AT_command_check@at_command,w
  1725     041B  00F2               	movwf	EUSART_print@string
  1726     041C  3185  2538  3184   	fcall	_EUSART_print
  1727     041F                     l1875:
  1728                           
  1729                           ;./lora_driver.h: 52:     EUSART_write(0x0A);
  1730     041F  300A               	movlw	10
  1731     0420  3186  2634  3184   	fcall	_EUSART_write
  1732     0423                     l1877:	
  1733                           ;./lora_driver.h: 55:     while(RX_index < response_size+2);
  1734                           
  1735     0423  0140               	movlb	0	; select bank0
  1736     0424  0824               	movf	AT_command_check@response_size,w
  1737     0425  3E02               	addlw	2
  1738     0426  00F8               	movwf	??_AT_command_check
  1739     0427  3000               	movlw	0
  1740     0428  1803               	skipnc
  1741     0429  3001               	movlw	1
  1742     042A  00F9               	movwf	??_AT_command_check+1
  1743     042B  0879               	movf	??_AT_command_check+1,w
  1744     042C  3A80               	xorlw	128
  1745     042D  3C80               	sublw	128
  1746     042E  1D03               	skipz
  1747     042F  2C32               	goto	u1505
  1748     0430  0878               	movf	??_AT_command_check,w
  1749     0431  027C               	subwf	_RX_index,w
  1750     0432                     u1505:
  1751     0432  1C03               	skipc
  1752     0433  2C35               	goto	u1501
  1753     0434  2C36               	goto	u1500
  1754     0435                     u1501:
  1755     0435  2C23               	goto	l1877
  1756     0436                     u1500:
  1757     0436                     l1879:
  1758                           
  1759                           ;./lora_driver.h: 56:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1760     0436  30FA               	movlw	250
  1761     0437                     u1597:
  1762     0437  3200               	nop2
  1763     0438  0B89               	decfsz	9,f
  1764     0439  2C37               	goto	u1597
  1765     043A                     l1881:
  1766                           
  1767                           ;./lora_driver.h: 58:     PIE3bits.RC2IE = 0;
  1768     043A  0141               	movlb	1	; select bank1
  1769     043B  1299               	bcf	25,5	;volatile
  1770     043C                     l1883:
  1771                           
  1772                           ;./lora_driver.h: 59:     for(uint8_t i=0; i<response_size; i++){
  1773     043C  01FB               	clrf	AT_command_check@i
  1774     043D  2C5B               	goto	l1893
  1775     043E                     l1885:
  1776                           
  1777                           ;./lora_driver.h: 61:         if(RX_buffer[i] != expected_response[i]){
  1778     043E  0823               	movf	AT_command_check@expected_response+1,w
  1779     043F  00F9               	movwf	??_AT_command_check+1
  1780     0440  0822               	movf	AT_command_check@expected_response,w
  1781     0441  00F8               	movwf	??_AT_command_check
  1782     0442  087B               	movf	AT_command_check@i,w
  1783     0443  0778               	addwf	??_AT_command_check,w
  1784     0444  0084               	movwf	4
  1785     0445  0879               	movf	??_AT_command_check+1,w
  1786     0446  1803               	skipnc
  1787     0447  0A79               	incf	??_AT_command_check+1,w
  1788     0448  0085               	movwf	5
  1789     0449  0800               	movf	0,w	;code access
  1790     044A  00FA               	movwf	??_AT_command_check+2
  1791     044B  087B               	movf	AT_command_check@i,w
  1792     044C  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  1793     044D  0086               	movwf	6
  1794     044E  0187               	clrf	7
  1795     044F  0801               	movf	1,w
  1796     0450  067A               	xorwf	??_AT_command_check+2,w
  1797     0451  1903               	skipnz
  1798     0452  2C54               	goto	u1511
  1799     0453  2C55               	goto	u1510
  1800     0454                     u1511:
  1801     0454  2C57               	goto	l1891
  1802     0455                     u1510:
  1803     0455                     l1887:
  1804                           
  1805                           ;./lora_driver.h: 62:             return 0;
  1806     0455  3000               	movlw	0
  1807     0456  2C63               	goto	l198
  1808     0457                     l1891:
  1809                           
  1810                           ;./lora_driver.h: 64:     }
  1811     0457  3001               	movlw	1
  1812     0458  00F8               	movwf	??_AT_command_check
  1813     0459  0878               	movf	??_AT_command_check,w
  1814     045A  07FB               	addwf	AT_command_check@i,f
  1815     045B                     l1893:
  1816     045B  0140               	movlb	0	; select bank0
  1817     045C  0824               	movf	AT_command_check@response_size,w
  1818     045D  027B               	subwf	AT_command_check@i,w
  1819     045E  1C03               	skipc
  1820     045F  2C61               	goto	u1521
  1821     0460  2C62               	goto	u1520
  1822     0461                     u1521:
  1823     0461  2C3E               	goto	l1885
  1824     0462                     u1520:
  1825     0462                     l1895:
  1826                           
  1827                           ;./lora_driver.h: 65:     return 1;
  1828     0462  3001               	movlw	1
  1829     0463                     l198:
  1830     0463  0008               	return
  1831     0464                     __end_of_AT_command_check:
  1832                           
  1833                           	psect	text5
  1834     05A5                     __ptext5:	
  1835 ;; *************** function _EUSART_clear_buffer *****************
  1836 ;; Defined at:
  1837 ;;		line 69 in file "./eusart_driver.h"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  buffer          1    wreg     PTR unsigned char 
  1840 ;;		 -> RX_buffer(80), 
  1841 ;;  size            1    1[COMMON] unsigned char 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  buffer          1    3[COMMON] PTR unsigned char 
  1844 ;;		 -> RX_buffer(80), 
  1845 ;;  i               1    4[COMMON] unsigned char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1855 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1859 ;;Total ram usage:        4 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_AT_command_check
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870     05A5                     _EUSART_clear_buffer:	
  1871                           ;psect for function _EUSART_clear_buffer
  1872                           
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in _EUSART_clear_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1876                           ;EUSART_clear_buffer@buffer stored from wreg
  1877     05A5  00F3               	movwf	EUSART_clear_buffer@buffer
  1878     05A6                     l1843:
  1879                           
  1880                           ;./eusart_driver.h: 70:     for(uint8_t i=0; i<size; i++){
  1881     05A6  01F4               	clrf	EUSART_clear_buffer@i
  1882     05A7  2DB3               	goto	l1849
  1883     05A8                     l1845:
  1884                           
  1885                           ;./eusart_driver.h: 71:         buffer[i] = 0;
  1886     05A8  0874               	movf	EUSART_clear_buffer@i,w
  1887     05A9  0773               	addwf	EUSART_clear_buffer@buffer,w
  1888     05AA  00F2               	movwf	??_EUSART_clear_buffer
  1889     05AB  0872               	movf	??_EUSART_clear_buffer,w
  1890     05AC  0086               	movwf	6
  1891     05AD  0187               	clrf	7
  1892     05AE  0181               	clrf	1
  1893     05AF                     l1847:
  1894                           
  1895                           ;./eusart_driver.h: 72:     }
  1896     05AF  3001               	movlw	1
  1897     05B0  00F2               	movwf	??_EUSART_clear_buffer
  1898     05B1  0872               	movf	??_EUSART_clear_buffer,w
  1899     05B2  07F4               	addwf	EUSART_clear_buffer@i,f
  1900     05B3                     l1849:
  1901     05B3  0871               	movf	EUSART_clear_buffer@size,w
  1902     05B4  0274               	subwf	EUSART_clear_buffer@i,w
  1903     05B5  1C03               	skipc
  1904     05B6  2DB8               	goto	u1471
  1905     05B7  2DB9               	goto	u1470
  1906     05B8                     u1471:
  1907     05B8  2DA8               	goto	l1845
  1908     05B9                     u1470:
  1909     05B9                     l117:
  1910     05B9  0008               	return
  1911     05BA                     __end_of_EUSART_clear_buffer:
  1912                           
  1913                           	psect	text6
  1914     05BA                     __ptext6:	
  1915 ;; *************** function _AT_command *****************
  1916 ;; Defined at:
  1917 ;;		line 68 in file "./lora_driver.h"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  at_command      2    8[COMMON] PTR const unsigned char 
  1920 ;;		 -> STR_14(11), STR_13(12), STR_1(11), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;Total ram usage:        3 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 3
  1939 ;; This function calls:
  1940 ;;		_EUSART_print
  1941 ;;		_EUSART_write
  1942 ;; This function is called by:
  1943 ;;		_LoRa_setup
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948     05BA                     _AT_command:	
  1949                           ;psect for function _AT_command
  1950                           
  1951     05BA                     l1859:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _AT_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1954                           
  1955                           
  1956                           ;./lora_driver.h: 69:     EUSART_print(at_command);
  1957     05BA  0879               	movf	AT_command@at_command+1,w
  1958     05BB  00F3               	movwf	EUSART_print@string+1
  1959     05BC  0878               	movf	AT_command@at_command,w
  1960     05BD  00F2               	movwf	EUSART_print@string
  1961     05BE  3185  2538  3185   	fcall	_EUSART_print
  1962     05C1                     l1861:
  1963                           
  1964                           ;./lora_driver.h: 70:     EUSART_write(0x0A);
  1965     05C1  300A               	movlw	10
  1966     05C2  3186  2634  3185   	fcall	_EUSART_write
  1967     05C5                     l1863:
  1968                           
  1969                           ;./lora_driver.h: 71:     _delay((unsigned long)((20)*(1000000/4000.0)));
  1970     05C5  3007               	movlw	7
  1971     05C6  00FA               	movwf	??_AT_command
  1972     05C7  307D               	movlw	125
  1973     05C8                     u1607:
  1974     05C8  0B89               	decfsz	9,f
  1975     05C9  2DC8               	goto	u1607
  1976     05CA  0BFA               	decfsz	??_AT_command,f
  1977     05CB  2DC8               	goto	u1607
  1978     05CC  0000               	nop
  1979     05CD                     l202:
  1980     05CD  0008               	return
  1981     05CE                     __end_of_AT_command:
  1982                           
  1983                           	psect	text7
  1984     04E5                     __ptext7:	
  1985 ;; *************** function _LoRa_send_data *****************
  1986 ;; Defined at:
  1987 ;;		line 22 in file "./lora_driver.h"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  temperature     2    0[BANK0 ] unsigned short 
  1990 ;;  humidity        2    2[BANK0 ] unsigned short 
  1991 ;;  battery         1    4[BANK0 ] unsigned char 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2003 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2006 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;Total ram usage:        6 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 3
  2010 ;; This function calls:
  2011 ;;		_EUSART_print
  2012 ;;		_EUSART_print_hex
  2013 ;;		_EUSART_write
  2014 ;; This function is called by:
  2015 ;;		_main
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019     04E5                     _LoRa_send_data:	
  2020                           ;psect for function _LoRa_send_data
  2021                           
  2022     04E5                     l1911:	
  2023                           ;incstack = 0
  2024                           ; Regs used in _LoRa_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2025                           
  2026                           
  2027                           ;./lora_driver.h: 23:     EUSART_print("AT+MSGHEX=");
  2028     04E5  301E               	movlw	low (STR_12| (0+32768))
  2029     04E6  00F2               	movwf	EUSART_print@string
  2030     04E7  3086               	movlw	high (STR_12| (0+32768))
  2031     04E8  00F3               	movwf	EUSART_print@string+1
  2032     04E9  3185  2538  3184   	fcall	_EUSART_print
  2033                           
  2034                           ;./lora_driver.h: 25:     EUSART_print_hex(temperature&0xFF);
  2035     04EC  0140               	movlb	0	; select bank0
  2036     04ED  0820               	movf	LoRa_send_data@temperature,w
  2037     04EE  3185  255E  3184   	fcall	_EUSART_print_hex
  2038                           
  2039                           ;./lora_driver.h: 26:     EUSART_print_hex((temperature >> 8)&0xFF);
  2040     04F1  0140               	movlb	0	; select bank0
  2041     04F2  0821               	movf	LoRa_send_data@temperature+1,w
  2042     04F3  3185  255E  3184   	fcall	_EUSART_print_hex
  2043                           
  2044                           ;./lora_driver.h: 28:     EUSART_print_hex(humidity&0xFF);
  2045     04F6  0140               	movlb	0	; select bank0
  2046     04F7  0822               	movf	LoRa_send_data@humidity,w
  2047     04F8  3185  255E  3184   	fcall	_EUSART_print_hex
  2048                           
  2049                           ;./lora_driver.h: 29:     EUSART_print_hex((humidity >> 8)&0xFF);
  2050     04FB  0140               	movlb	0	; select bank0
  2051     04FC  0823               	movf	LoRa_send_data@humidity+1,w
  2052     04FD  3185  255E  3184   	fcall	_EUSART_print_hex
  2053                           
  2054                           ;./lora_driver.h: 31:     EUSART_print_hex(battery);
  2055     0500  0140               	movlb	0	; select bank0
  2056     0501  0824               	movf	LoRa_send_data@battery,w
  2057     0502  3185  255E  3184   	fcall	_EUSART_print_hex
  2058     0505                     l1913:
  2059                           
  2060                           ;./lora_driver.h: 33:     EUSART_write(0x0A);
  2061     0505  300A               	movlw	10
  2062     0506  3186  2634  3184   	fcall	_EUSART_write
  2063     0509                     l1915:
  2064                           
  2065                           ;./lora_driver.h: 34:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2066     0509  3007               	movlw	7
  2067     050A  00F8               	movwf	??_LoRa_send_data
  2068     050B  307D               	movlw	125
  2069     050C                     u1617:
  2070     050C  0B89               	decfsz	9,f
  2071     050D  2D0C               	goto	u1617
  2072     050E  0BF8               	decfsz	??_LoRa_send_data,f
  2073     050F  2D0C               	goto	u1617
  2074     0510  0000               	nop
  2075     0511                     l186:
  2076     0511  0008               	return
  2077     0512                     __end_of_LoRa_send_data:
  2078                           
  2079                           	psect	text8
  2080     055E                     __ptext8:	
  2081 ;; *************** function _EUSART_print_hex *****************
  2082 ;; Defined at:
  2083 ;;		line 61 in file "./eusart_driver.h"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  number          1    wreg     unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  number          1    3[COMMON] unsigned char 
  2088 ;;  a               1    4[COMMON] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2101 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2102 ;;Total ram usage:        3 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 2
  2105 ;; This function calls:
  2106 ;;		_EUSART_write
  2107 ;; This function is called by:
  2108 ;;		_LoRa_send_data
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112     055E                     _EUSART_print_hex:	
  2113                           ;psect for function _EUSART_print_hex
  2114                           
  2115                           
  2116                           ;incstack = 0
  2117                           ; Regs used in _EUSART_print_hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2118                           ;EUSART_print_hex@number stored from wreg
  2119     055E  00F3               	movwf	EUSART_print_hex@number
  2120     055F                     l1851:
  2121                           
  2122                           ;./eusart_driver.h: 62:     const char ref[] = {'0','1','2','3','4','5','6','7','8','9',
      +                          'A','B','C','D','E','F'};;./eusart_driver.h: 63:     uint8_t a = (number >> 4)&0b0000111
      +                          1;
  2123     055F  0873               	movf	EUSART_print_hex@number,w
  2124     0560  00F2               	movwf	??_EUSART_print_hex
  2125     0561  3004               	movlw	4
  2126     0562                     u1485:
  2127     0562  36F2               	lsrf	??_EUSART_print_hex,f
  2128     0563  0B89               	decfsz	9,f
  2129     0564  2D62               	goto	u1485
  2130     0565  0872               	movf	??_EUSART_print_hex,w
  2131     0566  390F               	andlw	15
  2132     0567  00F4               	movwf	EUSART_print_hex@a
  2133     0568                     l1853:
  2134                           
  2135                           ;./eusart_driver.h: 64:     EUSART_write(ref[a]);
  2136     0568  0874               	movf	EUSART_print_hex@a,w
  2137     0569  3E12               	addlw	low (EUSART_print_hex@ref| (0+32768))
  2138     056A  0084               	movwf	4
  2139     056B  3085               	movlw	high (EUSART_print_hex@ref| (0+32768))
  2140     056C  1803               	skipnc
  2141     056D  3E01               	addlw	1
  2142     056E  0085               	movwf	5
  2143     056F  0800               	movf	0,w	;code access
  2144     0570  3186  2634  3185   	fcall	_EUSART_write
  2145     0573                     l1855:
  2146                           
  2147                           ;./eusart_driver.h: 65:     a = number & 0b00001111;
  2148     0573  0873               	movf	EUSART_print_hex@number,w
  2149     0574  390F               	andlw	15
  2150     0575  00F4               	movwf	EUSART_print_hex@a
  2151     0576                     l1857:
  2152                           
  2153                           ;./eusart_driver.h: 66:     EUSART_write(ref[a]);
  2154     0576  0874               	movf	EUSART_print_hex@a,w
  2155     0577  3E12               	addlw	low (EUSART_print_hex@ref| (0+32768))
  2156     0578  0084               	movwf	4
  2157     0579  3085               	movlw	high (EUSART_print_hex@ref| (0+32768))
  2158     057A  1803               	skipnc
  2159     057B  3E01               	addlw	1
  2160     057C  0085               	movwf	5
  2161     057D  0800               	movf	0,w	;code access
  2162     057E  3186  2634  3185   	fcall	_EUSART_write
  2163     0581                     l111:
  2164     0581  0008               	return
  2165     0582                     __end_of_EUSART_print_hex:
  2166                           
  2167                           	psect	text9
  2168     0538                     __ptext9:	
  2169 ;; *************** function _EUSART_print *****************
  2170 ;; Defined at:
  2171 ;;		line 44 in file "./eusart_driver.h"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  string          2    2[COMMON] PTR const unsigned char 
  2174 ;;		 -> STR_17(8), STR_14(11), STR_13(12), STR_12(11), 
  2175 ;;		 -> STR_11(12), STR_9(8), STR_6(11), STR_4(3), 
  2176 ;;		 -> STR_1(11), 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  c               1    7[COMMON] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;Total ram usage:        6 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 2
  2195 ;; This function calls:
  2196 ;;		_EUSART_write
  2197 ;; This function is called by:
  2198 ;;		_LoRa_setup
  2199 ;;		_LoRa_send_data
  2200 ;;		_AT_command_check
  2201 ;;		_AT_command
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205     0538                     _EUSART_print:	
  2206                           ;psect for function _EUSART_print
  2207                           
  2208     0538                     l1835:	
  2209                           ;incstack = 0
  2210                           ; Regs used in _EUSART_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2211                           
  2212                           
  2213                           ;./eusart_driver.h: 45:     uint8_t c=0;
  2214     0538  01F7               	clrf	EUSART_print@c
  2215                           
  2216                           ;./eusart_driver.h: 46:     while(string[c]!=0){
  2217     0539  2D4D               	goto	l1841
  2218     053A                     l1837:
  2219                           
  2220                           ;./eusart_driver.h: 47:         EUSART_write(string[c]);
  2221     053A  0873               	movf	EUSART_print@string+1,w
  2222     053B  00F5               	movwf	??_EUSART_print+1
  2223     053C  0872               	movf	EUSART_print@string,w
  2224     053D  00F4               	movwf	??_EUSART_print
  2225     053E  0877               	movf	EUSART_print@c,w
  2226     053F  0774               	addwf	??_EUSART_print,w
  2227     0540  0084               	movwf	4
  2228     0541  0875               	movf	??_EUSART_print+1,w
  2229     0542  1803               	skipnc
  2230     0543  0A75               	incf	??_EUSART_print+1,w
  2231     0544  0085               	movwf	5
  2232     0545  0800               	movf	0,w	;code access
  2233     0546  3186  2634  3185   	fcall	_EUSART_write
  2234     0549                     l1839:
  2235                           
  2236                           ;./eusart_driver.h: 48:         c++;
  2237     0549  3001               	movlw	1
  2238     054A  00F4               	movwf	??_EUSART_print
  2239     054B  0874               	movf	??_EUSART_print,w
  2240     054C  07F7               	addwf	EUSART_print@c,f
  2241     054D                     l1841:
  2242                           
  2243                           ;./eusart_driver.h: 46:     while(string[c]!=0){
  2244     054D  0873               	movf	EUSART_print@string+1,w
  2245     054E  00F5               	movwf	??_EUSART_print+1
  2246     054F  0872               	movf	EUSART_print@string,w
  2247     0550  00F4               	movwf	??_EUSART_print
  2248     0551  0877               	movf	EUSART_print@c,w
  2249     0552  0774               	addwf	??_EUSART_print,w
  2250     0553  0084               	movwf	4
  2251     0554  0875               	movf	??_EUSART_print+1,w
  2252     0555  1803               	skipnc
  2253     0556  0A75               	incf	??_EUSART_print+1,w
  2254     0557  0085               	movwf	5
  2255     0558  0012               	moviw fsr0++
  2256     0559  1D03               	btfss	3,2
  2257     055A  2D5C               	goto	u1461
  2258     055B  2D5D               	goto	u1460
  2259     055C                     u1461:
  2260     055C  2D3A               	goto	l1837
  2261     055D                     u1460:
  2262     055D                     l103:
  2263     055D  0008               	return
  2264     055E                     __end_of_EUSART_print:
  2265                           
  2266                           	psect	text10
  2267     0634                     __ptext10:	
  2268 ;; *************** function _EUSART_write *****************
  2269 ;; Defined at:
  2270 ;;		line 34 in file "./eusart_driver.h"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  txData          1    wreg     unsigned char 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  txData          1    1[COMMON] unsigned char 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;Total ram usage:        1 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_EUSART_print
  2295 ;;		_EUSART_print_hex
  2296 ;;		_LoRa_send_data
  2297 ;;		_AT_command_check
  2298 ;;		_AT_command
  2299 ;;		_EUSART_print_dec
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303     0634                     _EUSART_write:	
  2304                           ;psect for function _EUSART_write
  2305                           
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _EUSART_write: [wreg]
  2309                           ;EUSART_write@txData stored from wreg
  2310     0634  00F1               	movwf	EUSART_write@txData
  2311     0635                     l1831:
  2312     0635                     l88:	
  2313                           ;./eusart_driver.h: 35:     while(PIR3bits.TX2IF == 0){}
  2314                           
  2315     0635  0141               	movlb	1	; select bank1
  2316     0636  1E0F               	btfss	15,4	;volatile
  2317     0637  2E39               	goto	u1451
  2318     0638  2E3A               	goto	u1450
  2319     0639                     u1451:
  2320     0639  2E35               	goto	l88
  2321     063A                     u1450:
  2322     063A                     l1833:
  2323                           
  2324                           ;./eusart_driver.h: 36:     TX2REG = txData;
  2325     063A  0871               	movf	EUSART_write@txData,w
  2326     063B  014C               	movlb	12	; select bank12
  2327     063C  0097               	movwf	23	;volatile
  2328     063D                     l91:
  2329     063D  0008               	return
  2330     063E                     __end_of_EUSART_write:
  2331                           
  2332                           	psect	text11
  2333     05CE                     __ptext11:	
  2334 ;; *************** function _EUSART_setup *****************
  2335 ;; Defined at:
  2336 ;;		line 8 in file "./eusart_driver.h"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;Total ram usage:        0 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; Hardware stack levels required when called: 1
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364     05CE                     _EUSART_setup:	
  2365                           ;psect for function _EUSART_setup
  2366                           
  2367     05CE                     l1695:	
  2368                           ;incstack = 0
  2369                           ; Regs used in _EUSART_setup: [wreg+status,2]
  2370                           
  2371                           
  2372                           ;./eusart_driver.h: 10:     BAUD2CONbits.BRG16 = 1;
  2373     05CE  014C               	movlb	12	; select bank12
  2374     05CF  159C               	bsf	28,3	;volatile
  2375                           
  2376                           ;./eusart_driver.h: 12:     TX2STAbits.SYNC = 0;
  2377     05D0  121B               	bcf	27,4	;volatile
  2378                           
  2379                           ;./eusart_driver.h: 14:     TX2STAbits.TXEN = 1;
  2380     05D1  169B               	bsf	27,5	;volatile
  2381                           
  2382                           ;./eusart_driver.h: 16:     TX2STAbits.BRGH = 1;
  2383     05D2  151B               	bsf	27,2	;volatile
  2384                           
  2385                           ;./eusart_driver.h: 18:     RC2STAbits.CREN = 1;
  2386     05D3  161A               	bsf	26,4	;volatile
  2387                           
  2388                           ;./eusart_driver.h: 20:     RC2STAbits.SPEN = 1;
  2389     05D4  179A               	bsf	26,7	;volatile
  2390     05D5                     l1697:
  2391                           
  2392                           ;./eusart_driver.h: 22:     SP2BRGL = 25;
  2393     05D5  3019               	movlw	25
  2394     05D6  0098               	movwf	24	;volatile
  2395     05D7                     l1699:
  2396                           
  2397                           ;./eusart_driver.h: 23:     SP2BRGH = 0;
  2398     05D7  0199               	clrf	25	;volatile
  2399     05D8                     l1701:
  2400                           
  2401                           ;./eusart_driver.h: 25:     RA5PPS = 0x11;
  2402     05D8  3011               	movlw	17
  2403     05D9  017B               	movlb	59	; select bank59
  2404     05DA  0091               	movwf	17	;volatile
  2405     05DB                     l1703:
  2406                           
  2407                           ;./eusart_driver.h: 27:     RX2PPS = 0x4;
  2408     05DB  3004               	movlw	4
  2409     05DC  017C               	movlb	60	; select bank60
  2410     05DD  00C3               	movwf	67	;volatile
  2411     05DE                     l1705:
  2412                           
  2413                           ;./eusart_driver.h: 29:     TRISAbits.TRISA5 = 0;
  2414     05DE  0140               	movlb	0	; select bank0
  2415     05DF  1292               	bcf	18,5	;volatile
  2416     05E0                     l1707:
  2417                           
  2418                           ;./eusart_driver.h: 31:     TRISAbits.TRISA4 = 1;
  2419     05E0  1612               	bsf	18,4	;volatile
  2420     05E1                     l85:
  2421     05E1  0008               	return
  2422     05E2                     __end_of_EUSART_setup:
  2423                           
  2424                           	psect	text12
  2425     05E2                     __ptext12:	
  2426 ;; *************** function _Analog_setup *****************
  2427 ;; Defined at:
  2428 ;;		line 7 in file "./analog_driver.h"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 1
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456     05E2                     _Analog_setup:	
  2457                           ;psect for function _Analog_setup
  2458                           
  2459     05E2                     l1709:	
  2460                           ;incstack = 0
  2461                           ; Regs used in _Analog_setup: [wreg+status,2+status,0]
  2462                           
  2463                           
  2464                           ;./analog_driver.h: 9:     TRISA |= (1<<0);
  2465     05E2  0140               	movlb	0	; select bank0
  2466     05E3  1412               	bsf	18,0	;volatile
  2467                           
  2468                           ;./analog_driver.h: 10:     ANSELA |= (1<<0);
  2469     05E4  017D               	movlb	61	; select bank61
  2470     05E5  140C               	bsf	12,0	;volatile
  2471     05E6                     l1711:
  2472                           
  2473                           ;./analog_driver.h: 11:     ADPCH = 0 & 0b00111111;
  2474     05E6  017A               	movlb	58	; select bank58
  2475     05E7  019F               	clrf	31	;volatile
  2476                           
  2477                           ;./analog_driver.h: 12:     ADREF = 0x0;
  2478     05E8  01AB               	clrf	43	;volatile
  2479     05E9                     l1713:
  2480                           
  2481                           ;./analog_driver.h: 13:     ADCON0bits.CS = 1;
  2482     05E9  1626               	bsf	38,4	;volatile
  2483     05EA                     l1715:
  2484                           
  2485                           ;./analog_driver.h: 14:     ADCON0bits.FM = 1;
  2486     05EA  0826               	movf	38,w	;volatile
  2487     05EB  39F3               	andlw	-13
  2488     05EC  3804               	iorlw	4
  2489     05ED  00A6               	movwf	38	;volatile
  2490     05EE                     l164:
  2491     05EE  0008               	return
  2492     05EF                     __end_of_Analog_setup:
  2493                           
  2494                           	psect	text13
  2495     04AE                     __ptext13:	
  2496 ;; *************** function _Analog_read_percent *****************
  2497 ;; Defined at:
  2498 ;;		line 31 in file "./analog_driver.h"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  a               2   40[BANK0 ] unsigned short 
  2503 ;;  r               1   42[BANK0 ] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      unsigned char 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, pclath, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2517 ;;Total ram usage:        3 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 3
  2520 ;; This function calls:
  2521 ;;		_Analog_read_raw
  2522 ;;		___flmul
  2523 ;;		___fltol
  2524 ;;		___xxtofl
  2525 ;; This function is called by:
  2526 ;;		_main
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530     04AE                     _Analog_read_percent:	
  2531                           ;psect for function _Analog_read_percent
  2532                           
  2533     04AE                     l1717:	
  2534                           ;incstack = 0
  2535                           ; Regs used in _Analog_read_percent: [wreg+status,2+status,0+pclath+cstack]
  2536                           
  2537                           
  2538                           ;./analog_driver.h: 32:     uint16_t a = Analog_read_raw();
  2539     04AE  3186  2607  3184   	fcall	_Analog_read_raw
  2540     04B1  0872               	movf	?_Analog_read_raw+1,w
  2541     04B2  0140               	movlb	0	; select bank0
  2542     04B3  00C9               	movwf	Analog_read_percent@a+1
  2543     04B4  0871               	movf	?_Analog_read_raw,w
  2544     04B5  00C8               	movwf	Analog_read_percent@a
  2545     04B6                     l1719:
  2546                           
  2547                           ;./analog_driver.h: 33:     uint8_t r = a*(100.0/1023.0);
  2548     04B6  0848               	movf	Analog_read_percent@a,w
  2549     04B7  00F1               	movwf	___xxtofl@val
  2550     04B8  0849               	movf	Analog_read_percent@a+1,w
  2551     04B9  00F2               	movwf	___xxtofl@val+1
  2552     04BA  01F3               	clrf	___xxtofl@val+2
  2553     04BB  01F4               	clrf	___xxtofl@val+3
  2554     04BC  3000               	movlw	0
  2555     04BD  3182  2275  3184   	fcall	___xxtofl
  2556     04C0  0874               	movf	?___xxtofl+3,w
  2557     04C1  0140               	movlb	0	; select bank0
  2558     04C2  00AD               	movwf	___flmul@a+3
  2559     04C3  0873               	movf	?___xxtofl+2,w
  2560     04C4  00AC               	movwf	___flmul@a+2
  2561     04C5  0872               	movf	?___xxtofl+1,w
  2562     04C6  00AB               	movwf	___flmul@a+1
  2563     04C7  0871               	movf	?___xxtofl,w
  2564     04C8  00AA               	movwf	___flmul@a
  2565     04C9  303D               	movlw	61
  2566     04CA  00A9               	movwf	___flmul@b+3
  2567     04CB  30C8               	movlw	200
  2568     04CC  00A8               	movwf	___flmul@b+2
  2569     04CD  3032               	movlw	50
  2570     04CE  00A7               	movwf	___flmul@b+1
  2571     04CF  300D               	movlw	13
  2572     04D0  00A6               	movwf	___flmul@b
  2573     04D1  3180  203A  3184   	fcall	___flmul
  2574     04D4  0140               	movlb	0	; select bank0
  2575     04D5  0829               	movf	?___flmul+3,w
  2576     04D6  00C3               	movwf	___fltol@f1+3
  2577     04D7  0828               	movf	?___flmul+2,w
  2578     04D8  00C2               	movwf	___fltol@f1+2
  2579     04D9  0827               	movf	?___flmul+1,w
  2580     04DA  00C1               	movwf	___fltol@f1+1
  2581     04DB  0826               	movf	?___flmul,w
  2582     04DC  00C0               	movwf	___fltol@f1
  2583     04DD  3183  2392  3184   	fcall	___fltol
  2584     04E0  0140               	movlb	0	; select bank0
  2585     04E1  0840               	movf	?___fltol,w
  2586     04E2  00CA               	movwf	Analog_read_percent@r
  2587     04E3                     l1721:
  2588                           
  2589                           ;./analog_driver.h: 34:     return r;
  2590     04E3  084A               	movf	Analog_read_percent@r,w
  2591     04E4                     l176:
  2592     04E4  0008               	return
  2593     04E5                     __end_of_Analog_read_percent:
  2594                           
  2595                           	psect	text14
  2596     0275                     __ptext14:	
  2597 ;; *************** function ___xxtofl *****************
  2598 ;; Defined at:
  2599 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  sign            1    wreg     unsigned char 
  2602 ;;  val             4    1[COMMON] long 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  sign            1    0[BANK0 ] unsigned char 
  2605 ;;  arg             4    2[BANK0 ] unsigned long 
  2606 ;;  exp             1    1[BANK0 ] unsigned char 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  4    1[COMMON] unsigned char 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2617 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2618 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;Total ram usage:       14 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_Analog_read_percent
  2627 ;;		_I2C_SHT4x_read
  2628 ;;		_Analog_read_voltage
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632     0275                     ___xxtofl:	
  2633                           ;psect for function ___xxtofl
  2634                           
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2638                           ;___xxtofl@sign stored from wreg
  2639     0275  0140               	movlb	0	; select bank0
  2640     0276  00A0               	movwf	___xxtofl@sign
  2641     0277                     l1647:
  2642     0277  0820               	movf	___xxtofl@sign,w
  2643     0278  1903               	btfsc	3,2
  2644     0279  2A7B               	goto	u1231
  2645     027A  2A7C               	goto	u1230
  2646     027B                     u1231:
  2647     027B  2A90               	goto	l1653
  2648     027C                     u1230:
  2649     027C                     l1649:
  2650     027C  1FF4               	btfss	___xxtofl@val+3,7
  2651     027D  2A7F               	goto	u1241
  2652     027E  2A80               	goto	u1240
  2653     027F                     u1241:
  2654     027F  2A90               	goto	l1653
  2655     0280                     u1240:
  2656     0280                     l1651:
  2657     0280  0971               	comf	___xxtofl@val,w
  2658     0281  00A2               	movwf	___xxtofl@arg
  2659     0282  0972               	comf	___xxtofl@val+1,w
  2660     0283  00A3               	movwf	___xxtofl@arg+1
  2661     0284  0973               	comf	___xxtofl@val+2,w
  2662     0285  00A4               	movwf	___xxtofl@arg+2
  2663     0286  0974               	comf	___xxtofl@val+3,w
  2664     0287  00A5               	movwf	___xxtofl@arg+3
  2665     0288  0AA2               	incf	___xxtofl@arg,f
  2666     0289  1903               	skipnz
  2667     028A  0AA3               	incf	___xxtofl@arg+1,f
  2668     028B  1903               	skipnz
  2669     028C  0AA4               	incf	___xxtofl@arg+2,f
  2670     028D  1903               	skipnz
  2671     028E  0AA5               	incf	___xxtofl@arg+3,f
  2672     028F  2A98               	goto	l814
  2673     0290                     l1653:
  2674     0290  0874               	movf	___xxtofl@val+3,w
  2675     0291  00A5               	movwf	___xxtofl@arg+3
  2676     0292  0873               	movf	___xxtofl@val+2,w
  2677     0293  00A4               	movwf	___xxtofl@arg+2
  2678     0294  0872               	movf	___xxtofl@val+1,w
  2679     0295  00A3               	movwf	___xxtofl@arg+1
  2680     0296  0871               	movf	___xxtofl@val,w
  2681     0297  00A2               	movwf	___xxtofl@arg
  2682     0298                     l814:
  2683     0298  0874               	movf	___xxtofl@val+3,w
  2684     0299  0473               	iorwf	___xxtofl@val+2,w
  2685     029A  0472               	iorwf	___xxtofl@val+1,w
  2686     029B  0471               	iorwf	___xxtofl@val,w
  2687     029C  1D03               	skipz
  2688     029D  2A9F               	goto	u1251
  2689     029E  2AA0               	goto	u1250
  2690     029F                     u1251:
  2691     029F  2AA9               	goto	l1659
  2692     02A0                     u1250:
  2693     02A0                     l1655:
  2694     02A0  3000               	movlw	0
  2695     02A1  00F4               	movwf	?___xxtofl+3
  2696     02A2  3000               	movlw	0
  2697     02A3  00F3               	movwf	?___xxtofl+2
  2698     02A4  3000               	movlw	0
  2699     02A5  00F2               	movwf	?___xxtofl+1
  2700     02A6  3000               	movlw	0
  2701     02A7  00F1               	movwf	?___xxtofl
  2702     02A8  2B1F               	goto	l816
  2703     02A9                     l1659:
  2704     02A9  3096               	movlw	150
  2705     02AA  00A1               	movwf	___xxtofl@exp
  2706     02AB  2AB7               	goto	l1663
  2707     02AC                     l1661:
  2708     02AC  3001               	movlw	1
  2709     02AD  00F5               	movwf	??___xxtofl
  2710     02AE  0875               	movf	??___xxtofl,w
  2711     02AF  07A1               	addwf	___xxtofl@exp,f
  2712     02B0  3001               	movlw	1
  2713     02B1                     u1265:
  2714     02B1  36A5               	lsrf	___xxtofl@arg+3,f
  2715     02B2  0CA4               	rrf	___xxtofl@arg+2,f
  2716     02B3  0CA3               	rrf	___xxtofl@arg+1,f
  2717     02B4  0CA2               	rrf	___xxtofl@arg,f
  2718     02B5  0B89               	decfsz	9,f
  2719     02B6  2AB1               	goto	u1265
  2720     02B7                     l1663:
  2721     02B7  30FE               	movlw	254
  2722     02B8  0525               	andwf	___xxtofl@arg+3,w
  2723     02B9  1D03               	btfss	3,2
  2724     02BA  2ABC               	goto	u1271
  2725     02BB  2ABD               	goto	u1270
  2726     02BC                     u1271:
  2727     02BC  2AAC               	goto	l1661
  2728     02BD                     u1270:
  2729     02BD  2AD1               	goto	l820
  2730     02BE                     l1665:
  2731     02BE  3001               	movlw	1
  2732     02BF  00F5               	movwf	??___xxtofl
  2733     02C0  0875               	movf	??___xxtofl,w
  2734     02C1  07A1               	addwf	___xxtofl@exp,f
  2735     02C2                     l1667:
  2736     02C2  3001               	movlw	1
  2737     02C3  07A2               	addwf	___xxtofl@arg,f
  2738     02C4  3000               	movlw	0
  2739     02C5  3DA3               	addwfc	___xxtofl@arg+1,f
  2740     02C6  3000               	movlw	0
  2741     02C7  3DA4               	addwfc	___xxtofl@arg+2,f
  2742     02C8  3000               	movlw	0
  2743     02C9  3DA5               	addwfc	___xxtofl@arg+3,f
  2744     02CA                     l1669:
  2745     02CA  3001               	movlw	1
  2746     02CB                     u1285:
  2747     02CB  36A5               	lsrf	___xxtofl@arg+3,f
  2748     02CC  0CA4               	rrf	___xxtofl@arg+2,f
  2749     02CD  0CA3               	rrf	___xxtofl@arg+1,f
  2750     02CE  0CA2               	rrf	___xxtofl@arg,f
  2751     02CF  0B89               	decfsz	9,f
  2752     02D0  2ACB               	goto	u1285
  2753     02D1                     l820:
  2754     02D1  30FF               	movlw	255
  2755     02D2  0525               	andwf	___xxtofl@arg+3,w
  2756     02D3  1D03               	btfss	3,2
  2757     02D4  2AD6               	goto	u1291
  2758     02D5  2AD7               	goto	u1290
  2759     02D6                     u1291:
  2760     02D6  2ABE               	goto	l1665
  2761     02D7                     u1290:
  2762     02D7  2AE1               	goto	l1673
  2763     02D8                     l1671:
  2764     02D8  3001               	movlw	1
  2765     02D9  02A1               	subwf	___xxtofl@exp,f
  2766     02DA  3001               	movlw	1
  2767     02DB                     u1305:
  2768     02DB  35A2               	lslf	___xxtofl@arg,f
  2769     02DC  0DA3               	rlf	___xxtofl@arg+1,f
  2770     02DD  0DA4               	rlf	___xxtofl@arg+2,f
  2771     02DE  0DA5               	rlf	___xxtofl@arg+3,f
  2772     02DF  0B89               	decfsz	9,f
  2773     02E0  2ADB               	goto	u1305
  2774     02E1                     l1673:
  2775     02E1  1BA4               	btfsc	___xxtofl@arg+2,7
  2776     02E2  2AE4               	goto	u1311
  2777     02E3  2AE5               	goto	u1310
  2778     02E4                     u1311:
  2779     02E4  2AEB               	goto	l827
  2780     02E5                     u1310:
  2781     02E5                     l1675:
  2782     02E5  3002               	movlw	2
  2783     02E6  0221               	subwf	___xxtofl@exp,w
  2784     02E7  1803               	skipnc
  2785     02E8  2AEA               	goto	u1321
  2786     02E9  2AEB               	goto	u1320
  2787     02EA                     u1321:
  2788     02EA  2AD8               	goto	l1671
  2789     02EB                     u1320:
  2790     02EB                     l827:
  2791     02EB  1821               	btfsc	___xxtofl@exp,0
  2792     02EC  2AEE               	goto	u1331
  2793     02ED  2AEF               	goto	u1330
  2794     02EE                     u1331:
  2795     02EE  2AF7               	goto	l828
  2796     02EF                     u1330:
  2797     02EF                     l1677:
  2798     02EF  30FF               	movlw	255
  2799     02F0  05A2               	andwf	___xxtofl@arg,f
  2800     02F1  30FF               	movlw	255
  2801     02F2  05A3               	andwf	___xxtofl@arg+1,f
  2802     02F3  307F               	movlw	127
  2803     02F4  05A4               	andwf	___xxtofl@arg+2,f
  2804     02F5  30FF               	movlw	255
  2805     02F6  05A5               	andwf	___xxtofl@arg+3,f
  2806     02F7                     l828:
  2807     02F7  1003               	clrc
  2808     02F8  0CA1               	rrf	___xxtofl@exp,f
  2809     02F9                     l1679:
  2810     02F9  0821               	movf	___xxtofl@exp,w
  2811     02FA  00F5               	movwf	??___xxtofl
  2812     02FB  01F6               	clrf	??___xxtofl+1
  2813     02FC  01F7               	clrf	??___xxtofl+2
  2814     02FD  01F8               	clrf	??___xxtofl+3
  2815     02FE  3018               	movlw	24
  2816     02FF                     u1345:
  2817     02FF  35F5               	lslf	??___xxtofl,f
  2818     0300  0DF6               	rlf	??___xxtofl+1,f
  2819     0301  0DF7               	rlf	??___xxtofl+2,f
  2820     0302  0DF8               	rlf	??___xxtofl+3,f
  2821     0303                     u1340:
  2822     0303  0B89               	decfsz	9,f
  2823     0304  2AFF               	goto	u1345
  2824     0305  0875               	movf	??___xxtofl,w
  2825     0306  04A2               	iorwf	___xxtofl@arg,f
  2826     0307  0876               	movf	??___xxtofl+1,w
  2827     0308  04A3               	iorwf	___xxtofl@arg+1,f
  2828     0309  0877               	movf	??___xxtofl+2,w
  2829     030A  04A4               	iorwf	___xxtofl@arg+2,f
  2830     030B  0878               	movf	??___xxtofl+3,w
  2831     030C  04A5               	iorwf	___xxtofl@arg+3,f
  2832     030D                     l1681:
  2833     030D  0820               	movf	___xxtofl@sign,w
  2834     030E  1903               	btfsc	3,2
  2835     030F  2B11               	goto	u1351
  2836     0310  2B12               	goto	u1350
  2837     0311                     u1351:
  2838     0311  2B17               	goto	l1687
  2839     0312                     u1350:
  2840     0312                     l1683:
  2841     0312  1FF4               	btfss	___xxtofl@val+3,7
  2842     0313  2B15               	goto	u1361
  2843     0314  2B16               	goto	u1360
  2844     0315                     u1361:
  2845     0315  2B17               	goto	l1687
  2846     0316                     u1360:
  2847     0316                     l1685:
  2848     0316  17A5               	bsf	___xxtofl@arg+3,7
  2849     0317                     l1687:
  2850     0317  0825               	movf	___xxtofl@arg+3,w
  2851     0318  00F4               	movwf	?___xxtofl+3
  2852     0319  0824               	movf	___xxtofl@arg+2,w
  2853     031A  00F3               	movwf	?___xxtofl+2
  2854     031B  0823               	movf	___xxtofl@arg+1,w
  2855     031C  00F2               	movwf	?___xxtofl+1
  2856     031D  0822               	movf	___xxtofl@arg,w
  2857     031E  00F1               	movwf	?___xxtofl
  2858     031F                     l816:
  2859     031F  0008               	return
  2860     0320                     __end_of___xxtofl:
  2861                           
  2862                           	psect	text15
  2863     0392                     __ptext15:	
  2864 ;; *************** function ___fltol *****************
  2865 ;; Defined at:
  2866 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  f1              4   32[BANK0 ] unsigned char 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  exp1            1   11[COMMON] unsigned char 
  2871 ;;  sign1           1   10[COMMON] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  4   32[BANK0 ] long 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2881 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;Total ram usage:       10 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_Analog_read_percent
  2892 ;;		_Analog_read_voltage
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896     0392                     ___fltol:	
  2897                           ;psect for function ___fltol
  2898                           
  2899     0392                     l1471:	
  2900                           ;incstack = 0
  2901                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2902                           
  2903     0392  1003               	clrc
  2904     0393  0140               	movlb	0	; select bank0
  2905     0394  0D42               	rlf	___fltol@f1+2,w
  2906     0395  0D43               	rlf	___fltol@f1+3,w
  2907     0396  00FB               	movwf	___fltol@exp1
  2908     0397  087B               	movf	___fltol@exp1,w
  2909     0398  1D03               	btfss	3,2
  2910     0399  2B9B               	goto	u871
  2911     039A  2B9C               	goto	u870
  2912     039B                     u871:
  2913     039B  2BA5               	goto	l1477
  2914     039C                     u870:
  2915     039C                     l1473:
  2916     039C  3000               	movlw	0
  2917     039D  00C3               	movwf	?___fltol+3
  2918     039E  3000               	movlw	0
  2919     039F  00C2               	movwf	?___fltol+2
  2920     03A0  3000               	movlw	0
  2921     03A1  00C1               	movwf	?___fltol+1
  2922     03A2  3000               	movlw	0
  2923     03A3  00C0               	movwf	?___fltol
  2924     03A4  2C02               	goto	l567
  2925     03A5                     l1477:
  2926     03A5  0840               	movf	___fltol@f1,w
  2927     03A6  00C4               	movwf	??___fltol
  2928     03A7  0841               	movf	___fltol@f1+1,w
  2929     03A8  00C5               	movwf	??___fltol+1
  2930     03A9  0842               	movf	___fltol@f1+2,w
  2931     03AA  00C6               	movwf	??___fltol+2
  2932     03AB  0843               	movf	___fltol@f1+3,w
  2933     03AC  00C7               	movwf	??___fltol+3
  2934     03AD  301F               	movlw	31
  2935     03AE                     u885:
  2936     03AE  36C7               	lsrf	??___fltol+3,f
  2937     03AF  0CC6               	rrf	??___fltol+2,f
  2938     03B0  0CC5               	rrf	??___fltol+1,f
  2939     03B1  0CC4               	rrf	??___fltol,f
  2940     03B2                     u880:
  2941     03B2  0B89               	decfsz	9,f
  2942     03B3  2BAE               	goto	u885
  2943     03B4  0844               	movf	??___fltol,w
  2944     03B5  00FA               	movwf	___fltol@sign1
  2945     03B6                     l1479:
  2946     03B6  17C2               	bsf	___fltol@f1+2,7
  2947     03B7                     l1481:
  2948     03B7  30FF               	movlw	255
  2949     03B8  05C0               	andwf	___fltol@f1,f
  2950     03B9  30FF               	movlw	255
  2951     03BA  05C1               	andwf	___fltol@f1+1,f
  2952     03BB  30FF               	movlw	255
  2953     03BC  05C2               	andwf	___fltol@f1+2,f
  2954     03BD  3000               	movlw	0
  2955     03BE  05C3               	andwf	___fltol@f1+3,f
  2956     03BF                     l1483:
  2957     03BF  3096               	movlw	150
  2958     03C0  02FB               	subwf	___fltol@exp1,f
  2959     03C1                     l1485:
  2960     03C1  1FFB               	btfss	___fltol@exp1,7
  2961     03C2  2BC4               	goto	u891
  2962     03C3  2BC5               	goto	u890
  2963     03C4                     u891:
  2964     03C4  2BDD               	goto	l1495
  2965     03C5                     u890:
  2966     03C5                     l1487:
  2967     03C5  087B               	movf	___fltol@exp1,w
  2968     03C6  3A80               	xorlw	128
  2969     03C7  3E97               	addlw	151
  2970     03C8  1803               	skipnc
  2971     03C9  2BCB               	goto	u901
  2972     03CA  2BCC               	goto	u900
  2973     03CB                     u901:
  2974     03CB  2BCD               	goto	l1493
  2975     03CC                     u900:
  2976     03CC  2B9C               	goto	l1473
  2977     03CD                     l1493:
  2978     03CD  3001               	movlw	1
  2979     03CE                     u915:
  2980     03CE  36C3               	lsrf	___fltol@f1+3,f
  2981     03CF  0CC2               	rrf	___fltol@f1+2,f
  2982     03D0  0CC1               	rrf	___fltol@f1+1,f
  2983     03D1  0CC0               	rrf	___fltol@f1,f
  2984     03D2  0B89               	decfsz	9,f
  2985     03D3  2BCE               	goto	u915
  2986     03D4  3001               	movlw	1
  2987     03D5  00C4               	movwf	??___fltol
  2988     03D6  0844               	movf	??___fltol,w
  2989     03D7  07FB               	addwf	___fltol@exp1,f
  2990     03D8  1D03               	btfss	3,2
  2991     03D9  2BDB               	goto	u921
  2992     03DA  2BDC               	goto	u920
  2993     03DB                     u921:
  2994     03DB  2BCD               	goto	l1493
  2995     03DC                     u920:
  2996     03DC  2BF2               	goto	l1503
  2997     03DD                     l1495:
  2998     03DD  3020               	movlw	32
  2999     03DE  027B               	subwf	___fltol@exp1,w
  3000     03DF  1C03               	skipc
  3001     03E0  2BE2               	goto	u931
  3002     03E1  2BE3               	goto	u930
  3003     03E2                     u931:
  3004     03E2  2BED               	goto	l574
  3005     03E3                     u930:
  3006     03E3  2B9C               	goto	l1473
  3007     03E4                     l1501:
  3008     03E4  3001               	movlw	1
  3009     03E5                     u945:
  3010     03E5  35C0               	lslf	___fltol@f1,f
  3011     03E6  0DC1               	rlf	___fltol@f1+1,f
  3012     03E7  0DC2               	rlf	___fltol@f1+2,f
  3013     03E8  0DC3               	rlf	___fltol@f1+3,f
  3014     03E9  0B89               	decfsz	9,f
  3015     03EA  2BE5               	goto	u945
  3016     03EB  3001               	movlw	1
  3017     03EC  02FB               	subwf	___fltol@exp1,f
  3018     03ED                     l574:
  3019     03ED  087B               	movf	___fltol@exp1,w
  3020     03EE  1D03               	btfss	3,2
  3021     03EF  2BF1               	goto	u951
  3022     03F0  2BF2               	goto	u950
  3023     03F1                     u951:
  3024     03F1  2BE4               	goto	l1501
  3025     03F2                     u950:
  3026     03F2                     l1503:
  3027     03F2  087A               	movf	___fltol@sign1,w
  3028     03F3  1903               	btfsc	3,2
  3029     03F4  2BF6               	goto	u961
  3030     03F5  2BF7               	goto	u960
  3031     03F6                     u961:
  3032     03F6  2C02               	goto	l577
  3033     03F7                     u960:
  3034     03F7                     l1505:
  3035     03F7  09C0               	comf	___fltol@f1,f
  3036     03F8  09C1               	comf	___fltol@f1+1,f
  3037     03F9  09C2               	comf	___fltol@f1+2,f
  3038     03FA  09C3               	comf	___fltol@f1+3,f
  3039     03FB  0AC0               	incf	___fltol@f1,f
  3040     03FC  1903               	skipnz
  3041     03FD  0AC1               	incf	___fltol@f1+1,f
  3042     03FE  1903               	skipnz
  3043     03FF  0AC2               	incf	___fltol@f1+2,f
  3044     0400  1903               	skipnz
  3045     0401  0AC3               	incf	___fltol@f1+3,f
  3046     0402                     l577:
  3047     0402                     l567:
  3048     0402  0008               	return
  3049     0403                     __end_of___fltol:
  3050                           
  3051                           	psect	text16
  3052     003A                     __ptext16:	
  3053 ;; *************** function ___flmul *****************
  3054 ;; Defined at:
  3055 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  b               4    6[BANK0 ] long 
  3058 ;;  a               4   10[BANK0 ] long 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  prod            4   26[BANK0 ] struct .
  3061 ;;  grs             4   20[BANK0 ] unsigned long 
  3062 ;;  temp            2   30[BANK0 ] struct .
  3063 ;;  bexp            1   25[BANK0 ] unsigned char 
  3064 ;;  aexp            1   24[BANK0 ] unsigned char 
  3065 ;;  sign            1   19[BANK0 ] unsigned char 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  4    6[BANK0 ] unsigned char 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0, pclath, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3075 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;Total ram usage:       26 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 2
  3082 ;; This function calls:
  3083 ;;		__Umul8_16
  3084 ;; This function is called by:
  3085 ;;		_Analog_read_percent
  3086 ;;		_I2C_SHT4x_read
  3087 ;;		_Analog_read_voltage
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091     003A                     ___flmul:	
  3092                           ;psect for function ___flmul
  3093                           
  3094     003A                     l1507:	
  3095                           ;incstack = 0
  3096                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3097                           
  3098     003A  0140               	movlb	0	; select bank0
  3099     003B  0829               	movf	___flmul@b+3,w
  3100     003C  3980               	andlw	128
  3101     003D  00B3               	movwf	___flmul@sign
  3102     003E                     l1509:
  3103     003E  3529               	lslf	___flmul@b+3,w
  3104     003F  00B9               	movwf	___flmul@bexp
  3105     0040                     l1511:
  3106     0040  1FA8               	btfss	___flmul@b+2,7
  3107     0041  2843               	goto	u971
  3108     0042  2844               	goto	u970
  3109     0043                     u971:
  3110     0043  2845               	goto	l1515
  3111     0044                     u970:
  3112     0044                     l1513:
  3113     0044  1439               	bsf	___flmul@bexp,0
  3114     0045                     l1515:
  3115     0045  0839               	movf	___flmul@bexp,w
  3116     0046  1903               	btfsc	3,2
  3117     0047  2849               	goto	u981
  3118     0048  284A               	goto	u980
  3119     0049                     u981:
  3120     0049  2859               	goto	l1523
  3121     004A                     u980:
  3122     004A                     l1517:
  3123     004A  0A39               	incf	___flmul@bexp,w
  3124     004B  1D03               	btfss	3,2
  3125     004C  284E               	goto	u991
  3126     004D  284F               	goto	u990
  3127     004E                     u991:
  3128     004E  2857               	goto	l1521
  3129     004F                     u990:
  3130     004F                     l1519:
  3131     004F  3000               	movlw	0
  3132     0050  00A9               	movwf	___flmul@b+3
  3133     0051  3000               	movlw	0
  3134     0052  00A8               	movwf	___flmul@b+2
  3135     0053  3000               	movlw	0
  3136     0054  00A7               	movwf	___flmul@b+1
  3137     0055  3000               	movlw	0
  3138     0056  00A6               	movwf	___flmul@b
  3139     0057                     l1521:
  3140     0057  17A8               	bsf	___flmul@b+2,7
  3141     0058  2861               	goto	l1525
  3142     0059                     l1523:
  3143     0059  3000               	movlw	0
  3144     005A  00A9               	movwf	___flmul@b+3
  3145     005B  3000               	movlw	0
  3146     005C  00A8               	movwf	___flmul@b+2
  3147     005D  3000               	movlw	0
  3148     005E  00A7               	movwf	___flmul@b+1
  3149     005F  3000               	movlw	0
  3150     0060  00A6               	movwf	___flmul@b
  3151     0061                     l1525:
  3152     0061  082D               	movf	___flmul@a+3,w
  3153     0062  3980               	andlw	128
  3154     0063  00AE               	movwf	??___flmul
  3155     0064  082E               	movf	??___flmul,w
  3156     0065  06B3               	xorwf	___flmul@sign,f
  3157     0066                     l1527:
  3158     0066  352D               	lslf	___flmul@a+3,w
  3159     0067  00B8               	movwf	___flmul@aexp
  3160     0068                     l1529:
  3161     0068  1FAC               	btfss	___flmul@a+2,7
  3162     0069  286B               	goto	u1001
  3163     006A  286C               	goto	u1000
  3164     006B                     u1001:
  3165     006B  286D               	goto	l1533
  3166     006C                     u1000:
  3167     006C                     l1531:
  3168     006C  1438               	bsf	___flmul@aexp,0
  3169     006D                     l1533:
  3170     006D  0838               	movf	___flmul@aexp,w
  3171     006E  1903               	btfsc	3,2
  3172     006F  2871               	goto	u1011
  3173     0070  2872               	goto	u1010
  3174     0071                     u1011:
  3175     0071  2881               	goto	l1541
  3176     0072                     u1010:
  3177     0072                     l1535:
  3178     0072  0A38               	incf	___flmul@aexp,w
  3179     0073  1D03               	btfss	3,2
  3180     0074  2876               	goto	u1021
  3181     0075  2877               	goto	u1020
  3182     0076                     u1021:
  3183     0076  287F               	goto	l1539
  3184     0077                     u1020:
  3185     0077                     l1537:
  3186     0077  3000               	movlw	0
  3187     0078  00AD               	movwf	___flmul@a+3
  3188     0079  3000               	movlw	0
  3189     007A  00AC               	movwf	___flmul@a+2
  3190     007B  3000               	movlw	0
  3191     007C  00AB               	movwf	___flmul@a+1
  3192     007D  3000               	movlw	0
  3193     007E  00AA               	movwf	___flmul@a
  3194     007F                     l1539:
  3195     007F  17AC               	bsf	___flmul@a+2,7
  3196     0080  2889               	goto	l1543
  3197     0081                     l1541:
  3198     0081  3000               	movlw	0
  3199     0082  00AD               	movwf	___flmul@a+3
  3200     0083  3000               	movlw	0
  3201     0084  00AC               	movwf	___flmul@a+2
  3202     0085  3000               	movlw	0
  3203     0086  00AB               	movwf	___flmul@a+1
  3204     0087  3000               	movlw	0
  3205     0088  00AA               	movwf	___flmul@a
  3206     0089                     l1543:
  3207     0089  0838               	movf	___flmul@aexp,w
  3208     008A  1903               	btfsc	3,2
  3209     008B  288D               	goto	u1031
  3210     008C  288E               	goto	u1030
  3211     008D                     u1031:
  3212     008D  2893               	goto	l1547
  3213     008E                     u1030:
  3214     008E                     l1545:
  3215     008E  0839               	movf	___flmul@bexp,w
  3216     008F  1D03               	btfss	3,2
  3217     0090  2892               	goto	u1041
  3218     0091  2893               	goto	u1040
  3219     0092                     u1041:
  3220     0092  289C               	goto	l1551
  3221     0093                     u1040:
  3222     0093                     l1547:
  3223     0093  3000               	movlw	0
  3224     0094  00A9               	movwf	?___flmul+3
  3225     0095  3000               	movlw	0
  3226     0096  00A8               	movwf	?___flmul+2
  3227     0097  3000               	movlw	0
  3228     0098  00A7               	movwf	?___flmul+1
  3229     0099  3000               	movlw	0
  3230     009A  00A6               	movwf	?___flmul
  3231     009B  2A74               	goto	l770
  3232     009C                     l1551:
  3233     009C  0826               	movf	___flmul@b,w
  3234     009D  00F1               	movwf	__Umul8_16@multiplicand
  3235     009E  082C               	movf	___flmul@a+2,w
  3236     009F  3185  2582  3180   	fcall	__Umul8_16
  3237     00A2  0872               	movf	?__Umul8_16+1,w
  3238     00A3  0140               	movlb	0	; select bank0
  3239     00A4  00BF               	movwf	___flmul@temp+1
  3240     00A5  0871               	movf	?__Umul8_16,w
  3241     00A6  00BE               	movwf	___flmul@temp
  3242     00A7                     l1553:
  3243     00A7  083E               	movf	___flmul@temp,w
  3244     00A8  00AE               	movwf	??___flmul
  3245     00A9  01AF               	clrf	??___flmul+1
  3246     00AA  01B0               	clrf	??___flmul+2
  3247     00AB  01B1               	clrf	??___flmul+3
  3248     00AC  0831               	movf	??___flmul+3,w
  3249     00AD  00B7               	movwf	___flmul@grs+3
  3250     00AE  0830               	movf	??___flmul+2,w
  3251     00AF  00B6               	movwf	___flmul@grs+2
  3252     00B0  082F               	movf	??___flmul+1,w
  3253     00B1  00B5               	movwf	___flmul@grs+1
  3254     00B2  082E               	movf	??___flmul,w
  3255     00B3  00B4               	movwf	___flmul@grs
  3256     00B4                     l1555:
  3257     00B4  083F               	movf	___flmul@temp+1,w
  3258     00B5  00AE               	movwf	??___flmul
  3259     00B6  01AF               	clrf	??___flmul+1
  3260     00B7  01B0               	clrf	??___flmul+2
  3261     00B8  01B1               	clrf	??___flmul+3
  3262     00B9  0831               	movf	??___flmul+3,w
  3263     00BA  00BD               	movwf	___flmul@prod+3
  3264     00BB  0830               	movf	??___flmul+2,w
  3265     00BC  00BC               	movwf	___flmul@prod+2
  3266     00BD  082F               	movf	??___flmul+1,w
  3267     00BE  00BB               	movwf	___flmul@prod+1
  3268     00BF  082E               	movf	??___flmul,w
  3269     00C0  00BA               	movwf	___flmul@prod
  3270     00C1  0827               	movf	___flmul@b+1,w
  3271     00C2  00F1               	movwf	__Umul8_16@multiplicand
  3272     00C3  082B               	movf	___flmul@a+1,w
  3273     00C4  3185  2582  3180   	fcall	__Umul8_16
  3274     00C7  0872               	movf	?__Umul8_16+1,w
  3275     00C8  0140               	movlb	0	; select bank0
  3276     00C9  00BF               	movwf	___flmul@temp+1
  3277     00CA  0871               	movf	?__Umul8_16,w
  3278     00CB  00BE               	movwf	___flmul@temp
  3279     00CC                     l1557:
  3280     00CC  083E               	movf	___flmul@temp,w
  3281     00CD  00AE               	movwf	??___flmul
  3282     00CE  01AF               	clrf	??___flmul+1
  3283     00CF  01B0               	clrf	??___flmul+2
  3284     00D0  01B1               	clrf	??___flmul+3
  3285     00D1  082E               	movf	??___flmul,w
  3286     00D2  07B4               	addwf	___flmul@grs,f
  3287     00D3  082F               	movf	??___flmul+1,w
  3288     00D4  3DB5               	addwfc	___flmul@grs+1,f
  3289     00D5  0830               	movf	??___flmul+2,w
  3290     00D6  3DB6               	addwfc	___flmul@grs+2,f
  3291     00D7  0831               	movf	??___flmul+3,w
  3292     00D8  3DB7               	addwfc	___flmul@grs+3,f
  3293     00D9                     l1559:
  3294     00D9  083F               	movf	___flmul@temp+1,w
  3295     00DA  00AE               	movwf	??___flmul
  3296     00DB  01AF               	clrf	??___flmul+1
  3297     00DC  01B0               	clrf	??___flmul+2
  3298     00DD  01B1               	clrf	??___flmul+3
  3299     00DE  082E               	movf	??___flmul,w
  3300     00DF  07BA               	addwf	___flmul@prod,f
  3301     00E0  082F               	movf	??___flmul+1,w
  3302     00E1  3DBB               	addwfc	___flmul@prod+1,f
  3303     00E2  0830               	movf	??___flmul+2,w
  3304     00E3  3DBC               	addwfc	___flmul@prod+2,f
  3305     00E4  0831               	movf	??___flmul+3,w
  3306     00E5  3DBD               	addwfc	___flmul@prod+3,f
  3307     00E6  0828               	movf	___flmul@b+2,w
  3308     00E7  00F1               	movwf	__Umul8_16@multiplicand
  3309     00E8  082A               	movf	___flmul@a,w
  3310     00E9  3185  2582  3180   	fcall	__Umul8_16
  3311     00EC  0872               	movf	?__Umul8_16+1,w
  3312     00ED  0140               	movlb	0	; select bank0
  3313     00EE  00BF               	movwf	___flmul@temp+1
  3314     00EF  0871               	movf	?__Umul8_16,w
  3315     00F0  00BE               	movwf	___flmul@temp
  3316     00F1                     l1561:
  3317     00F1  083E               	movf	___flmul@temp,w
  3318     00F2  00AE               	movwf	??___flmul
  3319     00F3  01AF               	clrf	??___flmul+1
  3320     00F4  01B0               	clrf	??___flmul+2
  3321     00F5  01B1               	clrf	??___flmul+3
  3322     00F6  082E               	movf	??___flmul,w
  3323     00F7  07B4               	addwf	___flmul@grs,f
  3324     00F8  082F               	movf	??___flmul+1,w
  3325     00F9  3DB5               	addwfc	___flmul@grs+1,f
  3326     00FA  0830               	movf	??___flmul+2,w
  3327     00FB  3DB6               	addwfc	___flmul@grs+2,f
  3328     00FC  0831               	movf	??___flmul+3,w
  3329     00FD  3DB7               	addwfc	___flmul@grs+3,f
  3330     00FE                     l1563:
  3331     00FE  083F               	movf	___flmul@temp+1,w
  3332     00FF  00AE               	movwf	??___flmul
  3333     0100  01AF               	clrf	??___flmul+1
  3334     0101  01B0               	clrf	??___flmul+2
  3335     0102  01B1               	clrf	??___flmul+3
  3336     0103  082E               	movf	??___flmul,w
  3337     0104  07BA               	addwf	___flmul@prod,f
  3338     0105  082F               	movf	??___flmul+1,w
  3339     0106  3DBB               	addwfc	___flmul@prod+1,f
  3340     0107  0830               	movf	??___flmul+2,w
  3341     0108  3DBC               	addwfc	___flmul@prod+2,f
  3342     0109  0831               	movf	??___flmul+3,w
  3343     010A  3DBD               	addwfc	___flmul@prod+3,f
  3344     010B                     l1565:
  3345     010B  3008               	movlw	8
  3346     010C                     u1055:
  3347     010C  35B4               	lslf	___flmul@grs,f
  3348     010D  0DB5               	rlf	___flmul@grs+1,f
  3349     010E  0DB6               	rlf	___flmul@grs+2,f
  3350     010F  0DB7               	rlf	___flmul@grs+3,f
  3351     0110  0B89               	decfsz	9,f
  3352     0111  290C               	goto	u1055
  3353     0112                     l1567:
  3354     0112  0827               	movf	___flmul@b+1,w
  3355     0113  00F1               	movwf	__Umul8_16@multiplicand
  3356     0114  082A               	movf	___flmul@a,w
  3357     0115  3185  2582  3180   	fcall	__Umul8_16
  3358     0118  0872               	movf	?__Umul8_16+1,w
  3359     0119  0140               	movlb	0	; select bank0
  3360     011A  00BF               	movwf	___flmul@temp+1
  3361     011B  0871               	movf	?__Umul8_16,w
  3362     011C  00BE               	movwf	___flmul@temp
  3363     011D                     l1569:
  3364     011D  083E               	movf	___flmul@temp,w
  3365     011E  07B4               	addwf	___flmul@grs,f
  3366     011F  083F               	movf	___flmul@temp+1,w
  3367     0120  3DB5               	addwfc	___flmul@grs+1,f
  3368     0121  3000               	movlw	0
  3369     0122  3DB6               	addwfc	___flmul@grs+2,f
  3370     0123  3DB7               	addwfc	___flmul@grs+3,f
  3371     0124                     l1571:
  3372     0124  0826               	movf	___flmul@b,w
  3373     0125  00F1               	movwf	__Umul8_16@multiplicand
  3374     0126  082B               	movf	___flmul@a+1,w
  3375     0127  3185  2582  3180   	fcall	__Umul8_16
  3376     012A  0872               	movf	?__Umul8_16+1,w
  3377     012B  0140               	movlb	0	; select bank0
  3378     012C  00BF               	movwf	___flmul@temp+1
  3379     012D  0871               	movf	?__Umul8_16,w
  3380     012E  00BE               	movwf	___flmul@temp
  3381     012F                     l1573:
  3382     012F  083E               	movf	___flmul@temp,w
  3383     0130  07B4               	addwf	___flmul@grs,f
  3384     0131  083F               	movf	___flmul@temp+1,w
  3385     0132  3DB5               	addwfc	___flmul@grs+1,f
  3386     0133  3000               	movlw	0
  3387     0134  3DB6               	addwfc	___flmul@grs+2,f
  3388     0135  3DB7               	addwfc	___flmul@grs+3,f
  3389     0136                     l1575:
  3390     0136  3008               	movlw	8
  3391     0137                     u1065:
  3392     0137  35B4               	lslf	___flmul@grs,f
  3393     0138  0DB5               	rlf	___flmul@grs+1,f
  3394     0139  0DB6               	rlf	___flmul@grs+2,f
  3395     013A  0DB7               	rlf	___flmul@grs+3,f
  3396     013B  0B89               	decfsz	9,f
  3397     013C  2937               	goto	u1065
  3398     013D  0826               	movf	___flmul@b,w
  3399     013E  00F1               	movwf	__Umul8_16@multiplicand
  3400     013F  082A               	movf	___flmul@a,w
  3401     0140  3185  2582  3180   	fcall	__Umul8_16
  3402     0143  0872               	movf	?__Umul8_16+1,w
  3403     0144  0140               	movlb	0	; select bank0
  3404     0145  00BF               	movwf	___flmul@temp+1
  3405     0146  0871               	movf	?__Umul8_16,w
  3406     0147  00BE               	movwf	___flmul@temp
  3407     0148                     l1577:
  3408     0148  083E               	movf	___flmul@temp,w
  3409     0149  07B4               	addwf	___flmul@grs,f
  3410     014A  083F               	movf	___flmul@temp+1,w
  3411     014B  3DB5               	addwfc	___flmul@grs+1,f
  3412     014C  3000               	movlw	0
  3413     014D  3DB6               	addwfc	___flmul@grs+2,f
  3414     014E  3DB7               	addwfc	___flmul@grs+3,f
  3415     014F                     l1579:
  3416     014F  0827               	movf	___flmul@b+1,w
  3417     0150  00F1               	movwf	__Umul8_16@multiplicand
  3418     0151  082C               	movf	___flmul@a+2,w
  3419     0152  3185  2582  3180   	fcall	__Umul8_16
  3420     0155  0872               	movf	?__Umul8_16+1,w
  3421     0156  0140               	movlb	0	; select bank0
  3422     0157  00BF               	movwf	___flmul@temp+1
  3423     0158  0871               	movf	?__Umul8_16,w
  3424     0159  00BE               	movwf	___flmul@temp
  3425     015A  083E               	movf	___flmul@temp,w
  3426     015B  07BA               	addwf	___flmul@prod,f
  3427     015C  083F               	movf	___flmul@temp+1,w
  3428     015D  3DBB               	addwfc	___flmul@prod+1,f
  3429     015E  3000               	movlw	0
  3430     015F  3DBC               	addwfc	___flmul@prod+2,f
  3431     0160  3DBD               	addwfc	___flmul@prod+3,f
  3432     0161                     l1581:
  3433     0161  0828               	movf	___flmul@b+2,w
  3434     0162  00F1               	movwf	__Umul8_16@multiplicand
  3435     0163  082B               	movf	___flmul@a+1,w
  3436     0164  3185  2582  3180   	fcall	__Umul8_16
  3437     0167  0872               	movf	?__Umul8_16+1,w
  3438     0168  0140               	movlb	0	; select bank0
  3439     0169  00BF               	movwf	___flmul@temp+1
  3440     016A  0871               	movf	?__Umul8_16,w
  3441     016B  00BE               	movwf	___flmul@temp
  3442     016C                     l1583:
  3443     016C  083E               	movf	___flmul@temp,w
  3444     016D  07BA               	addwf	___flmul@prod,f
  3445     016E  083F               	movf	___flmul@temp+1,w
  3446     016F  3DBB               	addwfc	___flmul@prod+1,f
  3447     0170  3000               	movlw	0
  3448     0171  3DBC               	addwfc	___flmul@prod+2,f
  3449     0172  3DBD               	addwfc	___flmul@prod+3,f
  3450     0173  0828               	movf	___flmul@b+2,w
  3451     0174  00F1               	movwf	__Umul8_16@multiplicand
  3452     0175  082C               	movf	___flmul@a+2,w
  3453     0176  3185  2582  3180   	fcall	__Umul8_16
  3454     0179  0872               	movf	?__Umul8_16+1,w
  3455     017A  0140               	movlb	0	; select bank0
  3456     017B  00BF               	movwf	___flmul@temp+1
  3457     017C  0871               	movf	?__Umul8_16,w
  3458     017D  00BE               	movwf	___flmul@temp
  3459     017E                     l1585:
  3460     017E  083E               	movf	___flmul@temp,w
  3461     017F  00AE               	movwf	??___flmul
  3462     0180  083F               	movf	___flmul@temp+1,w
  3463     0181  00AF               	movwf	??___flmul+1
  3464     0182  01B0               	clrf	??___flmul+2
  3465     0183  01B1               	clrf	??___flmul+3
  3466     0184  3008               	movlw	8
  3467     0185                     u1075:
  3468     0185  35AE               	lslf	??___flmul,f
  3469     0186  0DAF               	rlf	??___flmul+1,f
  3470     0187  0DB0               	rlf	??___flmul+2,f
  3471     0188  0DB1               	rlf	??___flmul+3,f
  3472     0189                     u1070:
  3473     0189  0B89               	decfsz	9,f
  3474     018A  2985               	goto	u1075
  3475     018B  082E               	movf	??___flmul,w
  3476     018C  07BA               	addwf	___flmul@prod,f
  3477     018D  082F               	movf	??___flmul+1,w
  3478     018E  3DBB               	addwfc	___flmul@prod+1,f
  3479     018F  0830               	movf	??___flmul+2,w
  3480     0190  3DBC               	addwfc	___flmul@prod+2,f
  3481     0191  0831               	movf	??___flmul+3,w
  3482     0192  3DBD               	addwfc	___flmul@prod+3,f
  3483     0193                     l1587:
  3484     0193  0834               	movf	___flmul@grs,w
  3485     0194  00AE               	movwf	??___flmul
  3486     0195  0835               	movf	___flmul@grs+1,w
  3487     0196  00AF               	movwf	??___flmul+1
  3488     0197  0836               	movf	___flmul@grs+2,w
  3489     0198  00B0               	movwf	??___flmul+2
  3490     0199  0837               	movf	___flmul@grs+3,w
  3491     019A  00B1               	movwf	??___flmul+3
  3492     019B  3018               	movlw	24
  3493     019C                     u1085:
  3494     019C  36B1               	lsrf	??___flmul+3,f
  3495     019D  0CB0               	rrf	??___flmul+2,f
  3496     019E  0CAF               	rrf	??___flmul+1,f
  3497     019F  0CAE               	rrf	??___flmul,f
  3498     01A0                     u1080:
  3499     01A0  0B89               	decfsz	9,f
  3500     01A1  299C               	goto	u1085
  3501     01A2  082E               	movf	??___flmul,w
  3502     01A3  07BA               	addwf	___flmul@prod,f
  3503     01A4  082F               	movf	??___flmul+1,w
  3504     01A5  3DBB               	addwfc	___flmul@prod+1,f
  3505     01A6  0830               	movf	??___flmul+2,w
  3506     01A7  3DBC               	addwfc	___flmul@prod+2,f
  3507     01A8  0831               	movf	??___flmul+3,w
  3508     01A9  3DBD               	addwfc	___flmul@prod+3,f
  3509     01AA                     l1589:
  3510     01AA  3008               	movlw	8
  3511     01AB                     u1095:
  3512     01AB  35B4               	lslf	___flmul@grs,f
  3513     01AC  0DB5               	rlf	___flmul@grs+1,f
  3514     01AD  0DB6               	rlf	___flmul@grs+2,f
  3515     01AE  0DB7               	rlf	___flmul@grs+3,f
  3516     01AF  0B89               	decfsz	9,f
  3517     01B0  29AB               	goto	u1095
  3518     01B1                     l1591:
  3519     01B1  0839               	movf	___flmul@bexp,w
  3520     01B2  0738               	addwf	___flmul@aexp,w
  3521     01B3  00AE               	movwf	??___flmul
  3522     01B4  01AF               	clrf	??___flmul+1
  3523     01B5  0DAF               	rlf	??___flmul+1,f
  3524     01B6  082E               	movf	??___flmul,w
  3525     01B7  3E82               	addlw	130
  3526     01B8  00BE               	movwf	___flmul@temp
  3527     01B9  30FF               	movlw	255
  3528     01BA  3D2F               	addwfc	??___flmul+1,w
  3529     01BB  00BF               	movwf	___flmul@temp+1
  3530     01BC  29D4               	goto	l1603
  3531     01BD                     l1593:
  3532     01BD  3001               	movlw	1
  3533     01BE                     u1105:
  3534     01BE  35BA               	lslf	___flmul@prod,f
  3535     01BF  0DBB               	rlf	___flmul@prod+1,f
  3536     01C0  0DBC               	rlf	___flmul@prod+2,f
  3537     01C1  0DBD               	rlf	___flmul@prod+3,f
  3538     01C2  0B89               	decfsz	9,f
  3539     01C3  29BE               	goto	u1105
  3540     01C4                     l1595:
  3541     01C4  1FB7               	btfss	___flmul@grs+3,7
  3542     01C5  29C7               	goto	u1111
  3543     01C6  29C8               	goto	u1110
  3544     01C7                     u1111:
  3545     01C7  29C9               	goto	l1599
  3546     01C8                     u1110:
  3547     01C8                     l1597:
  3548     01C8  143A               	bsf	___flmul@prod,0
  3549     01C9                     l1599:
  3550     01C9  3001               	movlw	1
  3551     01CA                     u1125:
  3552     01CA  35B4               	lslf	___flmul@grs,f
  3553     01CB  0DB5               	rlf	___flmul@grs+1,f
  3554     01CC  0DB6               	rlf	___flmul@grs+2,f
  3555     01CD  0DB7               	rlf	___flmul@grs+3,f
  3556     01CE  0B89               	decfsz	9,f
  3557     01CF  29CA               	goto	u1125
  3558     01D0                     l1601:
  3559     01D0  30FF               	movlw	255
  3560     01D1  07BE               	addwf	___flmul@temp,f
  3561     01D2  30FF               	movlw	255
  3562     01D3  3DBF               	addwfc	___flmul@temp+1,f
  3563     01D4                     l1603:
  3564     01D4  1FBC               	btfss	___flmul@prod+2,7
  3565     01D5  29D7               	goto	u1131
  3566     01D6  29D8               	goto	u1130
  3567     01D7                     u1131:
  3568     01D7  29BD               	goto	l1593
  3569     01D8                     u1130:
  3570     01D8                     l1605:
  3571     01D8  01B8               	clrf	___flmul@aexp
  3572     01D9                     l1607:
  3573     01D9  1FB7               	btfss	___flmul@grs+3,7
  3574     01DA  29DC               	goto	u1141
  3575     01DB  29DD               	goto	u1140
  3576     01DC                     u1141:
  3577     01DC  29F9               	goto	l1615
  3578     01DD                     u1140:
  3579     01DD                     l1609:
  3580     01DD  30FF               	movlw	255
  3581     01DE  0534               	andwf	___flmul@grs,w
  3582     01DF  00AE               	movwf	??___flmul
  3583     01E0  30FF               	movlw	255
  3584     01E1  0535               	andwf	___flmul@grs+1,w
  3585     01E2  00AF               	movwf	??___flmul+1
  3586     01E3  30FF               	movlw	255
  3587     01E4  0536               	andwf	___flmul@grs+2,w
  3588     01E5  00B0               	movwf	??___flmul+2
  3589     01E6  307F               	movlw	127
  3590     01E7  0537               	andwf	___flmul@grs+3,w
  3591     01E8  00B1               	movwf	??___flmul+3
  3592     01E9  0831               	movf	??___flmul+3,w
  3593     01EA  0430               	iorwf	??___flmul+2,w
  3594     01EB  042F               	iorwf	??___flmul+1,w
  3595     01EC  042E               	iorwf	??___flmul,w
  3596     01ED  1903               	skipnz
  3597     01EE  29F0               	goto	u1151
  3598     01EF  29F1               	goto	u1150
  3599     01F0                     u1151:
  3600     01F0  29F4               	goto	l776
  3601     01F1                     u1150:
  3602     01F1                     l1611:
  3603     01F1  01B8               	clrf	___flmul@aexp
  3604     01F2  0AB8               	incf	___flmul@aexp,f
  3605     01F3  29F9               	goto	l1615
  3606     01F4                     l776:
  3607     01F4  1C3A               	btfss	___flmul@prod,0
  3608     01F5  29F7               	goto	u1161
  3609     01F6  29F8               	goto	u1160
  3610     01F7                     u1161:
  3611     01F7  29F9               	goto	l1615
  3612     01F8                     u1160:
  3613     01F8  29F1               	goto	l1611
  3614     01F9                     l1615:
  3615     01F9  0838               	movf	___flmul@aexp,w
  3616     01FA  1903               	btfsc	3,2
  3617     01FB  29FD               	goto	u1171
  3618     01FC  29FE               	goto	u1170
  3619     01FD                     u1171:
  3620     01FD  2A26               	goto	l1625
  3621     01FE                     u1170:
  3622     01FE                     l1617:
  3623     01FE  3001               	movlw	1
  3624     01FF  07BA               	addwf	___flmul@prod,f
  3625     0200  3000               	movlw	0
  3626     0201  3DBB               	addwfc	___flmul@prod+1,f
  3627     0202  3000               	movlw	0
  3628     0203  3DBC               	addwfc	___flmul@prod+2,f
  3629     0204  3000               	movlw	0
  3630     0205  3DBD               	addwfc	___flmul@prod+3,f
  3631     0206                     l1619:
  3632     0206  1C3D               	btfss	___flmul@prod+3,0
  3633     0207  2A09               	goto	u1181
  3634     0208  2A0A               	goto	u1180
  3635     0209                     u1181:
  3636     0209  2A26               	goto	l1625
  3637     020A                     u1180:
  3638     020A                     l1621:
  3639     020A  083A               	movf	___flmul@prod,w
  3640     020B  00AE               	movwf	??___flmul
  3641     020C  083B               	movf	___flmul@prod+1,w
  3642     020D  00AF               	movwf	??___flmul+1
  3643     020E  083C               	movf	___flmul@prod+2,w
  3644     020F  00B0               	movwf	??___flmul+2
  3645     0210  083D               	movf	___flmul@prod+3,w
  3646     0211  00B1               	movwf	??___flmul+3
  3647     0212  3001               	movlw	1
  3648     0213  00B2               	movwf	??___flmul+4
  3649     0214                     u1195:
  3650     0214  37B1               	asrf	??___flmul+3,f
  3651     0215  0CB0               	rrf	??___flmul+2,f
  3652     0216  0CAF               	rrf	??___flmul+1,f
  3653     0217  0CAE               	rrf	??___flmul,f
  3654     0218                     u1190:
  3655     0218  0BB2               	decfsz	??___flmul+4,f
  3656     0219  2A14               	goto	u1195
  3657     021A  0831               	movf	??___flmul+3,w
  3658     021B  00BD               	movwf	___flmul@prod+3
  3659     021C  0830               	movf	??___flmul+2,w
  3660     021D  00BC               	movwf	___flmul@prod+2
  3661     021E  082F               	movf	??___flmul+1,w
  3662     021F  00BB               	movwf	___flmul@prod+1
  3663     0220  082E               	movf	??___flmul,w
  3664     0221  00BA               	movwf	___flmul@prod
  3665     0222                     l1623:
  3666     0222  3001               	movlw	1
  3667     0223  07BE               	addwf	___flmul@temp,f
  3668     0224  3000               	movlw	0
  3669     0225  3DBF               	addwfc	___flmul@temp+1,f
  3670     0226                     l1625:
  3671     0226  083F               	movf	___flmul@temp+1,w
  3672     0227  3A80               	xorlw	128
  3673     0228  00AE               	movwf	??___flmul
  3674     0229  3080               	movlw	128
  3675     022A  022E               	subwf	??___flmul,w
  3676     022B  1D03               	skipz
  3677     022C  2A2F               	goto	u1205
  3678     022D  30FF               	movlw	255
  3679     022E  023E               	subwf	___flmul@temp,w
  3680     022F                     u1205:
  3681     022F  1C03               	skipc
  3682     0230  2A32               	goto	u1201
  3683     0231  2A33               	goto	u1200
  3684     0232                     u1201:
  3685     0232  2A3D               	goto	l1629
  3686     0233                     u1200:
  3687     0233                     l1627:
  3688     0233  307F               	movlw	127
  3689     0234  0140               	movlb	0	; select bank0
  3690     0235  00BD               	movwf	___flmul@prod+3
  3691     0236  3080               	movlw	128
  3692     0237  00BC               	movwf	___flmul@prod+2
  3693     0238  3000               	movlw	0
  3694     0239  00BB               	movwf	___flmul@prod+1
  3695     023A  3000               	movlw	0
  3696     023B  00BA               	movwf	___flmul@prod
  3697     023C  2A68               	goto	l782
  3698     023D                     l1629:
  3699     023D  0140               	movlb	0	; select bank0
  3700     023E  083F               	movf	___flmul@temp+1,w
  3701     023F  3A80               	xorlw	128
  3702     0240  00AE               	movwf	??___flmul
  3703     0241  3080               	movlw	128
  3704     0242  022E               	subwf	??___flmul,w
  3705     0243  1D03               	skipz
  3706     0244  2A47               	goto	u1215
  3707     0245  3001               	movlw	1
  3708     0246  023E               	subwf	___flmul@temp,w
  3709     0247                     u1215:
  3710     0247  1803               	skipnc
  3711     0248  2A4A               	goto	u1211
  3712     0249  2A4B               	goto	u1210
  3713     024A                     u1211:
  3714     024A  2A56               	goto	l1635
  3715     024B                     u1210:
  3716     024B                     l1631:
  3717     024B  3000               	movlw	0
  3718     024C  0140               	movlb	0	; select bank0
  3719     024D  00BD               	movwf	___flmul@prod+3
  3720     024E  3000               	movlw	0
  3721     024F  00BC               	movwf	___flmul@prod+2
  3722     0250  3000               	movlw	0
  3723     0251  00BB               	movwf	___flmul@prod+1
  3724     0252  3000               	movlw	0
  3725     0253  00BA               	movwf	___flmul@prod
  3726     0254                     l1633:
  3727     0254  01B3               	clrf	___flmul@sign
  3728     0255  2A68               	goto	l782
  3729     0256                     l1635:
  3730     0256  0140               	movlb	0	; select bank0
  3731     0257  083E               	movf	___flmul@temp,w
  3732     0258  00B9               	movwf	___flmul@bexp
  3733     0259  30FF               	movlw	255
  3734     025A  05BA               	andwf	___flmul@prod,f
  3735     025B  30FF               	movlw	255
  3736     025C  05BB               	andwf	___flmul@prod+1,f
  3737     025D  307F               	movlw	127
  3738     025E  05BC               	andwf	___flmul@prod+2,f
  3739     025F  3000               	movlw	0
  3740     0260  05BD               	andwf	___flmul@prod+3,f
  3741     0261                     l1637:
  3742     0261  1C39               	btfss	___flmul@bexp,0
  3743     0262  2A64               	goto	u1221
  3744     0263  2A65               	goto	u1220
  3745     0264                     u1221:
  3746     0264  2A66               	goto	l1641
  3747     0265                     u1220:
  3748     0265                     l1639:
  3749     0265  17BC               	bsf	___flmul@prod+2,7
  3750     0266                     l1641:
  3751     0266  3639               	lsrf	___flmul@bexp,w
  3752     0267  00BD               	movwf	___flmul@prod+3
  3753     0268                     l782:
  3754     0268  0833               	movf	___flmul@sign,w
  3755     0269  00AE               	movwf	??___flmul
  3756     026A  082E               	movf	??___flmul,w
  3757     026B  04BD               	iorwf	___flmul@prod+3,f
  3758     026C                     l1643:
  3759     026C  083D               	movf	___flmul@prod+3,w
  3760     026D  00A9               	movwf	?___flmul+3
  3761     026E  083C               	movf	___flmul@prod+2,w
  3762     026F  00A8               	movwf	?___flmul+2
  3763     0270  083B               	movf	___flmul@prod+1,w
  3764     0271  00A7               	movwf	?___flmul+1
  3765     0272  083A               	movf	___flmul@prod,w
  3766     0273  00A6               	movwf	?___flmul
  3767     0274                     l770:
  3768     0274  0008               	return
  3769     0275                     __end_of___flmul:
  3770                           
  3771                           	psect	text17
  3772     0582                     __ptext17:	
  3773 ;; *************** function __Umul8_16 *****************
  3774 ;; Defined at:
  3775 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  multiplier      1    wreg     unsigned char 
  3778 ;;  multiplicand    1    1[COMMON] unsigned char 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  multiplier      1    9[COMMON] unsigned char 
  3781 ;;  word_mpld       2    7[COMMON] unsigned int 
  3782 ;;  product         2    5[COMMON] unsigned int 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  2    1[COMMON] unsigned int 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;Total ram usage:        9 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 1
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		___flmul
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806     0582                     __Umul8_16:	
  3807                           ;psect for function __Umul8_16
  3808                           
  3809                           
  3810                           ;incstack = 0
  3811                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3812                           ;__Umul8_16@multiplier stored from wreg
  3813     0582  00F9               	movwf	__Umul8_16@multiplier
  3814     0583                     l1403:
  3815     0583  01F5               	clrf	__Umul8_16@product
  3816     0584  01F6               	clrf	__Umul8_16@product+1
  3817     0585                     l1405:
  3818     0585  0871               	movf	__Umul8_16@multiplicand,w
  3819     0586  00F3               	movwf	??__Umul8_16
  3820     0587  01F4               	clrf	??__Umul8_16+1
  3821     0588  0873               	movf	??__Umul8_16,w
  3822     0589  00F7               	movwf	__Umul8_16@word_mpld
  3823     058A  0874               	movf	??__Umul8_16+1,w
  3824     058B  00F8               	movwf	__Umul8_16@word_mpld+1
  3825     058C                     l1407:
  3826     058C  1C79               	btfss	__Umul8_16@multiplier,0
  3827     058D  2D8F               	goto	u781
  3828     058E  2D90               	goto	u780
  3829     058F                     u781:
  3830     058F  2D94               	goto	l789
  3831     0590                     u780:
  3832     0590                     l1409:
  3833     0590  0877               	movf	__Umul8_16@word_mpld,w
  3834     0591  07F5               	addwf	__Umul8_16@product,f
  3835     0592  0878               	movf	__Umul8_16@word_mpld+1,w
  3836     0593  3DF6               	addwfc	__Umul8_16@product+1,f
  3837     0594                     l789:
  3838     0594  3001               	movlw	1
  3839     0595                     u795:
  3840     0595  35F7               	lslf	__Umul8_16@word_mpld,f
  3841     0596  0DF8               	rlf	__Umul8_16@word_mpld+1,f
  3842     0597  0B89               	decfsz	9,f
  3843     0598  2D95               	goto	u795
  3844     0599  1003               	clrc
  3845     059A  0CF9               	rrf	__Umul8_16@multiplier,f
  3846     059B                     l1411:
  3847     059B  0879               	movf	__Umul8_16@multiplier,w
  3848     059C  1D03               	btfss	3,2
  3849     059D  2D9F               	goto	u801
  3850     059E  2DA0               	goto	u800
  3851     059F                     u801:
  3852     059F  2D8C               	goto	l1407
  3853     05A0                     u800:
  3854     05A0                     l1413:
  3855     05A0  0876               	movf	__Umul8_16@product+1,w
  3856     05A1  00F2               	movwf	?__Umul8_16+1
  3857     05A2  0875               	movf	__Umul8_16@product,w
  3858     05A3  00F1               	movwf	?__Umul8_16
  3859     05A4                     l791:
  3860     05A4  0008               	return
  3861     05A5                     __end_of__Umul8_16:
  3862                           
  3863                           	psect	text18
  3864     0607                     __ptext18:	
  3865 ;; *************** function _Analog_read_raw *****************
  3866 ;; Defined at:
  3867 ;;		line 17 in file "./analog_driver.h"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  2    1[COMMON] unsigned short 
  3874 ;; Registers used:
  3875 ;;		wreg
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;Total ram usage:        2 bytes
  3886 ;; Hardware stack levels used: 1
  3887 ;; Hardware stack levels required when called: 1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_Analog_read_percent
  3892 ;;		_Analog_read_voltage
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896     0607                     _Analog_read_raw:	
  3897                           ;psect for function _Analog_read_raw
  3898                           
  3899     0607                     l1425:	
  3900                           ;incstack = 0
  3901                           ; Regs used in _Analog_read_raw: [wreg]
  3902                           
  3903                           
  3904                           ;./analog_driver.h: 18:     ADCON0bits.ON = 1;
  3905     0607  017A               	movlb	58	; select bank58
  3906     0608  17A6               	bsf	38,7	;volatile
  3907                           
  3908                           ;./analog_driver.h: 19:     ADCON0bits.GO = 1;
  3909     0609  1426               	bsf	38,0	;volatile
  3910     060A                     l167:	
  3911                           ;./analog_driver.h: 20:     while(ADCON0bits.GO);
  3912                           
  3913     060A  1826               	btfsc	38,0	;volatile
  3914     060B  2E0D               	goto	u821
  3915     060C  2E0E               	goto	u820
  3916     060D                     u821:
  3917     060D  2E0A               	goto	l167
  3918     060E                     u820:
  3919     060E                     l1427:
  3920                           
  3921                           ;./analog_driver.h: 22:     return ADRES;
  3922     060E  081E               	movf	30,w	;volatile
  3923     060F  00F2               	movwf	?_Analog_read_raw+1
  3924     0610  081D               	movf	29,w	;volatile
  3925     0611  00F1               	movwf	?_Analog_read_raw
  3926     0612                     l170:
  3927     0612  0008               	return
  3928     0613                     __end_of_Analog_read_raw:
  3929                           
  3930                           	psect	intentry
  3931     0004                     __pintentry:	
  3932 ;; *************** function _ISR *****************
  3933 ;; Defined at:
  3934 ;;		line 71 in file "main.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;Total ram usage:        1 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		Interrupt level 1
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961     0004                     _ISR:
  3962                           
  3963                           ;incstack = 0
  3964     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3965                           
  3966                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3967     0005  3180               	pagesel	$
  3968     0006                     i1l1775:
  3969                           
  3970                           ;main.c: 73:     if(PIR3bits.RC2IF){
  3971     0006  0141               	movlb	1	; select bank1
  3972     0007  1E8F               	btfss	15,5	;volatile
  3973     0008  280A               	goto	u139_21
  3974     0009  280B               	goto	u139_20
  3975     000A                     u139_21:
  3976     000A  2829               	goto	i1l211
  3977     000B                     u139_20:
  3978     000B                     i1l1777:
  3979                           
  3980                           ;main.c: 76:             if(RX_index < 80){
  3981     000B  3050               	movlw	80
  3982     000C  027C               	subwf	_RX_index,w
  3983     000D  1803               	skipnc
  3984     000E  2810               	goto	u140_21
  3985     000F  2811               	goto	u140_20
  3986     0010                     u140_21:
  3987     0010  281C               	goto	i1l1783
  3988     0011                     u140_20:
  3989     0011                     i1l1779:
  3990                           
  3991                           ;main.c: 77:                 RX_buffer[RX_index] = RC2REG;
  3992     0011  087C               	movf	_RX_index,w
  3993     0012  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  3994     0013  0086               	movwf	6
  3995     0014  0187               	clrf	7
  3996     0015  014C               	movlb	12	; select bank12
  3997     0016  0816               	movf	22,w	;volatile
  3998     0017  0081               	movwf	1
  3999     0018                     i1l1781:
  4000                           
  4001                           ;main.c: 78:                 RX_index ++;
  4002     0018  3001               	movlw	1
  4003     0019  00F0               	movwf	??_ISR
  4004     001A  0870               	movf	??_ISR,w
  4005     001B  07FC               	addwf	_RX_index,f
  4006     001C                     i1l1783:
  4007                           
  4008                           ;main.c: 81:         if(RC2STAbits.FERR){
  4009     001C  014C               	movlb	12	; select bank12
  4010     001D  1D1A               	btfss	26,2	;volatile
  4011     001E  2820               	goto	u141_21
  4012     001F  2821               	goto	u141_20
  4013     0020                     u141_21:
  4014     0020  2823               	goto	i1l209
  4015     0021                     u141_20:
  4016     0021                     i1l1785:
  4017                           
  4018                           ;main.c: 83:             RC2STAbits.SPEN = 0;
  4019     0021  139A               	bcf	26,7	;volatile
  4020                           
  4021                           ;main.c: 84:             RC2STAbits.SPEN = 1;
  4022     0022  179A               	bsf	26,7	;volatile
  4023     0023                     i1l209:	
  4024                           ;main.c: 86:         }
  4025                           
  4026                           
  4027                           ;main.c: 87:         if(RC2STAbits.OERR){
  4028     0023  1C9A               	btfss	26,1	;volatile
  4029     0024  2826               	goto	u142_21
  4030     0025  2827               	goto	u142_20
  4031     0026                     u142_21:
  4032     0026  2829               	goto	i1l211
  4033     0027                     u142_20:
  4034     0027                     i1l1787:
  4035                           
  4036                           ;main.c: 89:             RC2STAbits.CREN = 0;
  4037     0027  121A               	bcf	26,4	;volatile
  4038                           
  4039                           ;main.c: 90:             RC2STAbits.CREN = 1;
  4040     0028  161A               	bsf	26,4	;volatile
  4041     0029                     i1l211:
  4042     0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4043     002A  0009               	retfie
  4044     002B                     __end_of_ISR:
  4045     007E                     btemp	set	126	;btemp
  4046     007E                     int$flags	set	126
  4047     007E                     wtemp0	set	126
  4048                           
  4049                           	psect	idloc
  4050                           
  4051                           ;Config register IDLOC0 @ 0x8000
  4052                           ;	unspecified, using default values
  4053     8000                     	org	32768
  4054     8000  3FFF               	dw	16383
  4055                           
  4056                           ;Config register IDLOC1 @ 0x8001
  4057                           ;	unspecified, using default values
  4058     8001                     	org	32769
  4059     8001  3FFF               	dw	16383
  4060                           
  4061                           ;Config register IDLOC2 @ 0x8002
  4062                           ;	unspecified, using default values
  4063     8002                     	org	32770
  4064     8002  3FFF               	dw	16383
  4065                           
  4066                           ;Config register IDLOC3 @ 0x8003
  4067                           ;	unspecified, using default values
  4068     8003                     	org	32771
  4069     8003  3FFF               	dw	16383
  4070                           
  4071                           	psect	config
  4072                           
  4073                           ;Config register CONFIG1 @ 0x8007
  4074                           ;	External Oscillator Selection bits
  4075                           ;	FEXTOSC = OFF, Oscillator not enabled
  4076                           ;	Reset Oscillator Selection bits
  4077                           ;	RSTOSC = HFINTOSC_1MHz, HFINTOSC (1MHz)
  4078                           ;	Clock Out Enable bit
  4079                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  4080                           ;	VDD Range Analog Calibration Selection bit
  4081                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3 - 5
      +                          .5V
  4082     8007                     	org	32775
  4083     8007  3FEC               	dw	16364
  4084                           
  4085                           ;Config register CONFIG2 @ 0x8008
  4086                           ;	Master Clear Enable bit
  4087                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4088                           ;	Power-up Timer Selection bits
  4089                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4090                           ;	WDT Operating Mode bits
  4091                           ;	WDTE = ON, WDT enabled regardless of Sleep; SEN bit is ignored
  4092                           ;	Brown-out Reset Enable bits
  4093                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit is ignored
  4094                           ;	DAC Buffer Automatic Range Select Enable bit
  4095                           ;	DACAUTOEN = OFF, DAC Buffer reference range is determined by the REFRNG bit
  4096                           ;	Brown-out Reset Voltage Selection bit
  4097                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4098                           ;	ZCD Disable bit
  4099                           ;	ZCD = OFF, ZCD module is disabled; ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4100                           ;	PPSLOCKED One-Way Set Enable bit
  4101                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once after an unlocking se
      +                          quence is executed; once PPSLOCKED is set, all future changes to PPS registers are preve
      +                          nted
  4102                           ;	Stack Overflow/Underflow Reset Enable bit
  4103                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4104     8008                     	org	32776
  4105     8008  3FFF               	dw	16383
  4106                           
  4107                           ;Config register CONFIG3 @ 0x8009
  4108                           ;	unspecified, using default values
  4109     8009                     	org	32777
  4110     8009  3FFF               	dw	16383
  4111                           
  4112                           ;Config register CONFIG4 @ 0x800A
  4113                           ;	Boot Block Size Selection bits
  4114                           ;	BBSIZE = BB512, 512 words boot block size
  4115                           ;	Boot Block Enable bit
  4116                           ;	BBEN = OFF, Boot Block disabled
  4117                           ;	Storage Area Flash (SAF) Enable bit
  4118                           ;	SAFEN = OFF, SAF disabled
  4119                           ;	Application Block Write Protection bit
  4120                           ;	WRTAPP = OFF, Application Block is NOT write protected
  4121                           ;	Boot Block Write Protection bit
  4122                           ;	WRTB = OFF, Boot Block is NOT write protected
  4123                           ;	Configuration Register Write Protection bit
  4124                           ;	WRTC = OFF, Configuration Register is NOT write protected
  4125                           ;	Data EEPROM Write-Protection bit
  4126                           ;	WRTD = OFF, Data EEPROM is NOT write-protected
  4127                           ;	Storage Area Flash (SAF) Write Protection bit
  4128                           ;	WRTSAF = OFF, SAF is NOT write protected
  4129                           ;	Low Voltage Programming Enable bit
  4130                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored
  4131     800A                     	org	32778
  4132     800A  3FFF               	dw	16383
  4133                           
  4134                           ;Config register CONFIG5 @ 0x800B
  4135                           ;	Program Flash Memory Code Protection bit
  4136                           ;	CP = OFF, Program Flash Memory code protection is disabled
  4137                           ;	Data EEPROM Code Protection bit
  4138                           ;	CPD = OFF, EEPROM code protection is disabled
  4139     800B                     	org	32779
  4140     800B  3FFF               	dw	16383

Data Sizes:
    Strings     98
    Constant    16
    Data        0
    BSS         81
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     47      47
    BANK1            80      0      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    AT_command@at_command	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[11]), STR_13(CODE[12]), STR_1(CODE[11]), 

    AT_command_check@expected_response	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_18(CODE[22]), STR_10(CODE[22]), STR_5(CODE[8]), 

    AT_command_check@at_command	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_17(CODE[8]), STR_9(CODE[8]), STR_4(CODE[3]), 

    EUSART_clear_buffer@buffer	PTR unsigned char  size(1) Largest target is 80
		 -> RX_buffer(BANK1[80]), 

    EUSART_print@string	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_17(CODE[8]), STR_14(CODE[11]), STR_13(CODE[12]), STR_12(CODE[11]), 
		 -> STR_11(CODE[12]), STR_9(CODE[8]), STR_6(CODE[11]), STR_4(CODE[3]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_AT_command_check
    _LoRa_setup->_AT_command_check
    _AT_command_check->_EUSART_print
    _AT_command->_EUSART_print
    _LoRa_send_data->_EUSART_print
    _EUSART_print_hex->_EUSART_write
    _EUSART_print->_EUSART_write
    _Analog_read_percent->___fltol
    ___flmul->__Umul8_16

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Analog_read_percent
    _LoRa_setup->_AT_command_check
    _Analog_read_percent->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   12227
                                             43 BANK0      4     4      0
                         _AT_command
                   _AT_command_check
                _Analog_read_percent
                       _Analog_setup
                _EUSART_clear_buffer
                       _EUSART_setup
                     _LoRa_send_data
                         _LoRa_setup
                        _SLEEP_start
                          _WDT_setup
 ---------------------------------------------------------------------------------
 (1) _WDT_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SLEEP_start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRa_setup                                           2     2      0    3614
                                              5 BANK0      2     2      0
                         _AT_command
                   _AT_command_check
                       _EUSART_print
 ---------------------------------------------------------------------------------
 (2) _AT_command_check                                    10     5      5    2060
                                              8 COMMON     4     4      0
                                              0 BANK0      5     0      5
                _EUSART_clear_buffer
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_clear_buffer                                  4     3      1     382
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _AT_command                                           3     1      2     943
                                              8 COMMON     3     1      2
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (1) _LoRa_send_data                                       6     1      5    1228
                                              8 COMMON     1     1      0
                                              0 BANK0      5     0      5
                       _EUSART_print
                   _EUSART_print_hex
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_print_hex                                     3     3      0     161
                                              2 COMMON     3     3      0
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_print                                         6     4      2     611
                                              2 COMMON     6     4      2
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Analog_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Analog_read_percent                                  3     3      0    3926
                                             40 BANK0      3     3      0
                    _Analog_read_raw
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             10 COMMON     2     2      0
                                             32 BANK0      8     4      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _Analog_read_raw                                      2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AT_command
     _EUSART_print
       _EUSART_write
     _EUSART_write
   _AT_command_check
     _EUSART_clear_buffer
     _EUSART_print
     _EUSART_write
   _Analog_read_percent
     _Analog_read_raw
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Analog_setup
   _EUSART_clear_buffer
   _EUSART_setup
   _LoRa_send_data
     _EUSART_print
     _EUSART_print_hex
       _EUSART_write
     _EUSART_write
   _LoRa_setup
     _AT_command
     _AT_command_check
     _EUSART_print
   _SLEEP_start
   _WDT_setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2F      2F       6       58.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 24 17:55:20 2024

                               l82 065F                                 l91 063D  
                               l85 05E1                                 l79 0659  
                               l88 0635                __Umul8_16@word_mpld 0077  
                              l103 055D                                l111 0581  
                              l202 05CD                                l117 05B9  
                              l170 0612                                l164 05EE  
                              l167 060A                                l191 0412  
                              l183 04AD                                l176 04E4  
                              l186 0511                                l198 0463  
                              l820 02D1                                l574 03ED  
                              l814 0298                                l567 0402  
                              l816 031F                                l577 0402  
                              l770 0274                                l827 02EB  
                              l828 02F7                                l782 0268  
                              l791 05A4                                l776 01F4  
                              l789 0594                                _ISR 0004  
                              u800 05A0                                u801 059F  
                              u820 060E                                u900 03CC  
                              u821 060D                                u901 03CB  
                              u920 03DC                                u921 03DB  
                              u930 03E3                                u931 03E2  
                              u915 03CE                                u780 0590  
                              u781 058F                                u950 03F2  
                              u870 039C                                u951 03F1  
                              u871 039B                                u960 03F7  
                              u880 03B2                                u961 03F6  
                              u945 03E5                                u970 0044  
                              u890 03C5                                u795 0595  
                              u971 0043                                u891 03C4  
                              u980 004A                                u981 0049  
                              u885 03AE                                u990 004F  
                              u991 004E                                wreg 0009  
                     ___flmul@aexp 0038                       ___flmul@bexp 0039  
                     ___flmul@sign 0033                       ___flmul@temp 003E  
                     ___flmul@prod 003A                        main@battery 004D  
                             ?_ISR 0070             LoRa_send_data@humidity 0022  
                     _BAUD2CONbits 061C                       ___fltol@exp1 007B  
                             l1411 059B                               l1403 0583  
                 ?_Analog_read_raw 0071                               l1413 05A0  
                             l1405 0585                               l1501 03E4  
                             l1407 058C                               l1511 0040  
                             l1503 03F2                               l1425 0607  
                             l1409 0590                               l1601 01D0  
                             l1521 0057                               l1513 0044  
                             l1505 03F7                               l1427 060E  
                             l1611 01F1                               l1603 01D4  
                             l1531 006C                               l1523 0059  
                             l1515 0045                               l1507 003A  
                             l1621 020A                               l1605 01D8  
                             l1541 0081                               l1533 006D  
                             l1525 0061                               l1517 004A  
                             l1509 003E                               l1701 05D8  
                             l1631 024B                               l1623 0222  
                             l1615 01F9                               l1607 01D9  
                             l1551 009C                               l1543 0089  
                             l1535 0072                               l1527 0066  
                             l1519 004F                               l1471 0392  
                             l1711 05E6                               l1703 05DB  
                             l1641 0266                               l1633 0254  
                             l1617 01FE                               l1625 0226  
                             l1609 01DD                               l1561 00F1  
                             l1553 00A7                               l1545 008E  
                             l1537 0077                               l1529 0068  
                             l1481 03B7                               l1473 039C  
                             l1721 04E3                               l1713 05E9  
                             l1705 05DE                               l1643 026C  
                             l1635 0256                               l1627 0233  
                             l1619 0206                               l1571 0124  
                             l1563 00FE                               l1555 00B4  
                             l1547 0093                               l1539 007F  
                             l1483 03BF                               l1651 0280  
                             l1715 05EA                               l1707 05E0  
                             l1637 0261                               l1629 023D  
                             l1581 0161                               l1573 012F  
                             l1565 010B                               l1557 00CC  
                             l1493 03CD                               l1485 03C1  
                             l1477 03A5                               l1661 02AC  
                             l1653 0290                               l1717 04AE  
                             l1709 05E2                               l1901 046B  
                             l1639 0265                               l1591 01B1  
                             l1583 016C                               l1575 0136  
                             l1567 0112                               l1559 00D9  
                             l1487 03C5                               l1495 03DD  
                             l1479 03B6                               l1671 02D8  
                             l1663 02B7                               l1655 02A0  
                             l1647 0277                               l1719 04B6  
                             l1831 0635                               l1911 04E5  
                             l1903 047E                               l1593 01BD  
                             l1585 017E                               l1577 0148  
                             l1569 011D                               l1681 030D  
                             l1673 02E1                               l1665 02BE  
                             l1649 027C                               l1833 063A  
                             l1841 054D                               l1913 0505  
                             l1905 0486                               l1595 01C4  
                             l1587 0193                               l1579 014F  
                             l1683 0312                               l1675 02E5  
                             l1667 02C2                               l1659 02A9  
                             l1835 0538                               l1851 055F  
                             l1915 0509                               l1843 05A6  
                             l1907 0493                               l1691 0654  
                             l1931 0329                               l1597 01C8  
                             l1589 01AA                               l1685 0316  
                             l1677 02EF                               l1669 02CA  
                             l1837 053A                               l1853 0568  
                             l1861 05C1                               l1845 05A8  
                             l1909 04A6                               l1693 065D  
                             l1941 0344                               l1933 032F  
                             l1925 0320                               l1599 01C9  
                             l1687 0317                               l1679 02F9  
                             l1695 05CE                               l1839 0549  
                             l1855 0573                               l1863 05C5  
                             l1847 05AF                               l1871 040D  
                             l1951 0355                               l1943 0346  
                             l1935 0332                               l1927 0322  
                             l1697 05D5                               l1857 0576  
                             l1849 05B3                               l1881 043A  
                             l1873 0417                               l1865 0403  
                             l1961 037A                               l1953 035A  
                             l1945 0349                               l1937 0334  
                             l1929 0326                               l1699 05D7  
                             l1859 05BA                               l1891 0457  
                             l1883 043C                               l1875 041F  
                             l1867 0409                               l1963 037D  
                             l1955 035F                               l1947 034B  
                             l1939 0341                               l1885 043E  
                             l1893 045B                               l1877 0423  
                             l1869 040B                               l1965 0382  
                             l1957 0360                               l1949 0352  
                             l1895 0462                               l1887 0455  
                             l1879 0436                               l1959 0367  
                             l1899 0464                               STR_1 0613  
                             STR_2 065A                               STR_3 063E  
                             STR_4 065A                               STR_5 063E  
                             STR_6 0629                               STR_7 0646  
                             STR_8 0522                               STR_9 0646  
                             u1000 006C                               u1001 006B  
                             u1010 0072                               u1011 0071  
                             u1020 0077                               u1021 0076  
                             u1110 01C8                               u1030 008E  
                             u1111 01C7                               u1031 008D  
                             u1200 0233                               u1040 0093  
                             u1201 0232                               u1105 01BE  
                             u1041 0092                               u1210 024B  
                             u1130 01D8                               u1211 024A  
                             u1131 01D7                               u1220 0265  
                             u1140 01DD                               u1221 0264  
                             u1205 022F                               u1141 01DC  
                             u1125 01CA                               u1150 01F1  
                             u1070 0189                               u1310 02E5  
                             u1230 027C                               u1215 0247  
                             u1151 01F0                               u1055 010C  
                             u1311 02E4                               u1231 027B  
                             u1160 01F8                               u1080 01A0  
                             u1320 02EB                               u1240 0280  
                             u1161 01F7                               u1065 0137  
                             u1321 02EA                               u1305 02DB  
                             u1241 027F                               u1170 01FE  
                             u1330 02EF                               u1250 02A0  
                             u1171 01FD                               u1075 0185  
                             u1331 02EE                               u1251 029F  
                             u1180 020A                               u1340 0303  
                             u1500 0436                               u1181 0209  
                             u1085 019C                               u1501 0435  
                             u1190 0218                               u1350 0312  
                             u1270 02BD                               u1510 0455  
                             u1095 01AB                               u1351 0311  
                             u1271 02BC                               u1511 0454  
                             u1360 0316                               u1520 0462  
                             u1361 0315                               u1345 02FF  
                             u1265 02B1                               u1521 0461  
                             u1505 0432                               u1290 02D7  
                             u1450 063A                               u1530 047E  
                             u1195 0214                               u1291 02D6  
                             u1451 0639                               u1531 047D  
                             u1460 055D                               u1540 04A6  
                             u1285 02CB                               u1461 055C  
                             u1541 04A5                               u1470 05B9  
                             u1550 035F                               u1607 05C8  
                             u1471 05B8                               u1551 035E  
                             u1560 037A                               u1617 050C  
                             u1561 0379                               u1490 0412  
                             u1491 0411                               u1485 0562  
                             u1577 033A                               u1587 048C  
                             u1597 0437                               _main 0320  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                   ??_LoRa_send_data 0078  
                             start 002B           __end_of_AT_command_check 0464  
               EUSART_write@txData 0071        __end_of_Analog_read_percent 04E5  
                      ?_AT_command 0078                              ??_ISR 0070  
                    ___fltol@sign1 007A                              ?_main 0070  
                            _ADPCH 1D1F                              _ADREF 1D2B  
                            _ADRES 1D1D                              STR_10 0522  
                            STR_11 05EF                              STR_12 061E  
                            STR_13 05FB                              STR_14 0613  
                            STR_17 0646                              STR_18 0522  
                  __end_of___flmul 0275                      ?_EUSART_setup 0070  
                    ?_EUSART_print 0072                    __end_of___fltol 0403  
                    ?_EUSART_write 0070                              i1l211 0029  
                            i1l209 0023                              _PORTA 000C  
                            _TRISA 0012                         _LoRa_setup 0464  
        EUSART_clear_buffer@buffer 0073                              status 0003  
                            wtemp0 007E         AT_command_check@at_command 0020  
      __end_ofEUSART_print_hex@ref 0522            EUSART_clear_buffer@size 0071  
                  __initialization 002D           __end_of_EUSART_print_hex 0582  
                     __end_of_main 0392                     ??_EUSART_setup 0071  
                   ??_EUSART_print 0074                     ??_EUSART_write 0071  
                           ??_main 004B               Analog_read_percent@a 0048  
                     ?_SLEEP_start 0070               Analog_read_percent@r 004A  
                           _ANSELA 1E8C                             _RA1PPS 1D8D  
                           _RA2PPS 1D8E                             _RC2REG 0616  
                           _RA5PPS 1D91                             i1l1781 0018  
                           i1l1783 001C                             i1l1775 0006  
                           i1l1785 0021                             i1l1777 000B  
                           i1l1787 0027                             i1l1779 0011  
                           u140_20 0011                             u140_21 0010  
                           u141_20 0021                             u141_21 0020  
                           u142_20 0027                             u142_21 0026  
                           u139_20 000B                             u139_21 000A  
                           _RX2PPS 1E43                             _TX2REG 0617  
                 __end_of___xxtofl 0320                          ??___flmul 002E  
                        ??___fltol 0044                       _Analog_setup 05E2  
                __end_of_WDT_setup 065A                        ?_LoRa_setup 0070  
                     ___xxtofl@arg 0022                       ___xxtofl@exp 0021  
                     ___xxtofl@val 0071            __end_of__initialization 0036  
                       ___fltol@f1 0040                     __pcstackCOMMON 0070  
                       __pbssBANK1 00A0               __end_of_EUSART_setup 05E2  
             __end_of_EUSART_print 055E               __end_of_EUSART_write 063E  
                __end_of__Umul8_16 05A5                  ?_AT_command_check 0020  
                     ??_AT_command 007A                         __pmaintext 0320  
               ??_AT_command_check 0078                         __pintentry 0004  
                        ?___xxtofl 0071                            _SP2BRGH 0619  
                          _SP2BRGL 0618                            _SSP1ADD 068D  
                          _SSP1BUF 068C                 __end_of_AT_command 05CE  
                ?_EUSART_print_hex 0070                            ___flmul 003A  
                          ___fltol 0392                 ??_EUSART_print_hex 0072  
                          __ptext1 0654                            __ptext2 065D  
                          __ptext3 0464                            __ptext4 0403  
                          __ptext5 05A5                            __ptext6 05BA  
                          __ptext7 04E5                            __ptext8 055E  
                          __ptext9 0538                         ??___xxtofl 0075  
                          clrloop0 064F               end_of_initialization 0036  
                    EUSART_print@c 0077                      ___xxtofl@sign 0020  
                        _TRISAbits 0012                  main@sleep_counter 004E  
AT_command_check@expected_response 0022                       ??_LoRa_setup 0025  
            LoRa_send_data@battery 0024               AT_command@at_command 0078  
                        _WDT_setup 0654                        ___flmul@grs 0034  
                ??_Analog_read_raw 0073                 __end_of_LoRa_setup 04AE  
                        _RX_buffer 00A0                       _EUSART_setup 05CE  
                     _EUSART_print 0538                       _EUSART_write 0634  
              start_initialization 002D                        __end_of_ISR 002B  
              _EUSART_clear_buffer 05A5                         ?_WDT_setup 0070  
                        __Umul8_16 0582               ?_EUSART_clear_buffer 0071  
                AT_command_check@i 007B                          ___flmul@a 002A  
                        ___flmul@b 0026                        __pbssCOMMON 007C  
                        ___latbits 0002                      __pcstackBANK0 0020  
              _Analog_read_percent 04AE                           ?___flmul 0026  
                         ?___fltol 0040                         ?__Umul8_16 0071  
            ??_EUSART_clear_buffer 0072               ?_Analog_read_percent 0070  
                   _LoRa_send_data 04E5                      ??_SLEEP_start 0071  
           EUSART_print_hex@number 0073                        ??_WDT_setup 0071  
              EUSART_print_hex@ref 0512                          clear_ram0 064E  
                         _PIE3bits 0099                           _PIR3bits 008F  
                         _SSP1CON2 0691             __end_of_LoRa_send_data 0512  
                         _SSP1STAT 068F              ??_Analog_read_percent 007C  
                       _ADCON0bits 1D26                      ?_Analog_setup 0070  
                         _RX_index 007C                __end_of_SLEEP_start 0660  
                  _Analog_read_raw 0607                    ?_LoRa_send_data 0020  
                      ??__Umul8_16 0073                     ??_Analog_setup 0071  
                 _AT_command_check 0403                           ___xxtofl 0275  
               EUSART_print@string 0072                           __ptext10 0634  
                         __ptext11 05CE                           __ptext12 05E2  
                         __ptext13 04AE                           __ptext14 0275  
                         __ptext15 0392                           __ptext16 003A  
                         __ptext17 0582                           __ptext18 0607  
                     _SSP1CON1bits 0690                       _SSP1CON2bits 0691  
                       _RC2STAbits 061A                           int$flags 007E  
                       _ODCONAbits 1E8E                       _SSP1STATbits 068F  
    AT_command_check@response_size 0024               EUSART_clear_buffer@i 0074  
                       _INTCONbits 000B                        _SLEEP_start 065D  
                   __pstringtext10 0000                   _EUSART_print_hex 055E  
          __end_of_Analog_read_raw 0613                           intlevel1 0000  
                EUSART_print_hex@a 0074                         _AT_command 05BA  
                    __pstringtext1 0512                      __pstringtext2 05EF  
                    __pstringtext3 05FB                      __pstringtext4 0613  
                    __pstringtext5 061E                      __pstringtext6 0629  
                    __pstringtext7 063E                      __pstringtext8 0646  
                    __pstringtext9 065A             __Umul8_16@multiplicand 0071  
                       _SSP1DATPPS 1E48                         _SSP1CLKPPS 1E47  
                       _WDTCONbits 018C                         _TX2STAbits 061B  
             __Umul8_16@multiplier 0079               __end_of_Analog_setup 05EF  
      __end_of_EUSART_clear_buffer 05BA          LoRa_send_data@temperature 0020  
                __Umul8_16@product 0075  
