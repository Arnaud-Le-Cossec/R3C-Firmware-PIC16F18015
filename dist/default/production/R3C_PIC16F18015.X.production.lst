

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 19 09:09:20 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18015
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Generated 19/10/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F18015 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0000                     	;# 
    79     0001                     	;# 
    80     0002                     	;# 
    81     0003                     	;# 
    82     0004                     	;# 
    83     0005                     	;# 
    84     0006                     	;# 
    85     0007                     	;# 
    86     0008                     	;# 
    87     0009                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     0012                     	;# 
    92     0018                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0096                     	;# 
    99     0097                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009A                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     018E                     	;# 
   106     018F                     	;# 
   107     019C                     	;# 
   108     019C                     	;# 
   109     019D                     	;# 
   110     019D                     	;# 
   111     019E                     	;# 
   112     019F                     	;# 
   113     020E                     	;# 
   114     020F                     	;# 
   115     0210                     	;# 
   116     0211                     	;# 
   117     0212                     	;# 
   118     0213                     	;# 
   119     0214                     	;# 
   120     028C                     	;# 
   121     028C                     	;# 
   122     028D                     	;# 
   123     028E                     	;# 
   124     028F                     	;# 
   125     028F                     	;# 
   126     0290                     	;# 
   127     0290                     	;# 
   128     0291                     	;# 
   129     0291                     	;# 
   130     0292                     	;# 
   131     0292                     	;# 
   132     0293                     	;# 
   133     0294                     	;# 
   134     0295                     	;# 
   135     0295                     	;# 
   136     0296                     	;# 
   137     0296                     	;# 
   138     0297                     	;# 
   139     0297                     	;# 
   140     030C                     	;# 
   141     030C                     	;# 
   142     030D                     	;# 
   143     030D                     	;# 
   144     030E                     	;# 
   145     030F                     	;# 
   146     0310                     	;# 
   147     0310                     	;# 
   148     0311                     	;# 
   149     0312                     	;# 
   150     0312                     	;# 
   151     0313                     	;# 
   152     0313                     	;# 
   153     0314                     	;# 
   154     0315                     	;# 
   155     0316                     	;# 
   156     0316                     	;# 
   157     0317                     	;# 
   158     0318                     	;# 
   159     0318                     	;# 
   160     0319                     	;# 
   161     0319                     	;# 
   162     031A                     	;# 
   163     031B                     	;# 
   164     031C                     	;# 
   165     031C                     	;# 
   166     031D                     	;# 
   167     038C                     	;# 
   168     038C                     	;# 
   169     038D                     	;# 
   170     038E                     	;# 
   171     038F                     	;# 
   172     0390                     	;# 
   173     0390                     	;# 
   174     0391                     	;# 
   175     0392                     	;# 
   176     0393                     	;# 
   177     039F                     	;# 
   178     040C                     	;# 
   179     040C                     	;# 
   180     040D                     	;# 
   181     040E                     	;# 
   182     040F                     	;# 
   183     040F                     	;# 
   184     0410                     	;# 
   185     0411                     	;# 
   186     0412                     	;# 
   187     0412                     	;# 
   188     0413                     	;# 
   189     0414                     	;# 
   190     041F                     	;# 
   191     048C                     	;# 
   192     048C                     	;# 
   193     048D                     	;# 
   194     048E                     	;# 
   195     048F                     	;# 
   196     048F                     	;# 
   197     0490                     	;# 
   198     0491                     	;# 
   199     0492                     	;# 
   200     0493                     	;# 
   201     050C                     	;# 
   202     050C                     	;# 
   203     050D                     	;# 
   204     050D                     	;# 
   205     050E                     	;# 
   206     050F                     	;# 
   207     0510                     	;# 
   208     0511                     	;# 
   209     0512                     	;# 
   210     0513                     	;# 
   211     0514                     	;# 
   212     058C                     	;# 
   213     058D                     	;# 
   214     058E                     	;# 
   215     058F                     	;# 
   216     0590                     	;# 
   217     0591                     	;# 
   218     0592                     	;# 
   219     0593                     	;# 
   220     0594                     	;# 
   221     0595                     	;# 
   222     0596                     	;# 
   223     0597                     	;# 
   224     060C                     	;# 
   225     060D                     	;# 
   226     060E                     	;# 
   227     060E                     	;# 
   228     060F                     	;# 
   229     0610                     	;# 
   230     0611                     	;# 
   231     0612                     	;# 
   232     0616                     	;# 
   233     0617                     	;# 
   234     0618                     	;# 
   235     0618                     	;# 
   236     0619                     	;# 
   237     061A                     	;# 
   238     061B                     	;# 
   239     061C                     	;# 
   240     068C                     	;# 
   241     068D                     	;# 
   242     068E                     	;# 
   243     068F                     	;# 
   244     0690                     	;# 
   245     0691                     	;# 
   246     0692                     	;# 
   247     0696                     	;# 
   248     0697                     	;# 
   249     0698                     	;# 
   250     0699                     	;# 
   251     069A                     	;# 
   252     069B                     	;# 
   253     069C                     	;# 
   254     100C                     	;# 
   255     100D                     	;# 
   256     101F                     	;# 
   257     108C                     	;# 
   258     108D                     	;# 
   259     108E                     	;# 
   260     108F                     	;# 
   261     109F                     	;# 
   262     109F                     	;# 
   263     110C                     	;# 
   264     110D                     	;# 
   265     1C8C                     	;# 
   266     1C8C                     	;# 
   267     1C8D                     	;# 
   268     1C8E                     	;# 
   269     1C8E                     	;# 
   270     1C8F                     	;# 
   271     1C90                     	;# 
   272     1C91                     	;# 
   273     1D0C                     	;# 
   274     1D0C                     	;# 
   275     1D0D                     	;# 
   276     1D0E                     	;# 
   277     1D0E                     	;# 
   278     1D0F                     	;# 
   279     1D10                     	;# 
   280     1D10                     	;# 
   281     1D11                     	;# 
   282     1D12                     	;# 
   283     1D12                     	;# 
   284     1D13                     	;# 
   285     1D14                     	;# 
   286     1D14                     	;# 
   287     1D15                     	;# 
   288     1D16                     	;# 
   289     1D16                     	;# 
   290     1D17                     	;# 
   291     1D18                     	;# 
   292     1D19                     	;# 
   293     1D1A                     	;# 
   294     1D1B                     	;# 
   295     1D1B                     	;# 
   296     1D1C                     	;# 
   297     1D1D                     	;# 
   298     1D1D                     	;# 
   299     1D1E                     	;# 
   300     1D1F                     	;# 
   301     1D21                     	;# 
   302     1D21                     	;# 
   303     1D22                     	;# 
   304     1D23                     	;# 
   305     1D24                     	;# 
   306     1D24                     	;# 
   307     1D25                     	;# 
   308     1D26                     	;# 
   309     1D27                     	;# 
   310     1D28                     	;# 
   311     1D29                     	;# 
   312     1D2A                     	;# 
   313     1D2B                     	;# 
   314     1D2C                     	;# 
   315     1D2D                     	;# 
   316     1D2E                     	;# 
   317     1D8C                     	;# 
   318     1D8D                     	;# 
   319     1D8E                     	;# 
   320     1D90                     	;# 
   321     1D91                     	;# 
   322     1E0C                     	;# 
   323     1E0D                     	;# 
   324     1E0E                     	;# 
   325     1E0F                     	;# 
   326     1E10                     	;# 
   327     1E11                     	;# 
   328     1E12                     	;# 
   329     1E19                     	;# 
   330     1E1A                     	;# 
   331     1E1B                     	;# 
   332     1E1E                     	;# 
   333     1E1F                     	;# 
   334     1E39                     	;# 
   335     1E3D                     	;# 
   336     1E3E                     	;# 
   337     1E3F                     	;# 
   338     1E40                     	;# 
   339     1E41                     	;# 
   340     1E41                     	;# 
   341     1E42                     	;# 
   342     1E42                     	;# 
   343     1E43                     	;# 
   344     1E43                     	;# 
   345     1E44                     	;# 
   346     1E44                     	;# 
   347     1E47                     	;# 
   348     1E48                     	;# 
   349     1E49                     	;# 
   350     1E4A                     	;# 
   351     1E4B                     	;# 
   352     1E4C                     	;# 
   353     1E50                     	;# 
   354     1E8C                     	;# 
   355     1E8D                     	;# 
   356     1E8E                     	;# 
   357     1E8F                     	;# 
   358     1E90                     	;# 
   359     1E91                     	;# 
   360     1E92                     	;# 
   361     1E93                     	;# 
   362     1EE1                     	;# 
   363     1EE2                     	;# 
   364     1F0C                     	;# 
   365     1F0D                     	;# 
   366     1F0E                     	;# 
   367     1FE4                     	;# 
   368     1FE5                     	;# 
   369     1FE6                     	;# 
   370     1FE7                     	;# 
   371     1FE8                     	;# 
   372     1FE8                     	;# 
   373     1FE9                     	;# 
   374     1FEA                     	;# 
   375     1FEA                     	;# 
   376     1FEB                     	;# 
   377     1FED                     	;# 
   378     1FEE                     	;# 
   379     1FEF                     	;# 
   380     0000                     	;# 
   381     0001                     	;# 
   382     0002                     	;# 
   383     0003                     	;# 
   384     0004                     	;# 
   385     0005                     	;# 
   386     0006                     	;# 
   387     0007                     	;# 
   388     0008                     	;# 
   389     0009                     	;# 
   390     000A                     	;# 
   391     000B                     	;# 
   392     000C                     	;# 
   393     0012                     	;# 
   394     0018                     	;# 
   395     008C                     	;# 
   396     008D                     	;# 
   397     008E                     	;# 
   398     008F                     	;# 
   399     0090                     	;# 
   400     0096                     	;# 
   401     0097                     	;# 
   402     0098                     	;# 
   403     0099                     	;# 
   404     009A                     	;# 
   405     018C                     	;# 
   406     018D                     	;# 
   407     018E                     	;# 
   408     018F                     	;# 
   409     019C                     	;# 
   410     019C                     	;# 
   411     019D                     	;# 
   412     019D                     	;# 
   413     019E                     	;# 
   414     019F                     	;# 
   415     020E                     	;# 
   416     020F                     	;# 
   417     0210                     	;# 
   418     0211                     	;# 
   419     0212                     	;# 
   420     0213                     	;# 
   421     0214                     	;# 
   422     028C                     	;# 
   423     028C                     	;# 
   424     028D                     	;# 
   425     028E                     	;# 
   426     028F                     	;# 
   427     028F                     	;# 
   428     0290                     	;# 
   429     0290                     	;# 
   430     0291                     	;# 
   431     0291                     	;# 
   432     0292                     	;# 
   433     0292                     	;# 
   434     0293                     	;# 
   435     0294                     	;# 
   436     0295                     	;# 
   437     0295                     	;# 
   438     0296                     	;# 
   439     0296                     	;# 
   440     0297                     	;# 
   441     0297                     	;# 
   442     030C                     	;# 
   443     030C                     	;# 
   444     030D                     	;# 
   445     030D                     	;# 
   446     030E                     	;# 
   447     030F                     	;# 
   448     0310                     	;# 
   449     0310                     	;# 
   450     0311                     	;# 
   451     0312                     	;# 
   452     0312                     	;# 
   453     0313                     	;# 
   454     0313                     	;# 
   455     0314                     	;# 
   456     0315                     	;# 
   457     0316                     	;# 
   458     0316                     	;# 
   459     0317                     	;# 
   460     0318                     	;# 
   461     0318                     	;# 
   462     0319                     	;# 
   463     0319                     	;# 
   464     031A                     	;# 
   465     031B                     	;# 
   466     031C                     	;# 
   467     031C                     	;# 
   468     031D                     	;# 
   469     038C                     	;# 
   470     038C                     	;# 
   471     038D                     	;# 
   472     038E                     	;# 
   473     038F                     	;# 
   474     0390                     	;# 
   475     0390                     	;# 
   476     0391                     	;# 
   477     0392                     	;# 
   478     0393                     	;# 
   479     039F                     	;# 
   480     040C                     	;# 
   481     040C                     	;# 
   482     040D                     	;# 
   483     040E                     	;# 
   484     040F                     	;# 
   485     040F                     	;# 
   486     0410                     	;# 
   487     0411                     	;# 
   488     0412                     	;# 
   489     0412                     	;# 
   490     0413                     	;# 
   491     0414                     	;# 
   492     041F                     	;# 
   493     048C                     	;# 
   494     048C                     	;# 
   495     048D                     	;# 
   496     048E                     	;# 
   497     048F                     	;# 
   498     048F                     	;# 
   499     0490                     	;# 
   500     0491                     	;# 
   501     0492                     	;# 
   502     0493                     	;# 
   503     050C                     	;# 
   504     050C                     	;# 
   505     050D                     	;# 
   506     050D                     	;# 
   507     050E                     	;# 
   508     050F                     	;# 
   509     0510                     	;# 
   510     0511                     	;# 
   511     0512                     	;# 
   512     0513                     	;# 
   513     0514                     	;# 
   514     058C                     	;# 
   515     058D                     	;# 
   516     058E                     	;# 
   517     058F                     	;# 
   518     0590                     	;# 
   519     0591                     	;# 
   520     0592                     	;# 
   521     0593                     	;# 
   522     0594                     	;# 
   523     0595                     	;# 
   524     0596                     	;# 
   525     0597                     	;# 
   526     060C                     	;# 
   527     060D                     	;# 
   528     060E                     	;# 
   529     060E                     	;# 
   530     060F                     	;# 
   531     0610                     	;# 
   532     0611                     	;# 
   533     0612                     	;# 
   534     0616                     	;# 
   535     0617                     	;# 
   536     0618                     	;# 
   537     0618                     	;# 
   538     0619                     	;# 
   539     061A                     	;# 
   540     061B                     	;# 
   541     061C                     	;# 
   542     068C                     	;# 
   543     068D                     	;# 
   544     068E                     	;# 
   545     068F                     	;# 
   546     0690                     	;# 
   547     0691                     	;# 
   548     0692                     	;# 
   549     0696                     	;# 
   550     0697                     	;# 
   551     0698                     	;# 
   552     0699                     	;# 
   553     069A                     	;# 
   554     069B                     	;# 
   555     069C                     	;# 
   556     100C                     	;# 
   557     100D                     	;# 
   558     101F                     	;# 
   559     108C                     	;# 
   560     108D                     	;# 
   561     108E                     	;# 
   562     108F                     	;# 
   563     109F                     	;# 
   564     109F                     	;# 
   565     110C                     	;# 
   566     110D                     	;# 
   567     1C8C                     	;# 
   568     1C8C                     	;# 
   569     1C8D                     	;# 
   570     1C8E                     	;# 
   571     1C8E                     	;# 
   572     1C8F                     	;# 
   573     1C90                     	;# 
   574     1C91                     	;# 
   575     1D0C                     	;# 
   576     1D0C                     	;# 
   577     1D0D                     	;# 
   578     1D0E                     	;# 
   579     1D0E                     	;# 
   580     1D0F                     	;# 
   581     1D10                     	;# 
   582     1D10                     	;# 
   583     1D11                     	;# 
   584     1D12                     	;# 
   585     1D12                     	;# 
   586     1D13                     	;# 
   587     1D14                     	;# 
   588     1D14                     	;# 
   589     1D15                     	;# 
   590     1D16                     	;# 
   591     1D16                     	;# 
   592     1D17                     	;# 
   593     1D18                     	;# 
   594     1D19                     	;# 
   595     1D1A                     	;# 
   596     1D1B                     	;# 
   597     1D1B                     	;# 
   598     1D1C                     	;# 
   599     1D1D                     	;# 
   600     1D1D                     	;# 
   601     1D1E                     	;# 
   602     1D1F                     	;# 
   603     1D21                     	;# 
   604     1D21                     	;# 
   605     1D22                     	;# 
   606     1D23                     	;# 
   607     1D24                     	;# 
   608     1D24                     	;# 
   609     1D25                     	;# 
   610     1D26                     	;# 
   611     1D27                     	;# 
   612     1D28                     	;# 
   613     1D29                     	;# 
   614     1D2A                     	;# 
   615     1D2B                     	;# 
   616     1D2C                     	;# 
   617     1D2D                     	;# 
   618     1D2E                     	;# 
   619     1D8C                     	;# 
   620     1D8D                     	;# 
   621     1D8E                     	;# 
   622     1D90                     	;# 
   623     1D91                     	;# 
   624     1E0C                     	;# 
   625     1E0D                     	;# 
   626     1E0E                     	;# 
   627     1E0F                     	;# 
   628     1E10                     	;# 
   629     1E11                     	;# 
   630     1E12                     	;# 
   631     1E19                     	;# 
   632     1E1A                     	;# 
   633     1E1B                     	;# 
   634     1E1E                     	;# 
   635     1E1F                     	;# 
   636     1E39                     	;# 
   637     1E3D                     	;# 
   638     1E3E                     	;# 
   639     1E3F                     	;# 
   640     1E40                     	;# 
   641     1E41                     	;# 
   642     1E41                     	;# 
   643     1E42                     	;# 
   644     1E42                     	;# 
   645     1E43                     	;# 
   646     1E43                     	;# 
   647     1E44                     	;# 
   648     1E44                     	;# 
   649     1E47                     	;# 
   650     1E48                     	;# 
   651     1E49                     	;# 
   652     1E4A                     	;# 
   653     1E4B                     	;# 
   654     1E4C                     	;# 
   655     1E50                     	;# 
   656     1E8C                     	;# 
   657     1E8D                     	;# 
   658     1E8E                     	;# 
   659     1E8F                     	;# 
   660     1E90                     	;# 
   661     1E91                     	;# 
   662     1E92                     	;# 
   663     1E93                     	;# 
   664     1EE1                     	;# 
   665     1EE2                     	;# 
   666     1F0C                     	;# 
   667     1F0D                     	;# 
   668     1F0E                     	;# 
   669     1FE4                     	;# 
   670     1FE5                     	;# 
   671     1FE6                     	;# 
   672     1FE7                     	;# 
   673     1FE8                     	;# 
   674     1FE8                     	;# 
   675     1FE9                     	;# 
   676     1FEA                     	;# 
   677     1FEA                     	;# 
   678     1FEB                     	;# 
   679     1FED                     	;# 
   680     1FEE                     	;# 
   681     1FEF                     	;# 
   682                           
   683                           	psect	stringtext1
   684     0516                     __pstringtext1:
   685     0516                     EUSART_print_hex@ref:
   686     0516  3430               	retlw	48
   687     0517  3431               	retlw	49
   688     0518  3432               	retlw	50
   689     0519  3433               	retlw	51
   690     051A  3434               	retlw	52
   691     051B  3435               	retlw	53
   692     051C  3436               	retlw	54
   693     051D  3437               	retlw	55
   694     051E  3438               	retlw	56
   695     051F  3439               	retlw	57
   696     0520  3441               	retlw	65
   697     0521  3442               	retlw	66
   698     0522  3443               	retlw	67
   699     0523  3444               	retlw	68
   700     0524  3445               	retlw	69
   701     0525  3446               	retlw	70
   702     0526                     __end_ofEUSART_print_hex@ref:
   703     000C                     _PORTA	set	12
   704     000B                     _INTCONbits	set	11
   705     0012                     _TRISA	set	18
   706     0012                     _TRISAbits	set	18
   707     0099                     _PIE3bits	set	153
   708     008F                     _PIR3bits	set	143
   709     018C                     _WDTCONbits	set	396
   710     0616                     _RC2REG	set	1558
   711     0617                     _TX2REG	set	1559
   712     0619                     _SP2BRGH	set	1561
   713     0618                     _SP2BRGL	set	1560
   714     061A                     _RC2STAbits	set	1562
   715     061B                     _TX2STAbits	set	1563
   716     061C                     _BAUD2CONbits	set	1564
   717     068C                     _SSP1BUF	set	1676
   718     0691                     _SSP1CON2bits	set	1681
   719     068F                     _SSP1STAT	set	1679
   720     068D                     _SSP1ADD	set	1677
   721     0691                     _SSP1CON2	set	1681
   722     0690                     _SSP1CON1bits	set	1680
   723     068F                     _SSP1STATbits	set	1679
   724     1D1D                     _ADRES	set	7453
   725     1D26                     _ADCON0bits	set	7462
   726     1D2B                     _ADREF	set	7467
   727     1D1F                     _ADPCH	set	7455
   728     1D8E                     _RA2PPS	set	7566
   729     1D8D                     _RA1PPS	set	7565
   730     1D91                     _RA5PPS	set	7569
   731     1E48                     _SSP1DATPPS	set	7752
   732     1E47                     _SSP1CLKPPS	set	7751
   733     1E43                     _RX2PPS	set	7747
   734     1E8C                     _ANSELA	set	7820
   735     1E8E                     _ODCONAbits	set	7822
   736     0526                     STR_8:
   737     0526  342B               	retlw	43	;'+'
   738     0527  344A               	retlw	74	;'J'
   739     0528  344F               	retlw	79	;'O'
   740     0529  3449               	retlw	73	;'I'
   741     052A  344E               	retlw	78	;'N'
   742     052B  343A               	retlw	58	;':'
   743     052C  3420               	retlw	32	;' '
   744     052D  344A               	retlw	74	;'J'
   745     052E  346F               	retlw	111	;'o'
   746     052F  3469               	retlw	105	;'i'
   747     0530  346E               	retlw	110	;'n'
   748     0531  3465               	retlw	101	;'e'
   749     0532  3464               	retlw	100	;'d'
   750     0533  3420               	retlw	32	;' '
   751     0534  3461               	retlw	97	;'a'
   752     0535  346C               	retlw	108	;'l'
   753     0536  3472               	retlw	114	;'r'
   754     0537  3465               	retlw	101	;'e'
   755     0538  3461               	retlw	97	;'a'
   756     0539  3464               	retlw	100	;'d'
   757     053A  3479               	retlw	121	;'y'
   758     053B  3400               	retlw	0
   759                           
   760                           	psect	stringtext2
   761     05F3                     __pstringtext2:
   762     05F3                     STR_11:
   763     05F3  3443               	retlw	67	;'C'
   764     05F4  346F               	retlw	111	;'o'
   765     05F5  346E               	retlw	110	;'n'
   766     05F6  346E               	retlw	110	;'n'
   767     05F7  3465               	retlw	101	;'e'
   768     05F8  3463               	retlw	99	;'c'
   769     05F9  3474               	retlw	116	;'t'
   770     05FA  3465               	retlw	101	;'e'
   771     05FB  3464               	retlw	100	;'d'
   772     05FC  3420               	retlw	32	;' '
   773     05FD  3421               	retlw	33	;'!'
   774     05FE  3400               	retlw	0
   775                           
   776                           	psect	stringtext3
   777     05FF                     __pstringtext3:
   778     05FF                     STR_13:
   779     05FF  3441               	retlw	65	;'A'
   780     0600  3454               	retlw	84	;'T'
   781     0601  342B               	retlw	43	;'+'
   782     0602  344C               	retlw	76	;'L'
   783     0603  344F               	retlw	79	;'O'
   784     0604  3457               	retlw	87	;'W'
   785     0605  3450               	retlw	80	;'P'
   786     0606  344F               	retlw	79	;'O'
   787     0607  3457               	retlw	87	;'W'
   788     0608  3445               	retlw	69	;'E'
   789     0609  3452               	retlw	82	;'R'
   790     060A  3400               	retlw	0
   791                           
   792                           	psect	stringtext4
   793     0617                     __pstringtext4:
   794     0617                     STR_1:
   795     0617  3457               	retlw	87	;'W'
   796     0618  3461               	retlw	97	;'a'
   797     0619  346B               	retlw	107	;'k'
   798     061A  3465               	retlw	101	;'e'
   799     061B  3420               	retlw	32	;' '
   800     061C  3475               	retlw	117	;'u'
   801     061D  3470               	retlw	112	;'p'
   802     061E  3420               	retlw	32	;' '
   803     061F  3421               	retlw	33	;'!'
   804     0620  3421               	retlw	33	;'!'
   805     0621  3400               	retlw	0
   806                           
   807                           	psect	stringtext5
   808     0622                     __pstringtext5:
   809     0622                     STR_12:
   810     0622  3441               	retlw	65	;'A'
   811     0623  3454               	retlw	84	;'T'
   812     0624  342B               	retlw	43	;'+'
   813     0625  344D               	retlw	77	;'M'
   814     0626  3453               	retlw	83	;'S'
   815     0627  3447               	retlw	71	;'G'
   816     0628  3448               	retlw	72	;'H'
   817     0629  3445               	retlw	69	;'E'
   818     062A  3458               	retlw	88	;'X'
   819     062B  343D               	retlw	61	;'='
   820     062C  3400               	retlw	0
   821                           
   822                           	psect	stringtext6
   823     062D                     __pstringtext6:
   824     062D                     STR_6:
   825     062D  3452               	retlw	82	;'R'
   826     062E  3458               	retlw	88	;'X'
   827     062F  342F               	retlw	47	;'/'
   828     0630  3454               	retlw	84	;'T'
   829     0631  3458               	retlw	88	;'X'
   830     0632  3420               	retlw	32	;' '
   831     0633  3446               	retlw	70	;'F'
   832     0634  3461               	retlw	97	;'a'
   833     0635  3469               	retlw	105	;'i'
   834     0636  346C               	retlw	108	;'l'
   835     0637  3400               	retlw	0
   836                           
   837                           	psect	stringtext7
   838     0642                     __pstringtext7:
   839     0642                     STR_3:
   840     0642  342B               	retlw	43	;'+'
   841     0643  3441               	retlw	65	;'A'
   842     0644  3454               	retlw	84	;'T'
   843     0645  343A               	retlw	58	;':'
   844     0646  3420               	retlw	32	;' '
   845     0647  344F               	retlw	79	;'O'
   846     0648  344B               	retlw	75	;'K'
   847     0649  3400               	retlw	0
   848                           
   849                           	psect	stringtext8
   850     064A                     __pstringtext8:
   851     064A                     STR_7:
   852     064A  3441               	retlw	65	;'A'
   853     064B  3454               	retlw	84	;'T'
   854     064C  342B               	retlw	43	;'+'
   855     064D  344A               	retlw	74	;'J'
   856     064E  344F               	retlw	79	;'O'
   857     064F  3449               	retlw	73	;'I'
   858     0650  344E               	retlw	78	;'N'
   859     0651  3400               	retlw	0
   860                           
   861                           	psect	stringtext9
   862     065E                     __pstringtext9:
   863     065E                     STR_2:
   864     065E  3441               	retlw	65	;'A'
   865     065F  3454               	retlw	84	;'T'
   866     0660  3400               	retlw	0
   867                           
   868                           	psect	stringtext10
   869     0000                     __pstringtext10:
   870     0617                     
   871                           	psect	cinit
   872     002D                     start_initialization:	
   873                           ; #config settings
   874                           
   875     002D                     __initialization:
   876                           
   877                           ; Clear objects allocated to COMMON
   878     002D  01FC               	clrf	__pbssCOMMON& (0+127)
   879                           
   880                           ; Clear objects allocated to BANK1
   881     002E  30A0               	movlw	low __pbssBANK1
   882     002F  0084               	movwf	4
   883     0030  3000               	movlw	high __pbssBANK1
   884     0031  0085               	movwf	5
   885     0032  3050               	movlw	80
   886     0033  3186  2652  3180   	fcall	clear_ram0
   887     0036                     end_of_initialization:	
   888                           ;End of C runtime variable initialization code
   889                           
   890     0036                     __end_of__initialization:
   891     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   892     0037  0140               	movlb	0
   893     0038  3183  2B20         	ljmp	_main	;jump to C main() function
   894                           
   895                           	psect	bssCOMMON
   896     007C                     __pbssCOMMON:
   897     007C                     _RX_index:
   898     007C                     	ds	1
   899                           
   900                           	psect	bssBANK1
   901     00A0                     __pbssBANK1:
   902     00A0                     _RX_buffer:
   903     00A0                     	ds	80
   904                           
   905                           	psect	clrtext
   906     0652                     clear_ram0:	
   907                           ;	Called with FSR0 containing the base address, and
   908                           ;	WREG with the size to clear
   909                           
   910     0652  0064               	clrwdt	;clear the watchdog before getting into this loop
   911     0653                     clrloop0:
   912     0653  0180               	clrf	0	;clear RAM location pointed to by FSR
   913     0654  3101               	addfsr 0,1
   914     0655  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   915     0656  2E53               	goto	clrloop0	;have we reached the end yet?
   916     0657  3400               	retlw	0	;all done for this memory range, return
   917                           
   918                           	psect	cstackCOMMON
   919     0070                     __pcstackCOMMON:
   920     0070                     ?_WDT_setup:
   921     0070                     ?_SLEEP_start:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0070                     ?_EUSART_setup:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0070                     ?_EUSART_write:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0070                     ?_EUSART_print_hex:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0070                     ?_Analog_setup:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0070                     ?_Analog_read_percent:	
   937                           ; 1 bytes @ 0x0
   938                           
   939     0070                     ?_LoRa_setup:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0070                     ?_ISR:	
   943                           ; 1 bytes @ 0x0
   944                           
   945     0070                     ??_ISR:	
   946                           ; 1 bytes @ 0x0
   947                           
   948     0070                     ?_main:	
   949                           ; 1 bytes @ 0x0
   950                           
   951                           
   952                           ; 1 bytes @ 0x0
   953     0070                     	ds	1
   954     0071                     ??_WDT_setup:
   955     0071                     ??_SLEEP_start:	
   956                           ; 1 bytes @ 0x1
   957                           
   958     0071                     ??_EUSART_setup:	
   959                           ; 1 bytes @ 0x1
   960                           
   961     0071                     ??_EUSART_write:	
   962                           ; 1 bytes @ 0x1
   963                           
   964     0071                     ?_EUSART_clear_buffer:	
   965                           ; 1 bytes @ 0x1
   966                           
   967     0071                     ??_Analog_setup:	
   968                           ; 1 bytes @ 0x1
   969                           
   970     0071                     ?__Umul8_16:	
   971                           ; 1 bytes @ 0x1
   972                           
   973     0071                     ?_Analog_read_raw:	
   974                           ; 2 bytes @ 0x1
   975                           
   976     0071                     ?___xxtofl:	
   977                           ; 2 bytes @ 0x1
   978                           
   979     0071                     EUSART_write@txData:	
   980                           ; 4 bytes @ 0x1
   981                           
   982     0071                     EUSART_clear_buffer@size:	
   983                           ; 1 bytes @ 0x1
   984                           
   985     0071                     __Umul8_16@multiplicand:	
   986                           ; 1 bytes @ 0x1
   987                           
   988     0071                     ___xxtofl@val:	
   989                           ; 1 bytes @ 0x1
   990                           
   991                           
   992                           ; 4 bytes @ 0x1
   993     0071                     	ds	1
   994     0072                     ?_EUSART_print:
   995     0072                     ??_EUSART_print_hex:	
   996                           ; 1 bytes @ 0x2
   997                           
   998     0072                     ??_EUSART_clear_buffer:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001     0072                     EUSART_print@string:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004                           
  1005                           ; 2 bytes @ 0x2
  1006     0072                     	ds	1
  1007     0073                     ??__Umul8_16:
  1008     0073                     ??_Analog_read_raw:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011     0073                     EUSART_print_hex@number:	
  1012                           ; 1 bytes @ 0x3
  1013                           
  1014     0073                     EUSART_clear_buffer@buffer:	
  1015                           ; 1 bytes @ 0x3
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x3
  1019     0073                     	ds	1
  1020     0074                     ??_EUSART_print:
  1021     0074                     EUSART_print_hex@a:	
  1022                           ; 1 bytes @ 0x4
  1023                           
  1024     0074                     EUSART_clear_buffer@i:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x4
  1029     0074                     	ds	1
  1030     0075                     ??___xxtofl:
  1031     0075                     __Umul8_16@product:	
  1032                           ; 1 bytes @ 0x5
  1033                           
  1034                           
  1035                           ; 2 bytes @ 0x5
  1036     0075                     	ds	2
  1037     0077                     EUSART_print@c:
  1038     0077                     __Umul8_16@word_mpld:	
  1039                           ; 1 bytes @ 0x7
  1040                           
  1041                           
  1042                           ; 2 bytes @ 0x7
  1043     0077                     	ds	1
  1044     0078                     ?_AT_command:
  1045     0078                     ??_AT_command_check:	
  1046                           ; 1 bytes @ 0x8
  1047                           
  1048     0078                     ??_LoRa_send_data:	
  1049                           ; 1 bytes @ 0x8
  1050                           
  1051     0078                     AT_command@at_command:	
  1052                           ; 1 bytes @ 0x8
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x8
  1056     0078                     	ds	1
  1057     0079                     __Umul8_16@multiplier:
  1058                           
  1059                           ; 1 bytes @ 0x9
  1060     0079                     	ds	1
  1061     007A                     ??_AT_command:
  1062     007A                     ___fltol@sign1:	
  1063                           ; 1 bytes @ 0xA
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0xA
  1067     007A                     	ds	1
  1068     007B                     AT_command_check@i:
  1069     007B                     ___fltol@exp1:	
  1070                           ; 1 bytes @ 0xB
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0xB
  1074     007B                     	ds	1
  1075     007C                     ??_Analog_read_percent:
  1076                           
  1077                           	psect	cstackBANK0
  1078     0020                     __pcstackBANK0:	
  1079                           ; 1 bytes @ 0xC
  1080                           
  1081     0020                     ?_AT_command_check:
  1082     0020                     ?_LoRa_send_data:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0020                     ___xxtofl@sign:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088     0020                     LoRa_send_data@temperature:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091     0020                     AT_command_check@at_command:	
  1092                           ; 2 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 2 bytes @ 0x0
  1096     0020                     	ds	1
  1097     0021                     ___xxtofl@exp:
  1098                           
  1099                           ; 1 bytes @ 0x1
  1100     0021                     	ds	1
  1101     0022                     LoRa_send_data@humidity:
  1102     0022                     AT_command_check@expected_response:	
  1103                           ; 2 bytes @ 0x2
  1104                           
  1105     0022                     ___xxtofl@arg:	
  1106                           ; 2 bytes @ 0x2
  1107                           
  1108                           
  1109                           ; 4 bytes @ 0x2
  1110     0022                     	ds	2
  1111     0024                     LoRa_send_data@battery:
  1112     0024                     AT_command_check@response_size:	
  1113                           ; 1 bytes @ 0x4
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x4
  1117     0024                     	ds	1
  1118     0025                     ??_LoRa_setup:
  1119                           
  1120                           ; 1 bytes @ 0x5
  1121     0025                     	ds	1
  1122     0026                     ?___flmul:
  1123     0026                     ___flmul@b:	
  1124                           ; 4 bytes @ 0x6
  1125                           
  1126                           
  1127                           ; 4 bytes @ 0x6
  1128     0026                     	ds	4
  1129     002A                     ___flmul@a:
  1130                           
  1131                           ; 4 bytes @ 0xA
  1132     002A                     	ds	4
  1133     002E                     ??___flmul:
  1134                           
  1135                           ; 1 bytes @ 0xE
  1136     002E                     	ds	5
  1137     0033                     ___flmul@sign:
  1138                           
  1139                           ; 1 bytes @ 0x13
  1140     0033                     	ds	1
  1141     0034                     ___flmul@grs:
  1142                           
  1143                           ; 4 bytes @ 0x14
  1144     0034                     	ds	4
  1145     0038                     ___flmul@aexp:
  1146                           
  1147                           ; 1 bytes @ 0x18
  1148     0038                     	ds	1
  1149     0039                     ___flmul@bexp:
  1150                           
  1151                           ; 1 bytes @ 0x19
  1152     0039                     	ds	1
  1153     003A                     ___flmul@prod:
  1154                           
  1155                           ; 4 bytes @ 0x1A
  1156     003A                     	ds	4
  1157     003E                     ___flmul@temp:
  1158                           
  1159                           ; 2 bytes @ 0x1E
  1160     003E                     	ds	2
  1161     0040                     ?___fltol:
  1162     0040                     ___fltol@f1:	
  1163                           ; 4 bytes @ 0x20
  1164                           
  1165                           
  1166                           ; 4 bytes @ 0x20
  1167     0040                     	ds	4
  1168     0044                     ??___fltol:
  1169                           
  1170                           ; 1 bytes @ 0x24
  1171     0044                     	ds	4
  1172     0048                     Analog_read_percent@a:
  1173                           
  1174                           ; 2 bytes @ 0x28
  1175     0048                     	ds	2
  1176     004A                     Analog_read_percent@r:
  1177                           
  1178                           ; 1 bytes @ 0x2A
  1179     004A                     	ds	1
  1180     004B                     ??_main:
  1181                           
  1182                           ; 1 bytes @ 0x2B
  1183     004B                     	ds	2
  1184     004D                     main@battery:
  1185                           
  1186                           ; 1 bytes @ 0x2D
  1187     004D                     	ds	1
  1188     004E                     main@sleep_counter:
  1189                           
  1190                           ; 1 bytes @ 0x2E
  1191     004E                     	ds	1
  1192                           
  1193                           	psect	maintext
  1194     0320                     __pmaintext:	
  1195 ;;
  1196 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1197 ;;
  1198 ;; *************** function _main *****************
  1199 ;; Defined at:
  1200 ;;		line 99 in file "main.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  humidity        4    0        float 
  1205 ;;  temp            4    0        float 
  1206 ;;  sleep_counte    1   46[BANK0 ] unsigned char 
  1207 ;;  battery         1   45[BANK0 ] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : B3F/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1220 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1221 ;;Total ram usage:        4 bytes
  1222 ;; Hardware stack levels required when called: 5
  1223 ;; This function calls:
  1224 ;;		_AT_command
  1225 ;;		_AT_command_check
  1226 ;;		_Analog_read_percent
  1227 ;;		_Analog_setup
  1228 ;;		_EUSART_clear_buffer
  1229 ;;		_EUSART_setup
  1230 ;;		_LoRa_send_data
  1231 ;;		_LoRa_setup
  1232 ;;		_SLEEP_start
  1233 ;;		_WDT_setup
  1234 ;; This function is called by:
  1235 ;;		Startup code after reset
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239     0320                     _main:	
  1240                           ;psect for function _main
  1241                           
  1242     0320                     l1933:	
  1243                           ;incstack = 0
  1244                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1245                           
  1246                           
  1247                           ;main.c: 101:     INTCONbits.PEIE = 1;
  1248     0320  170B               	bsf	11,6	;volatile
  1249                           
  1250                           ;main.c: 102:     INTCONbits.GIE = 1;
  1251     0321  178B               	bsf	11,7	;volatile
  1252     0322                     l1935:
  1253                           
  1254                           ;main.c: 105:     TRISA &= !(1<<2);
  1255     0322  0140               	movlb	0	; select bank0
  1256     0323  0192               	clrf	18	;volatile
  1257                           
  1258                           ;main.c: 107:     ANSELA = 0x0;
  1259     0324  017D               	movlb	61	; select bank61
  1260     0325  018C               	clrf	12	;volatile
  1261     0326                     l1937:
  1262                           
  1263                           ;main.c: 113:     EUSART_setup();
  1264     0326  3185  25D2  3183   	fcall	_EUSART_setup
  1265     0329                     l1939:
  1266                           
  1267                           ;main.c: 114:     EUSART_clear_buffer(RX_buffer, 80);
  1268     0329  3050               	movlw	80
  1269     032A  00F1               	movwf	EUSART_clear_buffer@size
  1270     032B  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
  1271     032C  3185  25A9  3183   	fcall	_EUSART_clear_buffer
  1272     032F                     l1941:
  1273                           
  1274                           ;main.c: 117:     Analog_setup();
  1275     032F  3185  25E6  3183   	fcall	_Analog_setup
  1276     0332                     l1943:
  1277                           
  1278                           ;main.c: 120:     PORTA |= (1<<2);
  1279     0332  0140               	movlb	0	; select bank0
  1280     0333  150C               	bsf	12,2	;volatile
  1281     0334                     l1945:
  1282                           
  1283                           ;main.c: 121:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1284     0334  3002               	movlw	2
  1285     0335  0140               	movlb	0	; select bank0
  1286     0336  00CC               	movwf	??_main+1
  1287     0337  3045               	movlw	69
  1288     0338  00CB               	movwf	??_main
  1289     0339  30A9               	movlw	169
  1290     033A                     u1577:
  1291     033A  0B89               	decfsz	9,f
  1292     033B  2B3A               	goto	u1577
  1293     033C  0BCB               	decfsz	??_main,f
  1294     033D  2B3A               	goto	u1577
  1295     033E  0BCC               	decfsz	??_main+1,f
  1296     033F  2B3A               	goto	u1577
  1297     0340  3200               	nop2
  1298     0341                     l1947:
  1299                           
  1300                           ;main.c: 122:     LoRa_setup();
  1301     0341  3184  2468  3183   	fcall	_LoRa_setup
  1302     0344                     l1949:
  1303                           
  1304                           ;main.c: 123:     PORTA &= !(1<<2);
  1305     0344  0140               	movlb	0	; select bank0
  1306     0345  018C               	clrf	12	;volatile
  1307     0346                     l1951:
  1308                           
  1309                           ;main.c: 126:     WDT_setup();
  1310     0346  3186  2658  3183   	fcall	_WDT_setup
  1311     0349                     l1953:
  1312                           
  1313                           ;main.c: 129:     uint8_t sleep_counter = 0;
  1314     0349  0140               	movlb	0	; select bank0
  1315     034A  01CE               	clrf	main@sleep_counter
  1316     034B                     l1955:
  1317                           
  1318                           ;main.c: 138:         AT_command("AT+LOWPOWER");
  1319     034B  30FF               	movlw	low (STR_13| (0+32768))
  1320     034C  00F8               	movwf	AT_command@at_command
  1321     034D  3085               	movlw	high (STR_13| (0+32768))
  1322     034E  00F9               	movwf	AT_command@at_command+1
  1323     034F  3185  25BE  3183   	fcall	_AT_command
  1324     0352                     l1957:
  1325                           
  1326                           ;main.c: 139:         SLEEP_start();
  1327     0352  3186  2661  3183   	fcall	_SLEEP_start
  1328     0355                     l1959:
  1329                           
  1330                           ;main.c: 142:         sleep_counter++;
  1331     0355  3001               	movlw	1
  1332     0356  0140               	movlb	0	; select bank0
  1333     0357  00CB               	movwf	??_main
  1334     0358  084B               	movf	??_main,w
  1335     0359  07CE               	addwf	main@sleep_counter,f
  1336     035A                     l1961:
  1337                           
  1338                           ;main.c: 144:         if(sleep_counter >= 1){
  1339     035A  084E               	movf	main@sleep_counter,w
  1340     035B  1903               	btfsc	3,2
  1341     035C  2B5E               	goto	u1551
  1342     035D  2B5F               	goto	u1550
  1343     035E                     u1551:
  1344     035E  2B4B               	goto	l1955
  1345     035F                     u1550:
  1346     035F                     l1963:
  1347                           
  1348                           ;main.c: 146:             sleep_counter = 0;
  1349     035F  01CE               	clrf	main@sleep_counter
  1350     0360                     l1965:
  1351                           
  1352                           ;main.c: 148:             AT_command("Wake up !!");
  1353     0360  3017               	movlw	low (STR_1| (0+32768))
  1354     0361  00F8               	movwf	AT_command@at_command
  1355     0362  3086               	movlw	high (STR_1| (0+32768))
  1356     0363  00F9               	movwf	AT_command@at_command+1
  1357     0364  3185  25BE  3183   	fcall	_AT_command
  1358     0367                     l1967:
  1359                           
  1360                           ;main.c: 150:             if(!AT_command_check("AT+JOIN", "+JOIN: Joined already", 21)){
  1361     0367  304A               	movlw	low (STR_7| (0+32768))
  1362     0368  0140               	movlb	0	; select bank0
  1363     0369  00A0               	movwf	AT_command_check@at_command
  1364     036A  3086               	movlw	high (STR_7| (0+32768))
  1365     036B  00A1               	movwf	AT_command_check@at_command+1
  1366     036C  3026               	movlw	low (STR_8| (0+32768))
  1367     036D  00A2               	movwf	AT_command_check@expected_response
  1368     036E  3085               	movlw	high (STR_8| (0+32768))
  1369     036F  00A3               	movwf	AT_command_check@expected_response+1
  1370     0370  3015               	movlw	21
  1371     0371  00A4               	movwf	AT_command_check@response_size
  1372     0372  3184  2407  3183   	fcall	_AT_command_check
  1373     0375  3A00               	xorlw	0
  1374     0376  1D03               	skipz
  1375     0377  2B79               	goto	u1561
  1376     0378  2B7A               	goto	u1560
  1377     0379                     u1561:
  1378     0379  2B81               	goto	l1975
  1379     037A                     u1560:
  1380     037A                     l1969:
  1381                           
  1382                           ;main.c: 152:                 PORTA |= (1<<2);
  1383     037A  0140               	movlb	0	; select bank0
  1384     037B  150C               	bsf	12,2	;volatile
  1385     037C                     l1971:
  1386                           
  1387                           ;main.c: 153:                 LoRa_setup();
  1388     037C  3184  2468  3183   	fcall	_LoRa_setup
  1389     037F                     l1973:
  1390                           
  1391                           ;main.c: 154:                 PORTA &= !(1<<2);
  1392     037F  0140               	movlb	0	; select bank0
  1393     0380  018C               	clrf	12	;volatile
  1394     0381                     l1975:
  1395                           
  1396                           ;main.c: 159:             battery = Analog_read_percent();
  1397     0381  3184  24B2  3183   	fcall	_Analog_read_percent
  1398     0384  0140               	movlb	0	; select bank0
  1399     0385  00CD               	movwf	main@battery
  1400     0386                     l1977:
  1401                           
  1402                           ;main.c: 162:             LoRa_send_data(0x2525, 0x2323, battery);
  1403     0386  3025               	movlw	37
  1404     0387  00A0               	movwf	LoRa_send_data@temperature
  1405     0388  3025               	movlw	37
  1406     0389  00A1               	movwf	LoRa_send_data@temperature+1
  1407     038A  3023               	movlw	35
  1408     038B  00A2               	movwf	LoRa_send_data@humidity
  1409     038C  3023               	movlw	35
  1410     038D  00A3               	movwf	LoRa_send_data@humidity+1
  1411     038E  084D               	movf	main@battery,w
  1412     038F  00A4               	movwf	LoRa_send_data@battery
  1413     0390  3184  24E9  3183   	fcall	_LoRa_send_data
  1414     0393  2B4B               	goto	l1955
  1415     0394  3180  282B         	ljmp	start
  1416     0396                     __end_of_main:
  1417                           
  1418                           	psect	text1
  1419     0658                     __ptext1:	
  1420 ;; *************** function _WDT_setup *****************
  1421 ;; Defined at:
  1422 ;;		line 4 in file "./watchdog_driver.h"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; Hardware stack levels required when called: 1
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450     0658                     _WDT_setup:	
  1451                           ;psect for function _WDT_setup
  1452                           
  1453     0658                     l1695:	
  1454                           ;incstack = 0
  1455                           ; Regs used in _WDT_setup: [wreg+status,2+status,0]
  1456                           
  1457                           
  1458                           ;./watchdog_driver.h: 8:     WDTCONbits.PS = 0b10000;
  1459     0658  0143               	movlb	3	; select bank3
  1460     0659  080C               	movf	12,w	;volatile
  1461     065A  39C1               	andlw	-63
  1462     065B  3820               	iorlw	32
  1463     065C  008C               	movwf	12	;volatile
  1464     065D                     l79:
  1465     065D  0008               	return
  1466     065E                     __end_of_WDT_setup:
  1467                           
  1468                           	psect	text2
  1469     0661                     __ptext2:	
  1470 ;; *************** function _SLEEP_start *****************
  1471 ;; Defined at:
  1472 ;;		line 11 in file "./watchdog_driver.h"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		None
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 1
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500     0661                     _SLEEP_start:	
  1501                           ;psect for function _SLEEP_start
  1502                           
  1503     0661                     l1697:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _SLEEP_start: []
  1506                           
  1507     0661  0064               	clrwdt	;# 
  1508     0662  0063               	sleep	;# 
  1509     0663                     l82:
  1510     0663  0008               	return
  1511     0664                     __end_of_SLEEP_start:
  1512                           
  1513                           	psect	text3
  1514     0468                     __ptext3:	
  1515 ;; *************** function _LoRa_setup *****************
  1516 ;; Defined at:
  1517 ;;		line 8 in file "./lora_driver.h"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1533 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1534 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;Total ram usage:        2 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 4
  1538 ;; This function calls:
  1539 ;;		_AT_command
  1540 ;;		_AT_command_check
  1541 ;;		_EUSART_print
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547     0468                     _LoRa_setup:	
  1548                           ;psect for function _LoRa_setup
  1549                           
  1550     0468                     l1907:	
  1551                           ;incstack = 0
  1552                           ; Regs used in _LoRa_setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1553                           
  1554                           
  1555                           ;./lora_driver.h: 10:     AT_command("Wake up !!");
  1556     0468  3017               	movlw	low (STR_1| (0+32768))
  1557     0469  00F8               	movwf	AT_command@at_command
  1558     046A  3086               	movlw	high (STR_1| (0+32768))
  1559     046B  00F9               	movwf	AT_command@at_command+1
  1560     046C  3185  25BE  3184   	fcall	_AT_command
  1561     046F                     l1909:
  1562                           
  1563                           ;./lora_driver.h: 12:     if(!AT_command_check("AT", "+AT: OK", 7)){
  1564     046F  305E               	movlw	low (STR_2| (0+32768))
  1565     0470  0140               	movlb	0	; select bank0
  1566     0471  00A0               	movwf	AT_command_check@at_command
  1567     0472  3086               	movlw	high (STR_2| (0+32768))
  1568     0473  00A1               	movwf	AT_command_check@at_command+1
  1569     0474  3042               	movlw	low (STR_3| (0+32768))
  1570     0475  00A2               	movwf	AT_command_check@expected_response
  1571     0476  3086               	movlw	high (STR_3| (0+32768))
  1572     0477  00A3               	movwf	AT_command_check@expected_response+1
  1573     0478  3007               	movlw	7
  1574     0479  00A4               	movwf	AT_command_check@response_size
  1575     047A  3184  2407  3184   	fcall	_AT_command_check
  1576     047D  3A00               	xorlw	0
  1577     047E  1D03               	skipz
  1578     047F  2C81               	goto	u1531
  1579     0480  2C82               	goto	u1530
  1580     0481                     u1531:
  1581     0481  2C97               	goto	l1915
  1582     0482                     u1530:
  1583     0482                     l1911:
  1584                           
  1585                           ;./lora_driver.h: 13:         EUSART_print("RX/TX Fail");
  1586     0482  302D               	movlw	low (STR_6| (0+32768))
  1587     0483  00F2               	movwf	EUSART_print@string
  1588     0484  3086               	movlw	high (STR_6| (0+32768))
  1589     0485  00F3               	movwf	EUSART_print@string+1
  1590     0486  3185  253C  3184   	fcall	_EUSART_print
  1591     0489  2C97               	goto	l1915
  1592     048A                     l1913:
  1593                           
  1594                           ;./lora_driver.h: 19:         _delay((unsigned long)((20000)*(1000000/4000.0)));
  1595     048A  301A               	movlw	26
  1596     048B  0140               	movlb	0	; select bank0
  1597     048C  00A6               	movwf	??_LoRa_setup+1
  1598     048D  305E               	movlw	94
  1599     048E  00A5               	movwf	??_LoRa_setup
  1600     048F  306E               	movlw	110
  1601     0490                     u1587:
  1602     0490  0B89               	decfsz	9,f
  1603     0491  2C90               	goto	u1587
  1604     0492  0BA5               	decfsz	??_LoRa_setup,f
  1605     0493  2C90               	goto	u1587
  1606     0494  0BA6               	decfsz	??_LoRa_setup+1,f
  1607     0495  2C90               	goto	u1587
  1608     0496  0000               	nop
  1609     0497                     l1915:
  1610                           
  1611                           ;./lora_driver.h: 18:     while(!AT_command_check("AT+JOIN", "+JOIN: Joined already", 21
      +                          )){
  1612     0497  304A               	movlw	low (STR_7| (0+32768))
  1613     0498  0140               	movlb	0	; select bank0
  1614     0499  00A0               	movwf	AT_command_check@at_command
  1615     049A  3086               	movlw	high (STR_7| (0+32768))
  1616     049B  00A1               	movwf	AT_command_check@at_command+1
  1617     049C  3026               	movlw	low (STR_8| (0+32768))
  1618     049D  00A2               	movwf	AT_command_check@expected_response
  1619     049E  3085               	movlw	high (STR_8| (0+32768))
  1620     049F  00A3               	movwf	AT_command_check@expected_response+1
  1621     04A0  3015               	movlw	21
  1622     04A1  00A4               	movwf	AT_command_check@response_size
  1623     04A2  3184  2407  3184   	fcall	_AT_command_check
  1624     04A5  3A00               	xorlw	0
  1625     04A6  1903               	skipnz
  1626     04A7  2CA9               	goto	u1541
  1627     04A8  2CAA               	goto	u1540
  1628     04A9                     u1541:
  1629     04A9  2C8A               	goto	l1913
  1630     04AA                     u1540:
  1631     04AA                     l1917:
  1632                           
  1633                           ;./lora_driver.h: 21:     EUSART_print("Connected !");
  1634     04AA  30F3               	movlw	low (STR_11| (0+32768))
  1635     04AB  00F2               	movwf	EUSART_print@string
  1636     04AC  3085               	movlw	high (STR_11| (0+32768))
  1637     04AD  00F3               	movwf	EUSART_print@string+1
  1638     04AE  3185  253C  3184   	fcall	_EUSART_print
  1639     04B1                     l183:
  1640     04B1  0008               	return
  1641     04B2                     __end_of_LoRa_setup:
  1642                           
  1643                           	psect	text4
  1644     0407                     __ptext4:	
  1645 ;; *************** function _AT_command_check *****************
  1646 ;; Defined at:
  1647 ;;		line 39 in file "./lora_driver.h"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  at_command      2    0[BANK0 ] PTR const unsigned char 
  1650 ;;		 -> STR_17(8), STR_9(8), STR_4(3), 
  1651 ;;  expected_res    2    2[BANK0 ] PTR const unsigned char 
  1652 ;;		 -> STR_18(22), STR_10(22), STR_5(8), 
  1653 ;;  response_siz    1    4[BANK0 ] unsigned char 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  i               1   11[COMMON] unsigned char 
  1656 ;;  tmp             1    0        unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      unsigned char 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1666 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1669 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1670 ;;Total ram usage:        9 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 3
  1673 ;; This function calls:
  1674 ;;		_EUSART_clear_buffer
  1675 ;;		_EUSART_print
  1676 ;;		_EUSART_write
  1677 ;; This function is called by:
  1678 ;;		_LoRa_setup
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683     0407                     _AT_command_check:	
  1684                           ;psect for function _AT_command_check
  1685                           
  1686     0407                     l1873:	
  1687                           ;incstack = 0
  1688                           ; Regs used in _AT_command_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1689                           
  1690                           
  1691                           ;./lora_driver.h: 41:     EUSART_clear_buffer(RX_buffer, 80);
  1692     0407  3050               	movlw	80
  1693     0408  00F1               	movwf	EUSART_clear_buffer@size
  1694     0409  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
  1695     040A  3185  25A9  3184   	fcall	_EUSART_clear_buffer
  1696     040D                     l1875:
  1697                           
  1698                           ;./lora_driver.h: 42:     RX_index = 0;
  1699     040D  01FC               	clrf	_RX_index
  1700                           
  1701                           ;./lora_driver.h: 44:     uint8_t tmp;;./lora_driver.h: 45:     while(PIR3bits.RC2IF){
  1702     040E  2C11               	goto	l1879
  1703     040F                     l1877:
  1704     040F  014C               	movlb	12	; select bank12
  1705     0410  0816               	movf	22,w	;volatile
  1706     0411                     l1879:
  1707                           
  1708                           ;./lora_driver.h: 45:     while(PIR3bits.RC2IF){
  1709     0411  0141               	movlb	1	; select bank1
  1710     0412  1A8F               	btfsc	15,5	;volatile
  1711     0413  2C15               	goto	u1491
  1712     0414  2C16               	goto	u1490
  1713     0415                     u1491:
  1714     0415  2C0F               	goto	l1877
  1715     0416                     u1490:
  1716     0416                     l191:
  1717                           
  1718                           ;./lora_driver.h: 48:     RC2STAbits.CREN = 0;
  1719     0416  014C               	movlb	12	; select bank12
  1720     0417  121A               	bcf	26,4	;volatile
  1721                           
  1722                           ;./lora_driver.h: 49:     RC2STAbits.CREN = 1;
  1723     0418  161A               	bsf	26,4	;volatile
  1724                           
  1725                           ;./lora_driver.h: 51:     PIE3bits.RC2IE = 1;
  1726     0419  0141               	movlb	1	; select bank1
  1727     041A  1699               	bsf	25,5	;volatile
  1728     041B                     l1881:
  1729                           
  1730                           ;./lora_driver.h: 53:     EUSART_print(at_command);
  1731     041B  0140               	movlb	0	; select bank0
  1732     041C  0821               	movf	AT_command_check@at_command+1,w
  1733     041D  00F3               	movwf	EUSART_print@string+1
  1734     041E  0820               	movf	AT_command_check@at_command,w
  1735     041F  00F2               	movwf	EUSART_print@string
  1736     0420  3185  253C  3184   	fcall	_EUSART_print
  1737     0423                     l1883:
  1738                           
  1739                           ;./lora_driver.h: 54:     EUSART_write(0x0A);
  1740     0423  300A               	movlw	10
  1741     0424  3186  2638  3184   	fcall	_EUSART_write
  1742     0427                     l1885:	
  1743                           ;./lora_driver.h: 57:     while(RX_index < response_size+2);
  1744                           
  1745     0427  0140               	movlb	0	; select bank0
  1746     0428  0824               	movf	AT_command_check@response_size,w
  1747     0429  3E02               	addlw	2
  1748     042A  00F8               	movwf	??_AT_command_check
  1749     042B  3000               	movlw	0
  1750     042C  1803               	skipnc
  1751     042D  3001               	movlw	1
  1752     042E  00F9               	movwf	??_AT_command_check+1
  1753     042F  0879               	movf	??_AT_command_check+1,w
  1754     0430  3A80               	xorlw	128
  1755     0431  3C80               	sublw	128
  1756     0432  1D03               	skipz
  1757     0433  2C36               	goto	u1505
  1758     0434  0878               	movf	??_AT_command_check,w
  1759     0435  027C               	subwf	_RX_index,w
  1760     0436                     u1505:
  1761     0436  1C03               	skipc
  1762     0437  2C39               	goto	u1501
  1763     0438  2C3A               	goto	u1500
  1764     0439                     u1501:
  1765     0439  2C27               	goto	l1885
  1766     043A                     u1500:
  1767     043A                     l1887:
  1768                           
  1769                           ;./lora_driver.h: 58:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1770     043A  30FA               	movlw	250
  1771     043B                     u1597:
  1772     043B  3200               	nop2
  1773     043C  0B89               	decfsz	9,f
  1774     043D  2C3B               	goto	u1597
  1775     043E                     l1889:
  1776                           
  1777                           ;./lora_driver.h: 60:     PIE3bits.RC2IE = 0;
  1778     043E  0141               	movlb	1	; select bank1
  1779     043F  1299               	bcf	25,5	;volatile
  1780     0440                     l1891:
  1781                           
  1782                           ;./lora_driver.h: 61:     for(uint8_t i=0; i<response_size; i++){
  1783     0440  01FB               	clrf	AT_command_check@i
  1784     0441  2C5F               	goto	l1901
  1785     0442                     l1893:
  1786                           
  1787                           ;./lora_driver.h: 63:         if(RX_buffer[i] != expected_response[i]){
  1788     0442  0823               	movf	AT_command_check@expected_response+1,w
  1789     0443  00F9               	movwf	??_AT_command_check+1
  1790     0444  0822               	movf	AT_command_check@expected_response,w
  1791     0445  00F8               	movwf	??_AT_command_check
  1792     0446  087B               	movf	AT_command_check@i,w
  1793     0447  0778               	addwf	??_AT_command_check,w
  1794     0448  0084               	movwf	4
  1795     0449  0879               	movf	??_AT_command_check+1,w
  1796     044A  1803               	skipnc
  1797     044B  0A79               	incf	??_AT_command_check+1,w
  1798     044C  0085               	movwf	5
  1799     044D  0800               	movf	0,w	;code access
  1800     044E  00FA               	movwf	??_AT_command_check+2
  1801     044F  087B               	movf	AT_command_check@i,w
  1802     0450  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  1803     0451  0086               	movwf	6
  1804     0452  0187               	clrf	7
  1805     0453  0801               	movf	1,w
  1806     0454  067A               	xorwf	??_AT_command_check+2,w
  1807     0455  1903               	skipnz
  1808     0456  2C58               	goto	u1511
  1809     0457  2C59               	goto	u1510
  1810     0458                     u1511:
  1811     0458  2C5B               	goto	l1899
  1812     0459                     u1510:
  1813     0459                     l1895:
  1814                           
  1815                           ;./lora_driver.h: 64:             return 0;
  1816     0459  3000               	movlw	0
  1817     045A  2C67               	goto	l198
  1818     045B                     l1899:
  1819                           
  1820                           ;./lora_driver.h: 66:     }
  1821     045B  3001               	movlw	1
  1822     045C  00F8               	movwf	??_AT_command_check
  1823     045D  0878               	movf	??_AT_command_check,w
  1824     045E  07FB               	addwf	AT_command_check@i,f
  1825     045F                     l1901:
  1826     045F  0140               	movlb	0	; select bank0
  1827     0460  0824               	movf	AT_command_check@response_size,w
  1828     0461  027B               	subwf	AT_command_check@i,w
  1829     0462  1C03               	skipc
  1830     0463  2C65               	goto	u1521
  1831     0464  2C66               	goto	u1520
  1832     0465                     u1521:
  1833     0465  2C42               	goto	l1893
  1834     0466                     u1520:
  1835     0466                     l1903:
  1836                           
  1837                           ;./lora_driver.h: 67:     return 1;
  1838     0466  3001               	movlw	1
  1839     0467                     l198:
  1840     0467  0008               	return
  1841     0468                     __end_of_AT_command_check:
  1842                           
  1843                           	psect	text5
  1844     05A9                     __ptext5:	
  1845 ;; *************** function _EUSART_clear_buffer *****************
  1846 ;; Defined at:
  1847 ;;		line 69 in file "./eusart_driver.h"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  buffer          1    wreg     PTR unsigned char 
  1850 ;;		 -> RX_buffer(80), 
  1851 ;;  size            1    1[COMMON] unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  buffer          1    3[COMMON] PTR unsigned char 
  1854 ;;		 -> RX_buffer(80), 
  1855 ;;  i               1    4[COMMON] unsigned char 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1865 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1868 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1869 ;;Total ram usage:        4 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 1
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_AT_command_check
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880     05A9                     _EUSART_clear_buffer:	
  1881                           ;psect for function _EUSART_clear_buffer
  1882                           
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in _EUSART_clear_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1886                           ;EUSART_clear_buffer@buffer stored from wreg
  1887     05A9  00F3               	movwf	EUSART_clear_buffer@buffer
  1888     05AA                     l1851:
  1889                           
  1890                           ;./eusart_driver.h: 70:     for(uint8_t i=0; i<size; i++){
  1891     05AA  01F4               	clrf	EUSART_clear_buffer@i
  1892     05AB  2DB7               	goto	l1857
  1893     05AC                     l1853:
  1894                           
  1895                           ;./eusart_driver.h: 71:         buffer[i] = 0;
  1896     05AC  0874               	movf	EUSART_clear_buffer@i,w
  1897     05AD  0773               	addwf	EUSART_clear_buffer@buffer,w
  1898     05AE  00F2               	movwf	??_EUSART_clear_buffer
  1899     05AF  0872               	movf	??_EUSART_clear_buffer,w
  1900     05B0  0086               	movwf	6
  1901     05B1  0187               	clrf	7
  1902     05B2  0181               	clrf	1
  1903     05B3                     l1855:
  1904                           
  1905                           ;./eusart_driver.h: 72:     }
  1906     05B3  3001               	movlw	1
  1907     05B4  00F2               	movwf	??_EUSART_clear_buffer
  1908     05B5  0872               	movf	??_EUSART_clear_buffer,w
  1909     05B6  07F4               	addwf	EUSART_clear_buffer@i,f
  1910     05B7                     l1857:
  1911     05B7  0871               	movf	EUSART_clear_buffer@size,w
  1912     05B8  0274               	subwf	EUSART_clear_buffer@i,w
  1913     05B9  1C03               	skipc
  1914     05BA  2DBC               	goto	u1471
  1915     05BB  2DBD               	goto	u1470
  1916     05BC                     u1471:
  1917     05BC  2DAC               	goto	l1853
  1918     05BD                     u1470:
  1919     05BD                     l117:
  1920     05BD  0008               	return
  1921     05BE                     __end_of_EUSART_clear_buffer:
  1922                           
  1923                           	psect	text6
  1924     05BE                     __ptext6:	
  1925 ;; *************** function _AT_command *****************
  1926 ;; Defined at:
  1927 ;;		line 70 in file "./lora_driver.h"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  at_command      2    8[COMMON] PTR const unsigned char 
  1930 ;;		 -> STR_14(11), STR_13(12), STR_1(11), 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1945 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1946 ;;Total ram usage:        3 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 3
  1949 ;; This function calls:
  1950 ;;		_EUSART_print
  1951 ;;		_EUSART_write
  1952 ;; This function is called by:
  1953 ;;		_LoRa_setup
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958     05BE                     _AT_command:	
  1959                           ;psect for function _AT_command
  1960                           
  1961     05BE                     l1867:	
  1962                           ;incstack = 0
  1963                           ; Regs used in _AT_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1964                           
  1965                           
  1966                           ;./lora_driver.h: 71:     EUSART_print(at_command);
  1967     05BE  0879               	movf	AT_command@at_command+1,w
  1968     05BF  00F3               	movwf	EUSART_print@string+1
  1969     05C0  0878               	movf	AT_command@at_command,w
  1970     05C1  00F2               	movwf	EUSART_print@string
  1971     05C2  3185  253C  3185   	fcall	_EUSART_print
  1972     05C5                     l1869:
  1973                           
  1974                           ;./lora_driver.h: 72:     EUSART_write(0x0A);
  1975     05C5  300A               	movlw	10
  1976     05C6  3186  2638  3185   	fcall	_EUSART_write
  1977     05C9                     l1871:
  1978                           
  1979                           ;./lora_driver.h: 73:     _delay((unsigned long)((20)*(1000000/4000.0)));
  1980     05C9  3007               	movlw	7
  1981     05CA  00FA               	movwf	??_AT_command
  1982     05CB  307D               	movlw	125
  1983     05CC                     u1607:
  1984     05CC  0B89               	decfsz	9,f
  1985     05CD  2DCC               	goto	u1607
  1986     05CE  0BFA               	decfsz	??_AT_command,f
  1987     05CF  2DCC               	goto	u1607
  1988     05D0  0000               	nop
  1989     05D1                     l202:
  1990     05D1  0008               	return
  1991     05D2                     __end_of_AT_command:
  1992                           
  1993                           	psect	text7
  1994     04E9                     __ptext7:	
  1995 ;; *************** function _LoRa_send_data *****************
  1996 ;; Defined at:
  1997 ;;		line 24 in file "./lora_driver.h"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  temperature     2    0[BANK0 ] unsigned short 
  2000 ;;  humidity        2    2[BANK0 ] unsigned short 
  2001 ;;  battery         1    4[BANK0 ] unsigned char 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2013 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2017 ;;Total ram usage:        6 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 3
  2020 ;; This function calls:
  2021 ;;		_EUSART_print
  2022 ;;		_EUSART_print_hex
  2023 ;;		_EUSART_write
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029     04E9                     _LoRa_send_data:	
  2030                           ;psect for function _LoRa_send_data
  2031                           
  2032     04E9                     l1919:	
  2033                           ;incstack = 0
  2034                           ; Regs used in _LoRa_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2035                           
  2036                           
  2037                           ;./lora_driver.h: 25:     EUSART_print("AT+MSGHEX=");
  2038     04E9  3022               	movlw	low (STR_12| (0+32768))
  2039     04EA  00F2               	movwf	EUSART_print@string
  2040     04EB  3086               	movlw	high (STR_12| (0+32768))
  2041     04EC  00F3               	movwf	EUSART_print@string+1
  2042     04ED  3185  253C  3184   	fcall	_EUSART_print
  2043                           
  2044                           ;./lora_driver.h: 27:     EUSART_print_hex(temperature&0xFF);
  2045     04F0  0140               	movlb	0	; select bank0
  2046     04F1  0820               	movf	LoRa_send_data@temperature,w
  2047     04F2  3185  2562  3184   	fcall	_EUSART_print_hex
  2048                           
  2049                           ;./lora_driver.h: 28:     EUSART_print_hex((temperature >> 8)&0xFF);
  2050     04F5  0140               	movlb	0	; select bank0
  2051     04F6  0821               	movf	LoRa_send_data@temperature+1,w
  2052     04F7  3185  2562  3184   	fcall	_EUSART_print_hex
  2053                           
  2054                           ;./lora_driver.h: 30:     EUSART_print_hex(humidity&0xFF);
  2055     04FA  0140               	movlb	0	; select bank0
  2056     04FB  0822               	movf	LoRa_send_data@humidity,w
  2057     04FC  3185  2562  3184   	fcall	_EUSART_print_hex
  2058                           
  2059                           ;./lora_driver.h: 31:     EUSART_print_hex((humidity >> 8)&0xFF);
  2060     04FF  0140               	movlb	0	; select bank0
  2061     0500  0823               	movf	LoRa_send_data@humidity+1,w
  2062     0501  3185  2562  3184   	fcall	_EUSART_print_hex
  2063                           
  2064                           ;./lora_driver.h: 33:     EUSART_print_hex(battery);
  2065     0504  0140               	movlb	0	; select bank0
  2066     0505  0824               	movf	LoRa_send_data@battery,w
  2067     0506  3185  2562  3184   	fcall	_EUSART_print_hex
  2068     0509                     l1921:
  2069                           
  2070                           ;./lora_driver.h: 35:     EUSART_write(0x0A);
  2071     0509  300A               	movlw	10
  2072     050A  3186  2638  3184   	fcall	_EUSART_write
  2073     050D                     l1923:
  2074                           
  2075                           ;./lora_driver.h: 36:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2076     050D  3007               	movlw	7
  2077     050E  00F8               	movwf	??_LoRa_send_data
  2078     050F  307D               	movlw	125
  2079     0510                     u1617:
  2080     0510  0B89               	decfsz	9,f
  2081     0511  2D10               	goto	u1617
  2082     0512  0BF8               	decfsz	??_LoRa_send_data,f
  2083     0513  2D10               	goto	u1617
  2084     0514  0000               	nop
  2085     0515                     l186:
  2086     0515  0008               	return
  2087     0516                     __end_of_LoRa_send_data:
  2088                           
  2089                           	psect	text8
  2090     0562                     __ptext8:	
  2091 ;; *************** function _EUSART_print_hex *****************
  2092 ;; Defined at:
  2093 ;;		line 61 in file "./eusart_driver.h"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  number          1    wreg     unsigned char 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  number          1    3[COMMON] unsigned char 
  2098 ;;  a               1    4[COMMON] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2112 ;;Total ram usage:        3 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; Hardware stack levels required when called: 2
  2115 ;; This function calls:
  2116 ;;		_EUSART_write
  2117 ;; This function is called by:
  2118 ;;		_LoRa_send_data
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122     0562                     _EUSART_print_hex:	
  2123                           ;psect for function _EUSART_print_hex
  2124                           
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in _EUSART_print_hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2128                           ;EUSART_print_hex@number stored from wreg
  2129     0562  00F3               	movwf	EUSART_print_hex@number
  2130     0563                     l1859:
  2131                           
  2132                           ;./eusart_driver.h: 62:     const char ref[] = {'0','1','2','3','4','5','6','7','8','9',
      +                          'A','B','C','D','E','F'};;./eusart_driver.h: 63:     uint8_t a = (number >> 4)&0b0000111
      +                          1;
  2133     0563  0873               	movf	EUSART_print_hex@number,w
  2134     0564  00F2               	movwf	??_EUSART_print_hex
  2135     0565  3004               	movlw	4
  2136     0566                     u1485:
  2137     0566  36F2               	lsrf	??_EUSART_print_hex,f
  2138     0567  0B89               	decfsz	9,f
  2139     0568  2D66               	goto	u1485
  2140     0569  0872               	movf	??_EUSART_print_hex,w
  2141     056A  390F               	andlw	15
  2142     056B  00F4               	movwf	EUSART_print_hex@a
  2143     056C                     l1861:
  2144                           
  2145                           ;./eusart_driver.h: 64:     EUSART_write(ref[a]);
  2146     056C  0874               	movf	EUSART_print_hex@a,w
  2147     056D  3E16               	addlw	low (EUSART_print_hex@ref| (0+32768))
  2148     056E  0084               	movwf	4
  2149     056F  3085               	movlw	high (EUSART_print_hex@ref| (0+32768))
  2150     0570  1803               	skipnc
  2151     0571  3E01               	addlw	1
  2152     0572  0085               	movwf	5
  2153     0573  0800               	movf	0,w	;code access
  2154     0574  3186  2638  3185   	fcall	_EUSART_write
  2155     0577                     l1863:
  2156                           
  2157                           ;./eusart_driver.h: 65:     a = number & 0b00001111;
  2158     0577  0873               	movf	EUSART_print_hex@number,w
  2159     0578  390F               	andlw	15
  2160     0579  00F4               	movwf	EUSART_print_hex@a
  2161     057A                     l1865:
  2162                           
  2163                           ;./eusart_driver.h: 66:     EUSART_write(ref[a]);
  2164     057A  0874               	movf	EUSART_print_hex@a,w
  2165     057B  3E16               	addlw	low (EUSART_print_hex@ref| (0+32768))
  2166     057C  0084               	movwf	4
  2167     057D  3085               	movlw	high (EUSART_print_hex@ref| (0+32768))
  2168     057E  1803               	skipnc
  2169     057F  3E01               	addlw	1
  2170     0580  0085               	movwf	5
  2171     0581  0800               	movf	0,w	;code access
  2172     0582  3186  2638  3185   	fcall	_EUSART_write
  2173     0585                     l111:
  2174     0585  0008               	return
  2175     0586                     __end_of_EUSART_print_hex:
  2176                           
  2177                           	psect	text9
  2178     053C                     __ptext9:	
  2179 ;; *************** function _EUSART_print *****************
  2180 ;; Defined at:
  2181 ;;		line 44 in file "./eusart_driver.h"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  string          2    2[COMMON] PTR const unsigned char 
  2184 ;;		 -> STR_17(8), STR_14(11), STR_13(12), STR_12(11), 
  2185 ;;		 -> STR_11(12), STR_9(8), STR_6(11), STR_4(3), 
  2186 ;;		 -> STR_1(11), 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  c               1    7[COMMON] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;Total ram usage:        6 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 2
  2205 ;; This function calls:
  2206 ;;		_EUSART_write
  2207 ;; This function is called by:
  2208 ;;		_LoRa_setup
  2209 ;;		_LoRa_send_data
  2210 ;;		_AT_command_check
  2211 ;;		_AT_command
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215     053C                     _EUSART_print:	
  2216                           ;psect for function _EUSART_print
  2217                           
  2218     053C                     l1843:	
  2219                           ;incstack = 0
  2220                           ; Regs used in _EUSART_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2221                           
  2222                           
  2223                           ;./eusart_driver.h: 45:     uint8_t c=0;
  2224     053C  01F7               	clrf	EUSART_print@c
  2225                           
  2226                           ;./eusart_driver.h: 46:     while(string[c]!=0){
  2227     053D  2D51               	goto	l1849
  2228     053E                     l1845:
  2229                           
  2230                           ;./eusart_driver.h: 47:         EUSART_write(string[c]);
  2231     053E  0873               	movf	EUSART_print@string+1,w
  2232     053F  00F5               	movwf	??_EUSART_print+1
  2233     0540  0872               	movf	EUSART_print@string,w
  2234     0541  00F4               	movwf	??_EUSART_print
  2235     0542  0877               	movf	EUSART_print@c,w
  2236     0543  0774               	addwf	??_EUSART_print,w
  2237     0544  0084               	movwf	4
  2238     0545  0875               	movf	??_EUSART_print+1,w
  2239     0546  1803               	skipnc
  2240     0547  0A75               	incf	??_EUSART_print+1,w
  2241     0548  0085               	movwf	5
  2242     0549  0800               	movf	0,w	;code access
  2243     054A  3186  2638  3185   	fcall	_EUSART_write
  2244     054D                     l1847:
  2245                           
  2246                           ;./eusart_driver.h: 48:         c++;
  2247     054D  3001               	movlw	1
  2248     054E  00F4               	movwf	??_EUSART_print
  2249     054F  0874               	movf	??_EUSART_print,w
  2250     0550  07F7               	addwf	EUSART_print@c,f
  2251     0551                     l1849:
  2252                           
  2253                           ;./eusart_driver.h: 46:     while(string[c]!=0){
  2254     0551  0873               	movf	EUSART_print@string+1,w
  2255     0552  00F5               	movwf	??_EUSART_print+1
  2256     0553  0872               	movf	EUSART_print@string,w
  2257     0554  00F4               	movwf	??_EUSART_print
  2258     0555  0877               	movf	EUSART_print@c,w
  2259     0556  0774               	addwf	??_EUSART_print,w
  2260     0557  0084               	movwf	4
  2261     0558  0875               	movf	??_EUSART_print+1,w
  2262     0559  1803               	skipnc
  2263     055A  0A75               	incf	??_EUSART_print+1,w
  2264     055B  0085               	movwf	5
  2265     055C  0012               	moviw fsr0++
  2266     055D  1D03               	btfss	3,2
  2267     055E  2D60               	goto	u1461
  2268     055F  2D61               	goto	u1460
  2269     0560                     u1461:
  2270     0560  2D3E               	goto	l1845
  2271     0561                     u1460:
  2272     0561                     l103:
  2273     0561  0008               	return
  2274     0562                     __end_of_EUSART_print:
  2275                           
  2276                           	psect	text10
  2277     0638                     __ptext10:	
  2278 ;; *************** function _EUSART_write *****************
  2279 ;; Defined at:
  2280 ;;		line 34 in file "./eusart_driver.h"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  txData          1    wreg     unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  txData          1    1[COMMON] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2298 ;;Total ram usage:        1 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_EUSART_print
  2305 ;;		_EUSART_print_hex
  2306 ;;		_LoRa_send_data
  2307 ;;		_AT_command_check
  2308 ;;		_AT_command
  2309 ;;		_EUSART_print_dec
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313     0638                     _EUSART_write:	
  2314                           ;psect for function _EUSART_write
  2315                           
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _EUSART_write: [wreg]
  2319                           ;EUSART_write@txData stored from wreg
  2320     0638  00F1               	movwf	EUSART_write@txData
  2321     0639                     l1839:
  2322     0639                     l88:	
  2323                           ;./eusart_driver.h: 35:     while(PIR3bits.TX2IF == 0){}
  2324                           
  2325     0639  0141               	movlb	1	; select bank1
  2326     063A  1E0F               	btfss	15,4	;volatile
  2327     063B  2E3D               	goto	u1451
  2328     063C  2E3E               	goto	u1450
  2329     063D                     u1451:
  2330     063D  2E39               	goto	l88
  2331     063E                     u1450:
  2332     063E                     l1841:
  2333                           
  2334                           ;./eusart_driver.h: 36:     TX2REG = txData;
  2335     063E  0871               	movf	EUSART_write@txData,w
  2336     063F  014C               	movlb	12	; select bank12
  2337     0640  0097               	movwf	23	;volatile
  2338     0641                     l91:
  2339     0641  0008               	return
  2340     0642                     __end_of_EUSART_write:
  2341                           
  2342                           	psect	text11
  2343     05D2                     __ptext11:	
  2344 ;; *************** function _EUSART_setup *****************
  2345 ;; Defined at:
  2346 ;;		line 8 in file "./eusart_driver.h"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374     05D2                     _EUSART_setup:	
  2375                           ;psect for function _EUSART_setup
  2376                           
  2377     05D2                     l1699:	
  2378                           ;incstack = 0
  2379                           ; Regs used in _EUSART_setup: [wreg+status,2]
  2380                           
  2381                           
  2382                           ;./eusart_driver.h: 10:     BAUD2CONbits.BRG16 = 1;
  2383     05D2  014C               	movlb	12	; select bank12
  2384     05D3  159C               	bsf	28,3	;volatile
  2385                           
  2386                           ;./eusart_driver.h: 12:     TX2STAbits.SYNC = 0;
  2387     05D4  121B               	bcf	27,4	;volatile
  2388                           
  2389                           ;./eusart_driver.h: 14:     TX2STAbits.TXEN = 1;
  2390     05D5  169B               	bsf	27,5	;volatile
  2391                           
  2392                           ;./eusart_driver.h: 16:     TX2STAbits.BRGH = 1;
  2393     05D6  151B               	bsf	27,2	;volatile
  2394                           
  2395                           ;./eusart_driver.h: 18:     RC2STAbits.CREN = 1;
  2396     05D7  161A               	bsf	26,4	;volatile
  2397                           
  2398                           ;./eusart_driver.h: 20:     RC2STAbits.SPEN = 1;
  2399     05D8  179A               	bsf	26,7	;volatile
  2400     05D9                     l1701:
  2401                           
  2402                           ;./eusart_driver.h: 22:     SP2BRGL = 25;
  2403     05D9  3019               	movlw	25
  2404     05DA  0098               	movwf	24	;volatile
  2405     05DB                     l1703:
  2406                           
  2407                           ;./eusart_driver.h: 23:     SP2BRGH = 0;
  2408     05DB  0199               	clrf	25	;volatile
  2409     05DC                     l1705:
  2410                           
  2411                           ;./eusart_driver.h: 25:     RA5PPS = 0x11;
  2412     05DC  3011               	movlw	17
  2413     05DD  017B               	movlb	59	; select bank59
  2414     05DE  0091               	movwf	17	;volatile
  2415     05DF                     l1707:
  2416                           
  2417                           ;./eusart_driver.h: 27:     RX2PPS = 0x4;
  2418     05DF  3004               	movlw	4
  2419     05E0  017C               	movlb	60	; select bank60
  2420     05E1  00C3               	movwf	67	;volatile
  2421     05E2                     l1709:
  2422                           
  2423                           ;./eusart_driver.h: 29:     TRISAbits.TRISA5 = 0;
  2424     05E2  0140               	movlb	0	; select bank0
  2425     05E3  1292               	bcf	18,5	;volatile
  2426     05E4                     l1711:
  2427                           
  2428                           ;./eusart_driver.h: 31:     TRISAbits.TRISA4 = 1;
  2429     05E4  1612               	bsf	18,4	;volatile
  2430     05E5                     l85:
  2431     05E5  0008               	return
  2432     05E6                     __end_of_EUSART_setup:
  2433                           
  2434                           	psect	text12
  2435     05E6                     __ptext12:	
  2436 ;; *************** function _Analog_setup *****************
  2437 ;; Defined at:
  2438 ;;		line 7 in file "./analog_driver.h"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 1
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466     05E6                     _Analog_setup:	
  2467                           ;psect for function _Analog_setup
  2468                           
  2469     05E6                     l1713:	
  2470                           ;incstack = 0
  2471                           ; Regs used in _Analog_setup: [wreg+status,2+status,0]
  2472                           
  2473                           
  2474                           ;./analog_driver.h: 9:     TRISA |= (1<<0);
  2475     05E6  0140               	movlb	0	; select bank0
  2476     05E7  1412               	bsf	18,0	;volatile
  2477                           
  2478                           ;./analog_driver.h: 10:     ANSELA |= (1<<0);
  2479     05E8  017D               	movlb	61	; select bank61
  2480     05E9  140C               	bsf	12,0	;volatile
  2481     05EA                     l1715:
  2482                           
  2483                           ;./analog_driver.h: 11:     ADPCH = 0 & 0b00111111;
  2484     05EA  017A               	movlb	58	; select bank58
  2485     05EB  019F               	clrf	31	;volatile
  2486                           
  2487                           ;./analog_driver.h: 12:     ADREF = 0x0;
  2488     05EC  01AB               	clrf	43	;volatile
  2489     05ED                     l1717:
  2490                           
  2491                           ;./analog_driver.h: 13:     ADCON0bits.CS = 1;
  2492     05ED  1626               	bsf	38,4	;volatile
  2493     05EE                     l1719:
  2494                           
  2495                           ;./analog_driver.h: 14:     ADCON0bits.FM = 1;
  2496     05EE  0826               	movf	38,w	;volatile
  2497     05EF  39F3               	andlw	-13
  2498     05F0  3804               	iorlw	4
  2499     05F1  00A6               	movwf	38	;volatile
  2500     05F2                     l164:
  2501     05F2  0008               	return
  2502     05F3                     __end_of_Analog_setup:
  2503                           
  2504                           	psect	text13
  2505     04B2                     __ptext13:	
  2506 ;; *************** function _Analog_read_percent *****************
  2507 ;; Defined at:
  2508 ;;		line 31 in file "./analog_driver.h"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  a               2   40[BANK0 ] unsigned short 
  2513 ;;  r               1   42[BANK0 ] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      unsigned char 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2524 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2526 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2527 ;;Total ram usage:        3 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 3
  2530 ;; This function calls:
  2531 ;;		_Analog_read_raw
  2532 ;;		___flmul
  2533 ;;		___fltol
  2534 ;;		___xxtofl
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540     04B2                     _Analog_read_percent:	
  2541                           ;psect for function _Analog_read_percent
  2542                           
  2543     04B2                     l1721:	
  2544                           ;incstack = 0
  2545                           ; Regs used in _Analog_read_percent: [wreg+status,2+status,0+pclath+cstack]
  2546                           
  2547                           
  2548                           ;./analog_driver.h: 32:     uint16_t a = Analog_read_raw();
  2549     04B2  3186  260B  3184   	fcall	_Analog_read_raw
  2550     04B5  0872               	movf	?_Analog_read_raw+1,w
  2551     04B6  0140               	movlb	0	; select bank0
  2552     04B7  00C9               	movwf	Analog_read_percent@a+1
  2553     04B8  0871               	movf	?_Analog_read_raw,w
  2554     04B9  00C8               	movwf	Analog_read_percent@a
  2555     04BA                     l1723:
  2556                           
  2557                           ;./analog_driver.h: 33:     uint8_t r = a*(100.0/1023.0);
  2558     04BA  0848               	movf	Analog_read_percent@a,w
  2559     04BB  00F1               	movwf	___xxtofl@val
  2560     04BC  0849               	movf	Analog_read_percent@a+1,w
  2561     04BD  00F2               	movwf	___xxtofl@val+1
  2562     04BE  01F3               	clrf	___xxtofl@val+2
  2563     04BF  01F4               	clrf	___xxtofl@val+3
  2564     04C0  3000               	movlw	0
  2565     04C1  3182  2275  3184   	fcall	___xxtofl
  2566     04C4  0874               	movf	?___xxtofl+3,w
  2567     04C5  0140               	movlb	0	; select bank0
  2568     04C6  00AD               	movwf	___flmul@a+3
  2569     04C7  0873               	movf	?___xxtofl+2,w
  2570     04C8  00AC               	movwf	___flmul@a+2
  2571     04C9  0872               	movf	?___xxtofl+1,w
  2572     04CA  00AB               	movwf	___flmul@a+1
  2573     04CB  0871               	movf	?___xxtofl,w
  2574     04CC  00AA               	movwf	___flmul@a
  2575     04CD  303D               	movlw	61
  2576     04CE  00A9               	movwf	___flmul@b+3
  2577     04CF  30C8               	movlw	200
  2578     04D0  00A8               	movwf	___flmul@b+2
  2579     04D1  3032               	movlw	50
  2580     04D2  00A7               	movwf	___flmul@b+1
  2581     04D3  300D               	movlw	13
  2582     04D4  00A6               	movwf	___flmul@b
  2583     04D5  3180  203A  3184   	fcall	___flmul
  2584     04D8  0140               	movlb	0	; select bank0
  2585     04D9  0829               	movf	?___flmul+3,w
  2586     04DA  00C3               	movwf	___fltol@f1+3
  2587     04DB  0828               	movf	?___flmul+2,w
  2588     04DC  00C2               	movwf	___fltol@f1+2
  2589     04DD  0827               	movf	?___flmul+1,w
  2590     04DE  00C1               	movwf	___fltol@f1+1
  2591     04DF  0826               	movf	?___flmul,w
  2592     04E0  00C0               	movwf	___fltol@f1
  2593     04E1  3183  2396  3184   	fcall	___fltol
  2594     04E4  0140               	movlb	0	; select bank0
  2595     04E5  0840               	movf	?___fltol,w
  2596     04E6  00CA               	movwf	Analog_read_percent@r
  2597     04E7                     l1725:
  2598                           
  2599                           ;./analog_driver.h: 34:     return r;
  2600     04E7  084A               	movf	Analog_read_percent@r,w
  2601     04E8                     l176:
  2602     04E8  0008               	return
  2603     04E9                     __end_of_Analog_read_percent:
  2604                           
  2605                           	psect	text14
  2606     0275                     __ptext14:	
  2607 ;; *************** function ___xxtofl *****************
  2608 ;; Defined at:
  2609 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  sign            1    wreg     unsigned char 
  2612 ;;  val             4    1[COMMON] long 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  sign            1    0[BANK0 ] unsigned char 
  2615 ;;  arg             4    2[BANK0 ] unsigned long 
  2616 ;;  exp             1    1[BANK0 ] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  4    1[COMMON] unsigned char 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2627 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;Total ram usage:       14 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_Analog_read_percent
  2637 ;;		_I2C_SHT4x_read
  2638 ;;		_Analog_read_voltage
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642     0275                     ___xxtofl:	
  2643                           ;psect for function ___xxtofl
  2644                           
  2645                           
  2646                           ;incstack = 0
  2647                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2648                           ;___xxtofl@sign stored from wreg
  2649     0275  0140               	movlb	0	; select bank0
  2650     0276  00A0               	movwf	___xxtofl@sign
  2651     0277                     l1651:
  2652     0277  0820               	movf	___xxtofl@sign,w
  2653     0278  1903               	btfsc	3,2
  2654     0279  2A7B               	goto	u1231
  2655     027A  2A7C               	goto	u1230
  2656     027B                     u1231:
  2657     027B  2A90               	goto	l1657
  2658     027C                     u1230:
  2659     027C                     l1653:
  2660     027C  1FF4               	btfss	___xxtofl@val+3,7
  2661     027D  2A7F               	goto	u1241
  2662     027E  2A80               	goto	u1240
  2663     027F                     u1241:
  2664     027F  2A90               	goto	l1657
  2665     0280                     u1240:
  2666     0280                     l1655:
  2667     0280  0971               	comf	___xxtofl@val,w
  2668     0281  00A2               	movwf	___xxtofl@arg
  2669     0282  0972               	comf	___xxtofl@val+1,w
  2670     0283  00A3               	movwf	___xxtofl@arg+1
  2671     0284  0973               	comf	___xxtofl@val+2,w
  2672     0285  00A4               	movwf	___xxtofl@arg+2
  2673     0286  0974               	comf	___xxtofl@val+3,w
  2674     0287  00A5               	movwf	___xxtofl@arg+3
  2675     0288  0AA2               	incf	___xxtofl@arg,f
  2676     0289  1903               	skipnz
  2677     028A  0AA3               	incf	___xxtofl@arg+1,f
  2678     028B  1903               	skipnz
  2679     028C  0AA4               	incf	___xxtofl@arg+2,f
  2680     028D  1903               	skipnz
  2681     028E  0AA5               	incf	___xxtofl@arg+3,f
  2682     028F  2A98               	goto	l814
  2683     0290                     l1657:
  2684     0290  0874               	movf	___xxtofl@val+3,w
  2685     0291  00A5               	movwf	___xxtofl@arg+3
  2686     0292  0873               	movf	___xxtofl@val+2,w
  2687     0293  00A4               	movwf	___xxtofl@arg+2
  2688     0294  0872               	movf	___xxtofl@val+1,w
  2689     0295  00A3               	movwf	___xxtofl@arg+1
  2690     0296  0871               	movf	___xxtofl@val,w
  2691     0297  00A2               	movwf	___xxtofl@arg
  2692     0298                     l814:
  2693     0298  0874               	movf	___xxtofl@val+3,w
  2694     0299  0473               	iorwf	___xxtofl@val+2,w
  2695     029A  0472               	iorwf	___xxtofl@val+1,w
  2696     029B  0471               	iorwf	___xxtofl@val,w
  2697     029C  1D03               	skipz
  2698     029D  2A9F               	goto	u1251
  2699     029E  2AA0               	goto	u1250
  2700     029F                     u1251:
  2701     029F  2AA9               	goto	l1663
  2702     02A0                     u1250:
  2703     02A0                     l1659:
  2704     02A0  3000               	movlw	0
  2705     02A1  00F4               	movwf	?___xxtofl+3
  2706     02A2  3000               	movlw	0
  2707     02A3  00F3               	movwf	?___xxtofl+2
  2708     02A4  3000               	movlw	0
  2709     02A5  00F2               	movwf	?___xxtofl+1
  2710     02A6  3000               	movlw	0
  2711     02A7  00F1               	movwf	?___xxtofl
  2712     02A8  2B1F               	goto	l816
  2713     02A9                     l1663:
  2714     02A9  3096               	movlw	150
  2715     02AA  00A1               	movwf	___xxtofl@exp
  2716     02AB  2AB7               	goto	l1667
  2717     02AC                     l1665:
  2718     02AC  3001               	movlw	1
  2719     02AD  00F5               	movwf	??___xxtofl
  2720     02AE  0875               	movf	??___xxtofl,w
  2721     02AF  07A1               	addwf	___xxtofl@exp,f
  2722     02B0  3001               	movlw	1
  2723     02B1                     u1265:
  2724     02B1  36A5               	lsrf	___xxtofl@arg+3,f
  2725     02B2  0CA4               	rrf	___xxtofl@arg+2,f
  2726     02B3  0CA3               	rrf	___xxtofl@arg+1,f
  2727     02B4  0CA2               	rrf	___xxtofl@arg,f
  2728     02B5  0B89               	decfsz	9,f
  2729     02B6  2AB1               	goto	u1265
  2730     02B7                     l1667:
  2731     02B7  30FE               	movlw	254
  2732     02B8  0525               	andwf	___xxtofl@arg+3,w
  2733     02B9  1D03               	btfss	3,2
  2734     02BA  2ABC               	goto	u1271
  2735     02BB  2ABD               	goto	u1270
  2736     02BC                     u1271:
  2737     02BC  2AAC               	goto	l1665
  2738     02BD                     u1270:
  2739     02BD  2AD1               	goto	l820
  2740     02BE                     l1669:
  2741     02BE  3001               	movlw	1
  2742     02BF  00F5               	movwf	??___xxtofl
  2743     02C0  0875               	movf	??___xxtofl,w
  2744     02C1  07A1               	addwf	___xxtofl@exp,f
  2745     02C2                     l1671:
  2746     02C2  3001               	movlw	1
  2747     02C3  07A2               	addwf	___xxtofl@arg,f
  2748     02C4  3000               	movlw	0
  2749     02C5  3DA3               	addwfc	___xxtofl@arg+1,f
  2750     02C6  3000               	movlw	0
  2751     02C7  3DA4               	addwfc	___xxtofl@arg+2,f
  2752     02C8  3000               	movlw	0
  2753     02C9  3DA5               	addwfc	___xxtofl@arg+3,f
  2754     02CA                     l1673:
  2755     02CA  3001               	movlw	1
  2756     02CB                     u1285:
  2757     02CB  36A5               	lsrf	___xxtofl@arg+3,f
  2758     02CC  0CA4               	rrf	___xxtofl@arg+2,f
  2759     02CD  0CA3               	rrf	___xxtofl@arg+1,f
  2760     02CE  0CA2               	rrf	___xxtofl@arg,f
  2761     02CF  0B89               	decfsz	9,f
  2762     02D0  2ACB               	goto	u1285
  2763     02D1                     l820:
  2764     02D1  30FF               	movlw	255
  2765     02D2  0525               	andwf	___xxtofl@arg+3,w
  2766     02D3  1D03               	btfss	3,2
  2767     02D4  2AD6               	goto	u1291
  2768     02D5  2AD7               	goto	u1290
  2769     02D6                     u1291:
  2770     02D6  2ABE               	goto	l1669
  2771     02D7                     u1290:
  2772     02D7  2AE1               	goto	l1677
  2773     02D8                     l1675:
  2774     02D8  3001               	movlw	1
  2775     02D9  02A1               	subwf	___xxtofl@exp,f
  2776     02DA  3001               	movlw	1
  2777     02DB                     u1305:
  2778     02DB  35A2               	lslf	___xxtofl@arg,f
  2779     02DC  0DA3               	rlf	___xxtofl@arg+1,f
  2780     02DD  0DA4               	rlf	___xxtofl@arg+2,f
  2781     02DE  0DA5               	rlf	___xxtofl@arg+3,f
  2782     02DF  0B89               	decfsz	9,f
  2783     02E0  2ADB               	goto	u1305
  2784     02E1                     l1677:
  2785     02E1  1BA4               	btfsc	___xxtofl@arg+2,7
  2786     02E2  2AE4               	goto	u1311
  2787     02E3  2AE5               	goto	u1310
  2788     02E4                     u1311:
  2789     02E4  2AEB               	goto	l827
  2790     02E5                     u1310:
  2791     02E5                     l1679:
  2792     02E5  3002               	movlw	2
  2793     02E6  0221               	subwf	___xxtofl@exp,w
  2794     02E7  1803               	skipnc
  2795     02E8  2AEA               	goto	u1321
  2796     02E9  2AEB               	goto	u1320
  2797     02EA                     u1321:
  2798     02EA  2AD8               	goto	l1675
  2799     02EB                     u1320:
  2800     02EB                     l827:
  2801     02EB  1821               	btfsc	___xxtofl@exp,0
  2802     02EC  2AEE               	goto	u1331
  2803     02ED  2AEF               	goto	u1330
  2804     02EE                     u1331:
  2805     02EE  2AF7               	goto	l828
  2806     02EF                     u1330:
  2807     02EF                     l1681:
  2808     02EF  30FF               	movlw	255
  2809     02F0  05A2               	andwf	___xxtofl@arg,f
  2810     02F1  30FF               	movlw	255
  2811     02F2  05A3               	andwf	___xxtofl@arg+1,f
  2812     02F3  307F               	movlw	127
  2813     02F4  05A4               	andwf	___xxtofl@arg+2,f
  2814     02F5  30FF               	movlw	255
  2815     02F6  05A5               	andwf	___xxtofl@arg+3,f
  2816     02F7                     l828:
  2817     02F7  1003               	clrc
  2818     02F8  0CA1               	rrf	___xxtofl@exp,f
  2819     02F9                     l1683:
  2820     02F9  0821               	movf	___xxtofl@exp,w
  2821     02FA  00F5               	movwf	??___xxtofl
  2822     02FB  01F6               	clrf	??___xxtofl+1
  2823     02FC  01F7               	clrf	??___xxtofl+2
  2824     02FD  01F8               	clrf	??___xxtofl+3
  2825     02FE  3018               	movlw	24
  2826     02FF                     u1345:
  2827     02FF  35F5               	lslf	??___xxtofl,f
  2828     0300  0DF6               	rlf	??___xxtofl+1,f
  2829     0301  0DF7               	rlf	??___xxtofl+2,f
  2830     0302  0DF8               	rlf	??___xxtofl+3,f
  2831     0303                     u1340:
  2832     0303  0B89               	decfsz	9,f
  2833     0304  2AFF               	goto	u1345
  2834     0305  0875               	movf	??___xxtofl,w
  2835     0306  04A2               	iorwf	___xxtofl@arg,f
  2836     0307  0876               	movf	??___xxtofl+1,w
  2837     0308  04A3               	iorwf	___xxtofl@arg+1,f
  2838     0309  0877               	movf	??___xxtofl+2,w
  2839     030A  04A4               	iorwf	___xxtofl@arg+2,f
  2840     030B  0878               	movf	??___xxtofl+3,w
  2841     030C  04A5               	iorwf	___xxtofl@arg+3,f
  2842     030D                     l1685:
  2843     030D  0820               	movf	___xxtofl@sign,w
  2844     030E  1903               	btfsc	3,2
  2845     030F  2B11               	goto	u1351
  2846     0310  2B12               	goto	u1350
  2847     0311                     u1351:
  2848     0311  2B17               	goto	l1691
  2849     0312                     u1350:
  2850     0312                     l1687:
  2851     0312  1FF4               	btfss	___xxtofl@val+3,7
  2852     0313  2B15               	goto	u1361
  2853     0314  2B16               	goto	u1360
  2854     0315                     u1361:
  2855     0315  2B17               	goto	l1691
  2856     0316                     u1360:
  2857     0316                     l1689:
  2858     0316  17A5               	bsf	___xxtofl@arg+3,7
  2859     0317                     l1691:
  2860     0317  0825               	movf	___xxtofl@arg+3,w
  2861     0318  00F4               	movwf	?___xxtofl+3
  2862     0319  0824               	movf	___xxtofl@arg+2,w
  2863     031A  00F3               	movwf	?___xxtofl+2
  2864     031B  0823               	movf	___xxtofl@arg+1,w
  2865     031C  00F2               	movwf	?___xxtofl+1
  2866     031D  0822               	movf	___xxtofl@arg,w
  2867     031E  00F1               	movwf	?___xxtofl
  2868     031F                     l816:
  2869     031F  0008               	return
  2870     0320                     __end_of___xxtofl:
  2871                           
  2872                           	psect	text15
  2873     0396                     __ptext15:	
  2874 ;; *************** function ___fltol *****************
  2875 ;; Defined at:
  2876 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  f1              4   32[BANK0 ] unsigned char 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  exp1            1   11[COMMON] unsigned char 
  2881 ;;  sign1           1   10[COMMON] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  4   32[BANK0 ] long 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2892 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2893 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2894 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2895 ;;Total ram usage:       10 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; Hardware stack levels required when called: 1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_Analog_read_percent
  2902 ;;		_Analog_read_voltage
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906     0396                     ___fltol:	
  2907                           ;psect for function ___fltol
  2908                           
  2909     0396                     l1475:	
  2910                           ;incstack = 0
  2911                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2912                           
  2913     0396  1003               	clrc
  2914     0397  0140               	movlb	0	; select bank0
  2915     0398  0D42               	rlf	___fltol@f1+2,w
  2916     0399  0D43               	rlf	___fltol@f1+3,w
  2917     039A  00FB               	movwf	___fltol@exp1
  2918     039B  087B               	movf	___fltol@exp1,w
  2919     039C  1D03               	btfss	3,2
  2920     039D  2B9F               	goto	u871
  2921     039E  2BA0               	goto	u870
  2922     039F                     u871:
  2923     039F  2BA9               	goto	l1481
  2924     03A0                     u870:
  2925     03A0                     l1477:
  2926     03A0  3000               	movlw	0
  2927     03A1  00C3               	movwf	?___fltol+3
  2928     03A2  3000               	movlw	0
  2929     03A3  00C2               	movwf	?___fltol+2
  2930     03A4  3000               	movlw	0
  2931     03A5  00C1               	movwf	?___fltol+1
  2932     03A6  3000               	movlw	0
  2933     03A7  00C0               	movwf	?___fltol
  2934     03A8  2C06               	goto	l567
  2935     03A9                     l1481:
  2936     03A9  0840               	movf	___fltol@f1,w
  2937     03AA  00C4               	movwf	??___fltol
  2938     03AB  0841               	movf	___fltol@f1+1,w
  2939     03AC  00C5               	movwf	??___fltol+1
  2940     03AD  0842               	movf	___fltol@f1+2,w
  2941     03AE  00C6               	movwf	??___fltol+2
  2942     03AF  0843               	movf	___fltol@f1+3,w
  2943     03B0  00C7               	movwf	??___fltol+3
  2944     03B1  301F               	movlw	31
  2945     03B2                     u885:
  2946     03B2  36C7               	lsrf	??___fltol+3,f
  2947     03B3  0CC6               	rrf	??___fltol+2,f
  2948     03B4  0CC5               	rrf	??___fltol+1,f
  2949     03B5  0CC4               	rrf	??___fltol,f
  2950     03B6                     u880:
  2951     03B6  0B89               	decfsz	9,f
  2952     03B7  2BB2               	goto	u885
  2953     03B8  0844               	movf	??___fltol,w
  2954     03B9  00FA               	movwf	___fltol@sign1
  2955     03BA                     l1483:
  2956     03BA  17C2               	bsf	___fltol@f1+2,7
  2957     03BB                     l1485:
  2958     03BB  30FF               	movlw	255
  2959     03BC  05C0               	andwf	___fltol@f1,f
  2960     03BD  30FF               	movlw	255
  2961     03BE  05C1               	andwf	___fltol@f1+1,f
  2962     03BF  30FF               	movlw	255
  2963     03C0  05C2               	andwf	___fltol@f1+2,f
  2964     03C1  3000               	movlw	0
  2965     03C2  05C3               	andwf	___fltol@f1+3,f
  2966     03C3                     l1487:
  2967     03C3  3096               	movlw	150
  2968     03C4  02FB               	subwf	___fltol@exp1,f
  2969     03C5                     l1489:
  2970     03C5  1FFB               	btfss	___fltol@exp1,7
  2971     03C6  2BC8               	goto	u891
  2972     03C7  2BC9               	goto	u890
  2973     03C8                     u891:
  2974     03C8  2BE1               	goto	l1499
  2975     03C9                     u890:
  2976     03C9                     l1491:
  2977     03C9  087B               	movf	___fltol@exp1,w
  2978     03CA  3A80               	xorlw	128
  2979     03CB  3E97               	addlw	151
  2980     03CC  1803               	skipnc
  2981     03CD  2BCF               	goto	u901
  2982     03CE  2BD0               	goto	u900
  2983     03CF                     u901:
  2984     03CF  2BD1               	goto	l1497
  2985     03D0                     u900:
  2986     03D0  2BA0               	goto	l1477
  2987     03D1                     l1497:
  2988     03D1  3001               	movlw	1
  2989     03D2                     u915:
  2990     03D2  36C3               	lsrf	___fltol@f1+3,f
  2991     03D3  0CC2               	rrf	___fltol@f1+2,f
  2992     03D4  0CC1               	rrf	___fltol@f1+1,f
  2993     03D5  0CC0               	rrf	___fltol@f1,f
  2994     03D6  0B89               	decfsz	9,f
  2995     03D7  2BD2               	goto	u915
  2996     03D8  3001               	movlw	1
  2997     03D9  00C4               	movwf	??___fltol
  2998     03DA  0844               	movf	??___fltol,w
  2999     03DB  07FB               	addwf	___fltol@exp1,f
  3000     03DC  1D03               	btfss	3,2
  3001     03DD  2BDF               	goto	u921
  3002     03DE  2BE0               	goto	u920
  3003     03DF                     u921:
  3004     03DF  2BD1               	goto	l1497
  3005     03E0                     u920:
  3006     03E0  2BF6               	goto	l1507
  3007     03E1                     l1499:
  3008     03E1  3020               	movlw	32
  3009     03E2  027B               	subwf	___fltol@exp1,w
  3010     03E3  1C03               	skipc
  3011     03E4  2BE6               	goto	u931
  3012     03E5  2BE7               	goto	u930
  3013     03E6                     u931:
  3014     03E6  2BF1               	goto	l574
  3015     03E7                     u930:
  3016     03E7  2BA0               	goto	l1477
  3017     03E8                     l1505:
  3018     03E8  3001               	movlw	1
  3019     03E9                     u945:
  3020     03E9  35C0               	lslf	___fltol@f1,f
  3021     03EA  0DC1               	rlf	___fltol@f1+1,f
  3022     03EB  0DC2               	rlf	___fltol@f1+2,f
  3023     03EC  0DC3               	rlf	___fltol@f1+3,f
  3024     03ED  0B89               	decfsz	9,f
  3025     03EE  2BE9               	goto	u945
  3026     03EF  3001               	movlw	1
  3027     03F0  02FB               	subwf	___fltol@exp1,f
  3028     03F1                     l574:
  3029     03F1  087B               	movf	___fltol@exp1,w
  3030     03F2  1D03               	btfss	3,2
  3031     03F3  2BF5               	goto	u951
  3032     03F4  2BF6               	goto	u950
  3033     03F5                     u951:
  3034     03F5  2BE8               	goto	l1505
  3035     03F6                     u950:
  3036     03F6                     l1507:
  3037     03F6  087A               	movf	___fltol@sign1,w
  3038     03F7  1903               	btfsc	3,2
  3039     03F8  2BFA               	goto	u961
  3040     03F9  2BFB               	goto	u960
  3041     03FA                     u961:
  3042     03FA  2C06               	goto	l577
  3043     03FB                     u960:
  3044     03FB                     l1509:
  3045     03FB  09C0               	comf	___fltol@f1,f
  3046     03FC  09C1               	comf	___fltol@f1+1,f
  3047     03FD  09C2               	comf	___fltol@f1+2,f
  3048     03FE  09C3               	comf	___fltol@f1+3,f
  3049     03FF  0AC0               	incf	___fltol@f1,f
  3050     0400  1903               	skipnz
  3051     0401  0AC1               	incf	___fltol@f1+1,f
  3052     0402  1903               	skipnz
  3053     0403  0AC2               	incf	___fltol@f1+2,f
  3054     0404  1903               	skipnz
  3055     0405  0AC3               	incf	___fltol@f1+3,f
  3056     0406                     l577:
  3057     0406                     l567:
  3058     0406  0008               	return
  3059     0407                     __end_of___fltol:
  3060                           
  3061                           	psect	text16
  3062     003A                     __ptext16:	
  3063 ;; *************** function ___flmul *****************
  3064 ;; Defined at:
  3065 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  b               4    6[BANK0 ] long 
  3068 ;;  a               4   10[BANK0 ] long 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  prod            4   26[BANK0 ] struct .
  3071 ;;  grs             4   20[BANK0 ] unsigned long 
  3072 ;;  temp            2   30[BANK0 ] struct .
  3073 ;;  bexp            1   25[BANK0 ] unsigned char 
  3074 ;;  aexp            1   24[BANK0 ] unsigned char 
  3075 ;;  sign            1   19[BANK0 ] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  4    6[BANK0 ] unsigned char 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, pclath, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3085 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3087 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;Total ram usage:       26 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 2
  3092 ;; This function calls:
  3093 ;;		__Umul8_16
  3094 ;; This function is called by:
  3095 ;;		_Analog_read_percent
  3096 ;;		_I2C_SHT4x_read
  3097 ;;		_Analog_read_voltage
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101     003A                     ___flmul:	
  3102                           ;psect for function ___flmul
  3103                           
  3104     003A                     l1511:	
  3105                           ;incstack = 0
  3106                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3107                           
  3108     003A  0140               	movlb	0	; select bank0
  3109     003B  0829               	movf	___flmul@b+3,w
  3110     003C  3980               	andlw	128
  3111     003D  00B3               	movwf	___flmul@sign
  3112     003E                     l1513:
  3113     003E  3529               	lslf	___flmul@b+3,w
  3114     003F  00B9               	movwf	___flmul@bexp
  3115     0040                     l1515:
  3116     0040  1FA8               	btfss	___flmul@b+2,7
  3117     0041  2843               	goto	u971
  3118     0042  2844               	goto	u970
  3119     0043                     u971:
  3120     0043  2845               	goto	l1519
  3121     0044                     u970:
  3122     0044                     l1517:
  3123     0044  1439               	bsf	___flmul@bexp,0
  3124     0045                     l1519:
  3125     0045  0839               	movf	___flmul@bexp,w
  3126     0046  1903               	btfsc	3,2
  3127     0047  2849               	goto	u981
  3128     0048  284A               	goto	u980
  3129     0049                     u981:
  3130     0049  2859               	goto	l1527
  3131     004A                     u980:
  3132     004A                     l1521:
  3133     004A  0A39               	incf	___flmul@bexp,w
  3134     004B  1D03               	btfss	3,2
  3135     004C  284E               	goto	u991
  3136     004D  284F               	goto	u990
  3137     004E                     u991:
  3138     004E  2857               	goto	l1525
  3139     004F                     u990:
  3140     004F                     l1523:
  3141     004F  3000               	movlw	0
  3142     0050  00A9               	movwf	___flmul@b+3
  3143     0051  3000               	movlw	0
  3144     0052  00A8               	movwf	___flmul@b+2
  3145     0053  3000               	movlw	0
  3146     0054  00A7               	movwf	___flmul@b+1
  3147     0055  3000               	movlw	0
  3148     0056  00A6               	movwf	___flmul@b
  3149     0057                     l1525:
  3150     0057  17A8               	bsf	___flmul@b+2,7
  3151     0058  2861               	goto	l1529
  3152     0059                     l1527:
  3153     0059  3000               	movlw	0
  3154     005A  00A9               	movwf	___flmul@b+3
  3155     005B  3000               	movlw	0
  3156     005C  00A8               	movwf	___flmul@b+2
  3157     005D  3000               	movlw	0
  3158     005E  00A7               	movwf	___flmul@b+1
  3159     005F  3000               	movlw	0
  3160     0060  00A6               	movwf	___flmul@b
  3161     0061                     l1529:
  3162     0061  082D               	movf	___flmul@a+3,w
  3163     0062  3980               	andlw	128
  3164     0063  00AE               	movwf	??___flmul
  3165     0064  082E               	movf	??___flmul,w
  3166     0065  06B3               	xorwf	___flmul@sign,f
  3167     0066                     l1531:
  3168     0066  352D               	lslf	___flmul@a+3,w
  3169     0067  00B8               	movwf	___flmul@aexp
  3170     0068                     l1533:
  3171     0068  1FAC               	btfss	___flmul@a+2,7
  3172     0069  286B               	goto	u1001
  3173     006A  286C               	goto	u1000
  3174     006B                     u1001:
  3175     006B  286D               	goto	l1537
  3176     006C                     u1000:
  3177     006C                     l1535:
  3178     006C  1438               	bsf	___flmul@aexp,0
  3179     006D                     l1537:
  3180     006D  0838               	movf	___flmul@aexp,w
  3181     006E  1903               	btfsc	3,2
  3182     006F  2871               	goto	u1011
  3183     0070  2872               	goto	u1010
  3184     0071                     u1011:
  3185     0071  2881               	goto	l1545
  3186     0072                     u1010:
  3187     0072                     l1539:
  3188     0072  0A38               	incf	___flmul@aexp,w
  3189     0073  1D03               	btfss	3,2
  3190     0074  2876               	goto	u1021
  3191     0075  2877               	goto	u1020
  3192     0076                     u1021:
  3193     0076  287F               	goto	l1543
  3194     0077                     u1020:
  3195     0077                     l1541:
  3196     0077  3000               	movlw	0
  3197     0078  00AD               	movwf	___flmul@a+3
  3198     0079  3000               	movlw	0
  3199     007A  00AC               	movwf	___flmul@a+2
  3200     007B  3000               	movlw	0
  3201     007C  00AB               	movwf	___flmul@a+1
  3202     007D  3000               	movlw	0
  3203     007E  00AA               	movwf	___flmul@a
  3204     007F                     l1543:
  3205     007F  17AC               	bsf	___flmul@a+2,7
  3206     0080  2889               	goto	l1547
  3207     0081                     l1545:
  3208     0081  3000               	movlw	0
  3209     0082  00AD               	movwf	___flmul@a+3
  3210     0083  3000               	movlw	0
  3211     0084  00AC               	movwf	___flmul@a+2
  3212     0085  3000               	movlw	0
  3213     0086  00AB               	movwf	___flmul@a+1
  3214     0087  3000               	movlw	0
  3215     0088  00AA               	movwf	___flmul@a
  3216     0089                     l1547:
  3217     0089  0838               	movf	___flmul@aexp,w
  3218     008A  1903               	btfsc	3,2
  3219     008B  288D               	goto	u1031
  3220     008C  288E               	goto	u1030
  3221     008D                     u1031:
  3222     008D  2893               	goto	l1551
  3223     008E                     u1030:
  3224     008E                     l1549:
  3225     008E  0839               	movf	___flmul@bexp,w
  3226     008F  1D03               	btfss	3,2
  3227     0090  2892               	goto	u1041
  3228     0091  2893               	goto	u1040
  3229     0092                     u1041:
  3230     0092  289C               	goto	l1555
  3231     0093                     u1040:
  3232     0093                     l1551:
  3233     0093  3000               	movlw	0
  3234     0094  00A9               	movwf	?___flmul+3
  3235     0095  3000               	movlw	0
  3236     0096  00A8               	movwf	?___flmul+2
  3237     0097  3000               	movlw	0
  3238     0098  00A7               	movwf	?___flmul+1
  3239     0099  3000               	movlw	0
  3240     009A  00A6               	movwf	?___flmul
  3241     009B  2A74               	goto	l770
  3242     009C                     l1555:
  3243     009C  0826               	movf	___flmul@b,w
  3244     009D  00F1               	movwf	__Umul8_16@multiplicand
  3245     009E  082C               	movf	___flmul@a+2,w
  3246     009F  3185  2586  3180   	fcall	__Umul8_16
  3247     00A2  0872               	movf	?__Umul8_16+1,w
  3248     00A3  0140               	movlb	0	; select bank0
  3249     00A4  00BF               	movwf	___flmul@temp+1
  3250     00A5  0871               	movf	?__Umul8_16,w
  3251     00A6  00BE               	movwf	___flmul@temp
  3252     00A7                     l1557:
  3253     00A7  083E               	movf	___flmul@temp,w
  3254     00A8  00AE               	movwf	??___flmul
  3255     00A9  01AF               	clrf	??___flmul+1
  3256     00AA  01B0               	clrf	??___flmul+2
  3257     00AB  01B1               	clrf	??___flmul+3
  3258     00AC  0831               	movf	??___flmul+3,w
  3259     00AD  00B7               	movwf	___flmul@grs+3
  3260     00AE  0830               	movf	??___flmul+2,w
  3261     00AF  00B6               	movwf	___flmul@grs+2
  3262     00B0  082F               	movf	??___flmul+1,w
  3263     00B1  00B5               	movwf	___flmul@grs+1
  3264     00B2  082E               	movf	??___flmul,w
  3265     00B3  00B4               	movwf	___flmul@grs
  3266     00B4                     l1559:
  3267     00B4  083F               	movf	___flmul@temp+1,w
  3268     00B5  00AE               	movwf	??___flmul
  3269     00B6  01AF               	clrf	??___flmul+1
  3270     00B7  01B0               	clrf	??___flmul+2
  3271     00B8  01B1               	clrf	??___flmul+3
  3272     00B9  0831               	movf	??___flmul+3,w
  3273     00BA  00BD               	movwf	___flmul@prod+3
  3274     00BB  0830               	movf	??___flmul+2,w
  3275     00BC  00BC               	movwf	___flmul@prod+2
  3276     00BD  082F               	movf	??___flmul+1,w
  3277     00BE  00BB               	movwf	___flmul@prod+1
  3278     00BF  082E               	movf	??___flmul,w
  3279     00C0  00BA               	movwf	___flmul@prod
  3280     00C1  0827               	movf	___flmul@b+1,w
  3281     00C2  00F1               	movwf	__Umul8_16@multiplicand
  3282     00C3  082B               	movf	___flmul@a+1,w
  3283     00C4  3185  2586  3180   	fcall	__Umul8_16
  3284     00C7  0872               	movf	?__Umul8_16+1,w
  3285     00C8  0140               	movlb	0	; select bank0
  3286     00C9  00BF               	movwf	___flmul@temp+1
  3287     00CA  0871               	movf	?__Umul8_16,w
  3288     00CB  00BE               	movwf	___flmul@temp
  3289     00CC                     l1561:
  3290     00CC  083E               	movf	___flmul@temp,w
  3291     00CD  00AE               	movwf	??___flmul
  3292     00CE  01AF               	clrf	??___flmul+1
  3293     00CF  01B0               	clrf	??___flmul+2
  3294     00D0  01B1               	clrf	??___flmul+3
  3295     00D1  082E               	movf	??___flmul,w
  3296     00D2  07B4               	addwf	___flmul@grs,f
  3297     00D3  082F               	movf	??___flmul+1,w
  3298     00D4  3DB5               	addwfc	___flmul@grs+1,f
  3299     00D5  0830               	movf	??___flmul+2,w
  3300     00D6  3DB6               	addwfc	___flmul@grs+2,f
  3301     00D7  0831               	movf	??___flmul+3,w
  3302     00D8  3DB7               	addwfc	___flmul@grs+3,f
  3303     00D9                     l1563:
  3304     00D9  083F               	movf	___flmul@temp+1,w
  3305     00DA  00AE               	movwf	??___flmul
  3306     00DB  01AF               	clrf	??___flmul+1
  3307     00DC  01B0               	clrf	??___flmul+2
  3308     00DD  01B1               	clrf	??___flmul+3
  3309     00DE  082E               	movf	??___flmul,w
  3310     00DF  07BA               	addwf	___flmul@prod,f
  3311     00E0  082F               	movf	??___flmul+1,w
  3312     00E1  3DBB               	addwfc	___flmul@prod+1,f
  3313     00E2  0830               	movf	??___flmul+2,w
  3314     00E3  3DBC               	addwfc	___flmul@prod+2,f
  3315     00E4  0831               	movf	??___flmul+3,w
  3316     00E5  3DBD               	addwfc	___flmul@prod+3,f
  3317     00E6  0828               	movf	___flmul@b+2,w
  3318     00E7  00F1               	movwf	__Umul8_16@multiplicand
  3319     00E8  082A               	movf	___flmul@a,w
  3320     00E9  3185  2586  3180   	fcall	__Umul8_16
  3321     00EC  0872               	movf	?__Umul8_16+1,w
  3322     00ED  0140               	movlb	0	; select bank0
  3323     00EE  00BF               	movwf	___flmul@temp+1
  3324     00EF  0871               	movf	?__Umul8_16,w
  3325     00F0  00BE               	movwf	___flmul@temp
  3326     00F1                     l1565:
  3327     00F1  083E               	movf	___flmul@temp,w
  3328     00F2  00AE               	movwf	??___flmul
  3329     00F3  01AF               	clrf	??___flmul+1
  3330     00F4  01B0               	clrf	??___flmul+2
  3331     00F5  01B1               	clrf	??___flmul+3
  3332     00F6  082E               	movf	??___flmul,w
  3333     00F7  07B4               	addwf	___flmul@grs,f
  3334     00F8  082F               	movf	??___flmul+1,w
  3335     00F9  3DB5               	addwfc	___flmul@grs+1,f
  3336     00FA  0830               	movf	??___flmul+2,w
  3337     00FB  3DB6               	addwfc	___flmul@grs+2,f
  3338     00FC  0831               	movf	??___flmul+3,w
  3339     00FD  3DB7               	addwfc	___flmul@grs+3,f
  3340     00FE                     l1567:
  3341     00FE  083F               	movf	___flmul@temp+1,w
  3342     00FF  00AE               	movwf	??___flmul
  3343     0100  01AF               	clrf	??___flmul+1
  3344     0101  01B0               	clrf	??___flmul+2
  3345     0102  01B1               	clrf	??___flmul+3
  3346     0103  082E               	movf	??___flmul,w
  3347     0104  07BA               	addwf	___flmul@prod,f
  3348     0105  082F               	movf	??___flmul+1,w
  3349     0106  3DBB               	addwfc	___flmul@prod+1,f
  3350     0107  0830               	movf	??___flmul+2,w
  3351     0108  3DBC               	addwfc	___flmul@prod+2,f
  3352     0109  0831               	movf	??___flmul+3,w
  3353     010A  3DBD               	addwfc	___flmul@prod+3,f
  3354     010B                     l1569:
  3355     010B  3008               	movlw	8
  3356     010C                     u1055:
  3357     010C  35B4               	lslf	___flmul@grs,f
  3358     010D  0DB5               	rlf	___flmul@grs+1,f
  3359     010E  0DB6               	rlf	___flmul@grs+2,f
  3360     010F  0DB7               	rlf	___flmul@grs+3,f
  3361     0110  0B89               	decfsz	9,f
  3362     0111  290C               	goto	u1055
  3363     0112                     l1571:
  3364     0112  0827               	movf	___flmul@b+1,w
  3365     0113  00F1               	movwf	__Umul8_16@multiplicand
  3366     0114  082A               	movf	___flmul@a,w
  3367     0115  3185  2586  3180   	fcall	__Umul8_16
  3368     0118  0872               	movf	?__Umul8_16+1,w
  3369     0119  0140               	movlb	0	; select bank0
  3370     011A  00BF               	movwf	___flmul@temp+1
  3371     011B  0871               	movf	?__Umul8_16,w
  3372     011C  00BE               	movwf	___flmul@temp
  3373     011D                     l1573:
  3374     011D  083E               	movf	___flmul@temp,w
  3375     011E  07B4               	addwf	___flmul@grs,f
  3376     011F  083F               	movf	___flmul@temp+1,w
  3377     0120  3DB5               	addwfc	___flmul@grs+1,f
  3378     0121  3000               	movlw	0
  3379     0122  3DB6               	addwfc	___flmul@grs+2,f
  3380     0123  3DB7               	addwfc	___flmul@grs+3,f
  3381     0124                     l1575:
  3382     0124  0826               	movf	___flmul@b,w
  3383     0125  00F1               	movwf	__Umul8_16@multiplicand
  3384     0126  082B               	movf	___flmul@a+1,w
  3385     0127  3185  2586  3180   	fcall	__Umul8_16
  3386     012A  0872               	movf	?__Umul8_16+1,w
  3387     012B  0140               	movlb	0	; select bank0
  3388     012C  00BF               	movwf	___flmul@temp+1
  3389     012D  0871               	movf	?__Umul8_16,w
  3390     012E  00BE               	movwf	___flmul@temp
  3391     012F                     l1577:
  3392     012F  083E               	movf	___flmul@temp,w
  3393     0130  07B4               	addwf	___flmul@grs,f
  3394     0131  083F               	movf	___flmul@temp+1,w
  3395     0132  3DB5               	addwfc	___flmul@grs+1,f
  3396     0133  3000               	movlw	0
  3397     0134  3DB6               	addwfc	___flmul@grs+2,f
  3398     0135  3DB7               	addwfc	___flmul@grs+3,f
  3399     0136                     l1579:
  3400     0136  3008               	movlw	8
  3401     0137                     u1065:
  3402     0137  35B4               	lslf	___flmul@grs,f
  3403     0138  0DB5               	rlf	___flmul@grs+1,f
  3404     0139  0DB6               	rlf	___flmul@grs+2,f
  3405     013A  0DB7               	rlf	___flmul@grs+3,f
  3406     013B  0B89               	decfsz	9,f
  3407     013C  2937               	goto	u1065
  3408     013D  0826               	movf	___flmul@b,w
  3409     013E  00F1               	movwf	__Umul8_16@multiplicand
  3410     013F  082A               	movf	___flmul@a,w
  3411     0140  3185  2586  3180   	fcall	__Umul8_16
  3412     0143  0872               	movf	?__Umul8_16+1,w
  3413     0144  0140               	movlb	0	; select bank0
  3414     0145  00BF               	movwf	___flmul@temp+1
  3415     0146  0871               	movf	?__Umul8_16,w
  3416     0147  00BE               	movwf	___flmul@temp
  3417     0148                     l1581:
  3418     0148  083E               	movf	___flmul@temp,w
  3419     0149  07B4               	addwf	___flmul@grs,f
  3420     014A  083F               	movf	___flmul@temp+1,w
  3421     014B  3DB5               	addwfc	___flmul@grs+1,f
  3422     014C  3000               	movlw	0
  3423     014D  3DB6               	addwfc	___flmul@grs+2,f
  3424     014E  3DB7               	addwfc	___flmul@grs+3,f
  3425     014F                     l1583:
  3426     014F  0827               	movf	___flmul@b+1,w
  3427     0150  00F1               	movwf	__Umul8_16@multiplicand
  3428     0151  082C               	movf	___flmul@a+2,w
  3429     0152  3185  2586  3180   	fcall	__Umul8_16
  3430     0155  0872               	movf	?__Umul8_16+1,w
  3431     0156  0140               	movlb	0	; select bank0
  3432     0157  00BF               	movwf	___flmul@temp+1
  3433     0158  0871               	movf	?__Umul8_16,w
  3434     0159  00BE               	movwf	___flmul@temp
  3435     015A  083E               	movf	___flmul@temp,w
  3436     015B  07BA               	addwf	___flmul@prod,f
  3437     015C  083F               	movf	___flmul@temp+1,w
  3438     015D  3DBB               	addwfc	___flmul@prod+1,f
  3439     015E  3000               	movlw	0
  3440     015F  3DBC               	addwfc	___flmul@prod+2,f
  3441     0160  3DBD               	addwfc	___flmul@prod+3,f
  3442     0161                     l1585:
  3443     0161  0828               	movf	___flmul@b+2,w
  3444     0162  00F1               	movwf	__Umul8_16@multiplicand
  3445     0163  082B               	movf	___flmul@a+1,w
  3446     0164  3185  2586  3180   	fcall	__Umul8_16
  3447     0167  0872               	movf	?__Umul8_16+1,w
  3448     0168  0140               	movlb	0	; select bank0
  3449     0169  00BF               	movwf	___flmul@temp+1
  3450     016A  0871               	movf	?__Umul8_16,w
  3451     016B  00BE               	movwf	___flmul@temp
  3452     016C                     l1587:
  3453     016C  083E               	movf	___flmul@temp,w
  3454     016D  07BA               	addwf	___flmul@prod,f
  3455     016E  083F               	movf	___flmul@temp+1,w
  3456     016F  3DBB               	addwfc	___flmul@prod+1,f
  3457     0170  3000               	movlw	0
  3458     0171  3DBC               	addwfc	___flmul@prod+2,f
  3459     0172  3DBD               	addwfc	___flmul@prod+3,f
  3460     0173  0828               	movf	___flmul@b+2,w
  3461     0174  00F1               	movwf	__Umul8_16@multiplicand
  3462     0175  082C               	movf	___flmul@a+2,w
  3463     0176  3185  2586  3180   	fcall	__Umul8_16
  3464     0179  0872               	movf	?__Umul8_16+1,w
  3465     017A  0140               	movlb	0	; select bank0
  3466     017B  00BF               	movwf	___flmul@temp+1
  3467     017C  0871               	movf	?__Umul8_16,w
  3468     017D  00BE               	movwf	___flmul@temp
  3469     017E                     l1589:
  3470     017E  083E               	movf	___flmul@temp,w
  3471     017F  00AE               	movwf	??___flmul
  3472     0180  083F               	movf	___flmul@temp+1,w
  3473     0181  00AF               	movwf	??___flmul+1
  3474     0182  01B0               	clrf	??___flmul+2
  3475     0183  01B1               	clrf	??___flmul+3
  3476     0184  3008               	movlw	8
  3477     0185                     u1075:
  3478     0185  35AE               	lslf	??___flmul,f
  3479     0186  0DAF               	rlf	??___flmul+1,f
  3480     0187  0DB0               	rlf	??___flmul+2,f
  3481     0188  0DB1               	rlf	??___flmul+3,f
  3482     0189                     u1070:
  3483     0189  0B89               	decfsz	9,f
  3484     018A  2985               	goto	u1075
  3485     018B  082E               	movf	??___flmul,w
  3486     018C  07BA               	addwf	___flmul@prod,f
  3487     018D  082F               	movf	??___flmul+1,w
  3488     018E  3DBB               	addwfc	___flmul@prod+1,f
  3489     018F  0830               	movf	??___flmul+2,w
  3490     0190  3DBC               	addwfc	___flmul@prod+2,f
  3491     0191  0831               	movf	??___flmul+3,w
  3492     0192  3DBD               	addwfc	___flmul@prod+3,f
  3493     0193                     l1591:
  3494     0193  0834               	movf	___flmul@grs,w
  3495     0194  00AE               	movwf	??___flmul
  3496     0195  0835               	movf	___flmul@grs+1,w
  3497     0196  00AF               	movwf	??___flmul+1
  3498     0197  0836               	movf	___flmul@grs+2,w
  3499     0198  00B0               	movwf	??___flmul+2
  3500     0199  0837               	movf	___flmul@grs+3,w
  3501     019A  00B1               	movwf	??___flmul+3
  3502     019B  3018               	movlw	24
  3503     019C                     u1085:
  3504     019C  36B1               	lsrf	??___flmul+3,f
  3505     019D  0CB0               	rrf	??___flmul+2,f
  3506     019E  0CAF               	rrf	??___flmul+1,f
  3507     019F  0CAE               	rrf	??___flmul,f
  3508     01A0                     u1080:
  3509     01A0  0B89               	decfsz	9,f
  3510     01A1  299C               	goto	u1085
  3511     01A2  082E               	movf	??___flmul,w
  3512     01A3  07BA               	addwf	___flmul@prod,f
  3513     01A4  082F               	movf	??___flmul+1,w
  3514     01A5  3DBB               	addwfc	___flmul@prod+1,f
  3515     01A6  0830               	movf	??___flmul+2,w
  3516     01A7  3DBC               	addwfc	___flmul@prod+2,f
  3517     01A8  0831               	movf	??___flmul+3,w
  3518     01A9  3DBD               	addwfc	___flmul@prod+3,f
  3519     01AA                     l1593:
  3520     01AA  3008               	movlw	8
  3521     01AB                     u1095:
  3522     01AB  35B4               	lslf	___flmul@grs,f
  3523     01AC  0DB5               	rlf	___flmul@grs+1,f
  3524     01AD  0DB6               	rlf	___flmul@grs+2,f
  3525     01AE  0DB7               	rlf	___flmul@grs+3,f
  3526     01AF  0B89               	decfsz	9,f
  3527     01B0  29AB               	goto	u1095
  3528     01B1                     l1595:
  3529     01B1  0839               	movf	___flmul@bexp,w
  3530     01B2  0738               	addwf	___flmul@aexp,w
  3531     01B3  00AE               	movwf	??___flmul
  3532     01B4  01AF               	clrf	??___flmul+1
  3533     01B5  0DAF               	rlf	??___flmul+1,f
  3534     01B6  082E               	movf	??___flmul,w
  3535     01B7  3E82               	addlw	130
  3536     01B8  00BE               	movwf	___flmul@temp
  3537     01B9  30FF               	movlw	255
  3538     01BA  3D2F               	addwfc	??___flmul+1,w
  3539     01BB  00BF               	movwf	___flmul@temp+1
  3540     01BC  29D4               	goto	l1607
  3541     01BD                     l1597:
  3542     01BD  3001               	movlw	1
  3543     01BE                     u1105:
  3544     01BE  35BA               	lslf	___flmul@prod,f
  3545     01BF  0DBB               	rlf	___flmul@prod+1,f
  3546     01C0  0DBC               	rlf	___flmul@prod+2,f
  3547     01C1  0DBD               	rlf	___flmul@prod+3,f
  3548     01C2  0B89               	decfsz	9,f
  3549     01C3  29BE               	goto	u1105
  3550     01C4                     l1599:
  3551     01C4  1FB7               	btfss	___flmul@grs+3,7
  3552     01C5  29C7               	goto	u1111
  3553     01C6  29C8               	goto	u1110
  3554     01C7                     u1111:
  3555     01C7  29C9               	goto	l1603
  3556     01C8                     u1110:
  3557     01C8                     l1601:
  3558     01C8  143A               	bsf	___flmul@prod,0
  3559     01C9                     l1603:
  3560     01C9  3001               	movlw	1
  3561     01CA                     u1125:
  3562     01CA  35B4               	lslf	___flmul@grs,f
  3563     01CB  0DB5               	rlf	___flmul@grs+1,f
  3564     01CC  0DB6               	rlf	___flmul@grs+2,f
  3565     01CD  0DB7               	rlf	___flmul@grs+3,f
  3566     01CE  0B89               	decfsz	9,f
  3567     01CF  29CA               	goto	u1125
  3568     01D0                     l1605:
  3569     01D0  30FF               	movlw	255
  3570     01D1  07BE               	addwf	___flmul@temp,f
  3571     01D2  30FF               	movlw	255
  3572     01D3  3DBF               	addwfc	___flmul@temp+1,f
  3573     01D4                     l1607:
  3574     01D4  1FBC               	btfss	___flmul@prod+2,7
  3575     01D5  29D7               	goto	u1131
  3576     01D6  29D8               	goto	u1130
  3577     01D7                     u1131:
  3578     01D7  29BD               	goto	l1597
  3579     01D8                     u1130:
  3580     01D8                     l1609:
  3581     01D8  01B8               	clrf	___flmul@aexp
  3582     01D9                     l1611:
  3583     01D9  1FB7               	btfss	___flmul@grs+3,7
  3584     01DA  29DC               	goto	u1141
  3585     01DB  29DD               	goto	u1140
  3586     01DC                     u1141:
  3587     01DC  29F9               	goto	l1619
  3588     01DD                     u1140:
  3589     01DD                     l1613:
  3590     01DD  30FF               	movlw	255
  3591     01DE  0534               	andwf	___flmul@grs,w
  3592     01DF  00AE               	movwf	??___flmul
  3593     01E0  30FF               	movlw	255
  3594     01E1  0535               	andwf	___flmul@grs+1,w
  3595     01E2  00AF               	movwf	??___flmul+1
  3596     01E3  30FF               	movlw	255
  3597     01E4  0536               	andwf	___flmul@grs+2,w
  3598     01E5  00B0               	movwf	??___flmul+2
  3599     01E6  307F               	movlw	127
  3600     01E7  0537               	andwf	___flmul@grs+3,w
  3601     01E8  00B1               	movwf	??___flmul+3
  3602     01E9  0831               	movf	??___flmul+3,w
  3603     01EA  0430               	iorwf	??___flmul+2,w
  3604     01EB  042F               	iorwf	??___flmul+1,w
  3605     01EC  042E               	iorwf	??___flmul,w
  3606     01ED  1903               	skipnz
  3607     01EE  29F0               	goto	u1151
  3608     01EF  29F1               	goto	u1150
  3609     01F0                     u1151:
  3610     01F0  29F4               	goto	l776
  3611     01F1                     u1150:
  3612     01F1                     l1615:
  3613     01F1  01B8               	clrf	___flmul@aexp
  3614     01F2  0AB8               	incf	___flmul@aexp,f
  3615     01F3  29F9               	goto	l1619
  3616     01F4                     l776:
  3617     01F4  1C3A               	btfss	___flmul@prod,0
  3618     01F5  29F7               	goto	u1161
  3619     01F6  29F8               	goto	u1160
  3620     01F7                     u1161:
  3621     01F7  29F9               	goto	l1619
  3622     01F8                     u1160:
  3623     01F8  29F1               	goto	l1615
  3624     01F9                     l1619:
  3625     01F9  0838               	movf	___flmul@aexp,w
  3626     01FA  1903               	btfsc	3,2
  3627     01FB  29FD               	goto	u1171
  3628     01FC  29FE               	goto	u1170
  3629     01FD                     u1171:
  3630     01FD  2A26               	goto	l1629
  3631     01FE                     u1170:
  3632     01FE                     l1621:
  3633     01FE  3001               	movlw	1
  3634     01FF  07BA               	addwf	___flmul@prod,f
  3635     0200  3000               	movlw	0
  3636     0201  3DBB               	addwfc	___flmul@prod+1,f
  3637     0202  3000               	movlw	0
  3638     0203  3DBC               	addwfc	___flmul@prod+2,f
  3639     0204  3000               	movlw	0
  3640     0205  3DBD               	addwfc	___flmul@prod+3,f
  3641     0206                     l1623:
  3642     0206  1C3D               	btfss	___flmul@prod+3,0
  3643     0207  2A09               	goto	u1181
  3644     0208  2A0A               	goto	u1180
  3645     0209                     u1181:
  3646     0209  2A26               	goto	l1629
  3647     020A                     u1180:
  3648     020A                     l1625:
  3649     020A  083A               	movf	___flmul@prod,w
  3650     020B  00AE               	movwf	??___flmul
  3651     020C  083B               	movf	___flmul@prod+1,w
  3652     020D  00AF               	movwf	??___flmul+1
  3653     020E  083C               	movf	___flmul@prod+2,w
  3654     020F  00B0               	movwf	??___flmul+2
  3655     0210  083D               	movf	___flmul@prod+3,w
  3656     0211  00B1               	movwf	??___flmul+3
  3657     0212  3001               	movlw	1
  3658     0213  00B2               	movwf	??___flmul+4
  3659     0214                     u1195:
  3660     0214  37B1               	asrf	??___flmul+3,f
  3661     0215  0CB0               	rrf	??___flmul+2,f
  3662     0216  0CAF               	rrf	??___flmul+1,f
  3663     0217  0CAE               	rrf	??___flmul,f
  3664     0218                     u1190:
  3665     0218  0BB2               	decfsz	??___flmul+4,f
  3666     0219  2A14               	goto	u1195
  3667     021A  0831               	movf	??___flmul+3,w
  3668     021B  00BD               	movwf	___flmul@prod+3
  3669     021C  0830               	movf	??___flmul+2,w
  3670     021D  00BC               	movwf	___flmul@prod+2
  3671     021E  082F               	movf	??___flmul+1,w
  3672     021F  00BB               	movwf	___flmul@prod+1
  3673     0220  082E               	movf	??___flmul,w
  3674     0221  00BA               	movwf	___flmul@prod
  3675     0222                     l1627:
  3676     0222  3001               	movlw	1
  3677     0223  07BE               	addwf	___flmul@temp,f
  3678     0224  3000               	movlw	0
  3679     0225  3DBF               	addwfc	___flmul@temp+1,f
  3680     0226                     l1629:
  3681     0226  083F               	movf	___flmul@temp+1,w
  3682     0227  3A80               	xorlw	128
  3683     0228  00AE               	movwf	??___flmul
  3684     0229  3080               	movlw	128
  3685     022A  022E               	subwf	??___flmul,w
  3686     022B  1D03               	skipz
  3687     022C  2A2F               	goto	u1205
  3688     022D  30FF               	movlw	255
  3689     022E  023E               	subwf	___flmul@temp,w
  3690     022F                     u1205:
  3691     022F  1C03               	skipc
  3692     0230  2A32               	goto	u1201
  3693     0231  2A33               	goto	u1200
  3694     0232                     u1201:
  3695     0232  2A3D               	goto	l1633
  3696     0233                     u1200:
  3697     0233                     l1631:
  3698     0233  307F               	movlw	127
  3699     0234  0140               	movlb	0	; select bank0
  3700     0235  00BD               	movwf	___flmul@prod+3
  3701     0236  3080               	movlw	128
  3702     0237  00BC               	movwf	___flmul@prod+2
  3703     0238  3000               	movlw	0
  3704     0239  00BB               	movwf	___flmul@prod+1
  3705     023A  3000               	movlw	0
  3706     023B  00BA               	movwf	___flmul@prod
  3707     023C  2A68               	goto	l782
  3708     023D                     l1633:
  3709     023D  0140               	movlb	0	; select bank0
  3710     023E  083F               	movf	___flmul@temp+1,w
  3711     023F  3A80               	xorlw	128
  3712     0240  00AE               	movwf	??___flmul
  3713     0241  3080               	movlw	128
  3714     0242  022E               	subwf	??___flmul,w
  3715     0243  1D03               	skipz
  3716     0244  2A47               	goto	u1215
  3717     0245  3001               	movlw	1
  3718     0246  023E               	subwf	___flmul@temp,w
  3719     0247                     u1215:
  3720     0247  1803               	skipnc
  3721     0248  2A4A               	goto	u1211
  3722     0249  2A4B               	goto	u1210
  3723     024A                     u1211:
  3724     024A  2A56               	goto	l1639
  3725     024B                     u1210:
  3726     024B                     l1635:
  3727     024B  3000               	movlw	0
  3728     024C  0140               	movlb	0	; select bank0
  3729     024D  00BD               	movwf	___flmul@prod+3
  3730     024E  3000               	movlw	0
  3731     024F  00BC               	movwf	___flmul@prod+2
  3732     0250  3000               	movlw	0
  3733     0251  00BB               	movwf	___flmul@prod+1
  3734     0252  3000               	movlw	0
  3735     0253  00BA               	movwf	___flmul@prod
  3736     0254                     l1637:
  3737     0254  01B3               	clrf	___flmul@sign
  3738     0255  2A68               	goto	l782
  3739     0256                     l1639:
  3740     0256  0140               	movlb	0	; select bank0
  3741     0257  083E               	movf	___flmul@temp,w
  3742     0258  00B9               	movwf	___flmul@bexp
  3743     0259  30FF               	movlw	255
  3744     025A  05BA               	andwf	___flmul@prod,f
  3745     025B  30FF               	movlw	255
  3746     025C  05BB               	andwf	___flmul@prod+1,f
  3747     025D  307F               	movlw	127
  3748     025E  05BC               	andwf	___flmul@prod+2,f
  3749     025F  3000               	movlw	0
  3750     0260  05BD               	andwf	___flmul@prod+3,f
  3751     0261                     l1641:
  3752     0261  1C39               	btfss	___flmul@bexp,0
  3753     0262  2A64               	goto	u1221
  3754     0263  2A65               	goto	u1220
  3755     0264                     u1221:
  3756     0264  2A66               	goto	l1645
  3757     0265                     u1220:
  3758     0265                     l1643:
  3759     0265  17BC               	bsf	___flmul@prod+2,7
  3760     0266                     l1645:
  3761     0266  3639               	lsrf	___flmul@bexp,w
  3762     0267  00BD               	movwf	___flmul@prod+3
  3763     0268                     l782:
  3764     0268  0833               	movf	___flmul@sign,w
  3765     0269  00AE               	movwf	??___flmul
  3766     026A  082E               	movf	??___flmul,w
  3767     026B  04BD               	iorwf	___flmul@prod+3,f
  3768     026C                     l1647:
  3769     026C  083D               	movf	___flmul@prod+3,w
  3770     026D  00A9               	movwf	?___flmul+3
  3771     026E  083C               	movf	___flmul@prod+2,w
  3772     026F  00A8               	movwf	?___flmul+2
  3773     0270  083B               	movf	___flmul@prod+1,w
  3774     0271  00A7               	movwf	?___flmul+1
  3775     0272  083A               	movf	___flmul@prod,w
  3776     0273  00A6               	movwf	?___flmul
  3777     0274                     l770:
  3778     0274  0008               	return
  3779     0275                     __end_of___flmul:
  3780                           
  3781                           	psect	text17
  3782     0586                     __ptext17:	
  3783 ;; *************** function __Umul8_16 *****************
  3784 ;; Defined at:
  3785 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  multiplier      1    wreg     unsigned char 
  3788 ;;  multiplicand    1    1[COMMON] unsigned char 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  multiplier      1    9[COMMON] unsigned char 
  3791 ;;  word_mpld       2    7[COMMON] unsigned int 
  3792 ;;  product         2    5[COMMON] unsigned int 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  2    1[COMMON] unsigned int 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2, status,0
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;Total ram usage:        9 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; Hardware stack levels required when called: 1
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		___flmul
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816     0586                     __Umul8_16:	
  3817                           ;psect for function __Umul8_16
  3818                           
  3819                           
  3820                           ;incstack = 0
  3821                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3822                           ;__Umul8_16@multiplier stored from wreg
  3823     0586  00F9               	movwf	__Umul8_16@multiplier
  3824     0587                     l1407:
  3825     0587  01F5               	clrf	__Umul8_16@product
  3826     0588  01F6               	clrf	__Umul8_16@product+1
  3827     0589                     l1409:
  3828     0589  0871               	movf	__Umul8_16@multiplicand,w
  3829     058A  00F3               	movwf	??__Umul8_16
  3830     058B  01F4               	clrf	??__Umul8_16+1
  3831     058C  0873               	movf	??__Umul8_16,w
  3832     058D  00F7               	movwf	__Umul8_16@word_mpld
  3833     058E  0874               	movf	??__Umul8_16+1,w
  3834     058F  00F8               	movwf	__Umul8_16@word_mpld+1
  3835     0590                     l1411:
  3836     0590  1C79               	btfss	__Umul8_16@multiplier,0
  3837     0591  2D93               	goto	u781
  3838     0592  2D94               	goto	u780
  3839     0593                     u781:
  3840     0593  2D98               	goto	l789
  3841     0594                     u780:
  3842     0594                     l1413:
  3843     0594  0877               	movf	__Umul8_16@word_mpld,w
  3844     0595  07F5               	addwf	__Umul8_16@product,f
  3845     0596  0878               	movf	__Umul8_16@word_mpld+1,w
  3846     0597  3DF6               	addwfc	__Umul8_16@product+1,f
  3847     0598                     l789:
  3848     0598  3001               	movlw	1
  3849     0599                     u795:
  3850     0599  35F7               	lslf	__Umul8_16@word_mpld,f
  3851     059A  0DF8               	rlf	__Umul8_16@word_mpld+1,f
  3852     059B  0B89               	decfsz	9,f
  3853     059C  2D99               	goto	u795
  3854     059D  1003               	clrc
  3855     059E  0CF9               	rrf	__Umul8_16@multiplier,f
  3856     059F                     l1415:
  3857     059F  0879               	movf	__Umul8_16@multiplier,w
  3858     05A0  1D03               	btfss	3,2
  3859     05A1  2DA3               	goto	u801
  3860     05A2  2DA4               	goto	u800
  3861     05A3                     u801:
  3862     05A3  2D90               	goto	l1411
  3863     05A4                     u800:
  3864     05A4                     l1417:
  3865     05A4  0876               	movf	__Umul8_16@product+1,w
  3866     05A5  00F2               	movwf	?__Umul8_16+1
  3867     05A6  0875               	movf	__Umul8_16@product,w
  3868     05A7  00F1               	movwf	?__Umul8_16
  3869     05A8                     l791:
  3870     05A8  0008               	return
  3871     05A9                     __end_of__Umul8_16:
  3872                           
  3873                           	psect	text18
  3874     060B                     __ptext18:	
  3875 ;; *************** function _Analog_read_raw *****************
  3876 ;; Defined at:
  3877 ;;		line 17 in file "./analog_driver.h"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  2    1[COMMON] unsigned short 
  3884 ;; Registers used:
  3885 ;;		wreg
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;Total ram usage:        2 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; Hardware stack levels required when called: 1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_Analog_read_percent
  3902 ;;		_Analog_read_voltage
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906     060B                     _Analog_read_raw:	
  3907                           ;psect for function _Analog_read_raw
  3908                           
  3909     060B                     l1429:	
  3910                           ;incstack = 0
  3911                           ; Regs used in _Analog_read_raw: [wreg]
  3912                           
  3913                           
  3914                           ;./analog_driver.h: 18:     ADCON0bits.ON = 1;
  3915     060B  017A               	movlb	58	; select bank58
  3916     060C  17A6               	bsf	38,7	;volatile
  3917                           
  3918                           ;./analog_driver.h: 19:     ADCON0bits.GO = 1;
  3919     060D  1426               	bsf	38,0	;volatile
  3920     060E                     l167:	
  3921                           ;./analog_driver.h: 20:     while(ADCON0bits.GO);
  3922                           
  3923     060E  1826               	btfsc	38,0	;volatile
  3924     060F  2E11               	goto	u821
  3925     0610  2E12               	goto	u820
  3926     0611                     u821:
  3927     0611  2E0E               	goto	l167
  3928     0612                     u820:
  3929     0612                     l1431:
  3930                           
  3931                           ;./analog_driver.h: 22:     return ADRES;
  3932     0612  081E               	movf	30,w	;volatile
  3933     0613  00F2               	movwf	?_Analog_read_raw+1
  3934     0614  081D               	movf	29,w	;volatile
  3935     0615  00F1               	movwf	?_Analog_read_raw
  3936     0616                     l170:
  3937     0616  0008               	return
  3938     0617                     __end_of_Analog_read_raw:
  3939                           
  3940                           	psect	intentry
  3941     0004                     __pintentry:	
  3942 ;; *************** function _ISR *****************
  3943 ;; Defined at:
  3944 ;;		line 71 in file "main.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;Total ram usage:        1 bytes
  3963 ;; Hardware stack levels used: 1
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		Interrupt level 1
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971     0004                     _ISR:
  3972                           
  3973                           ;incstack = 0
  3974     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3975                           
  3976                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3977     0005  3180               	pagesel	$
  3978     0006                     i1l1779:
  3979                           
  3980                           ;main.c: 73:     if(PIR3bits.RC2IF){
  3981     0006  0141               	movlb	1	; select bank1
  3982     0007  1E8F               	btfss	15,5	;volatile
  3983     0008  280A               	goto	u139_21
  3984     0009  280B               	goto	u139_20
  3985     000A                     u139_21:
  3986     000A  2829               	goto	i1l211
  3987     000B                     u139_20:
  3988     000B                     i1l1781:
  3989                           
  3990                           ;main.c: 76:             if(RX_index < 80){
  3991     000B  3050               	movlw	80
  3992     000C  027C               	subwf	_RX_index,w
  3993     000D  1803               	skipnc
  3994     000E  2810               	goto	u140_21
  3995     000F  2811               	goto	u140_20
  3996     0010                     u140_21:
  3997     0010  281C               	goto	i1l1787
  3998     0011                     u140_20:
  3999     0011                     i1l1783:
  4000                           
  4001                           ;main.c: 77:                 RX_buffer[RX_index] = RC2REG;
  4002     0011  087C               	movf	_RX_index,w
  4003     0012  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  4004     0013  0086               	movwf	6
  4005     0014  0187               	clrf	7
  4006     0015  014C               	movlb	12	; select bank12
  4007     0016  0816               	movf	22,w	;volatile
  4008     0017  0081               	movwf	1
  4009     0018                     i1l1785:
  4010                           
  4011                           ;main.c: 78:                 RX_index ++;
  4012     0018  3001               	movlw	1
  4013     0019  00F0               	movwf	??_ISR
  4014     001A  0870               	movf	??_ISR,w
  4015     001B  07FC               	addwf	_RX_index,f
  4016     001C                     i1l1787:
  4017                           
  4018                           ;main.c: 81:         if(RC2STAbits.FERR){
  4019     001C  014C               	movlb	12	; select bank12
  4020     001D  1D1A               	btfss	26,2	;volatile
  4021     001E  2820               	goto	u141_21
  4022     001F  2821               	goto	u141_20
  4023     0020                     u141_21:
  4024     0020  2823               	goto	i1l209
  4025     0021                     u141_20:
  4026     0021                     i1l1789:
  4027                           
  4028                           ;main.c: 83:             RC2STAbits.SPEN = 0;
  4029     0021  139A               	bcf	26,7	;volatile
  4030                           
  4031                           ;main.c: 84:             RC2STAbits.SPEN = 1;
  4032     0022  179A               	bsf	26,7	;volatile
  4033     0023                     i1l209:	
  4034                           ;main.c: 86:         }
  4035                           
  4036                           
  4037                           ;main.c: 87:         if(RC2STAbits.OERR){
  4038     0023  1C9A               	btfss	26,1	;volatile
  4039     0024  2826               	goto	u142_21
  4040     0025  2827               	goto	u142_20
  4041     0026                     u142_21:
  4042     0026  2829               	goto	i1l211
  4043     0027                     u142_20:
  4044     0027                     i1l1791:
  4045                           
  4046                           ;main.c: 89:             RC2STAbits.CREN = 0;
  4047     0027  121A               	bcf	26,4	;volatile
  4048                           
  4049                           ;main.c: 90:             RC2STAbits.CREN = 1;
  4050     0028  161A               	bsf	26,4	;volatile
  4051     0029                     i1l211:
  4052     0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4053     002A  0009               	retfie
  4054     002B                     __end_of_ISR:
  4055     007E                     btemp	set	126	;btemp
  4056     007E                     int$flags	set	126
  4057     007E                     wtemp0	set	126
  4058                           
  4059                           	psect	idloc
  4060                           
  4061                           ;Config register IDLOC0 @ 0x8000
  4062                           ;	unspecified, using default values
  4063     8000                     	org	32768
  4064     8000  3FFF               	dw	16383
  4065                           
  4066                           ;Config register IDLOC1 @ 0x8001
  4067                           ;	unspecified, using default values
  4068     8001                     	org	32769
  4069     8001  3FFF               	dw	16383
  4070                           
  4071                           ;Config register IDLOC2 @ 0x8002
  4072                           ;	unspecified, using default values
  4073     8002                     	org	32770
  4074     8002  3FFF               	dw	16383
  4075                           
  4076                           ;Config register IDLOC3 @ 0x8003
  4077                           ;	unspecified, using default values
  4078     8003                     	org	32771
  4079     8003  3FFF               	dw	16383
  4080                           
  4081                           	psect	config
  4082                           
  4083                           ;Config register CONFIG1 @ 0x8007
  4084                           ;	External Oscillator Selection bits
  4085                           ;	FEXTOSC = OFF, Oscillator not enabled
  4086                           ;	Reset Oscillator Selection bits
  4087                           ;	RSTOSC = HFINTOSC_1MHz, HFINTOSC (1MHz)
  4088                           ;	Clock Out Enable bit
  4089                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  4090                           ;	VDD Range Analog Calibration Selection bit
  4091                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3 - 5
      +                          .5V
  4092     8007                     	org	32775
  4093     8007  3FEC               	dw	16364
  4094                           
  4095                           ;Config register CONFIG2 @ 0x8008
  4096                           ;	Master Clear Enable bit
  4097                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4098                           ;	Power-up Timer Selection bits
  4099                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4100                           ;	WDT Operating Mode bits
  4101                           ;	WDTE = ON, WDT enabled regardless of Sleep; SEN bit is ignored
  4102                           ;	Brown-out Reset Enable bits
  4103                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit is ignored
  4104                           ;	DAC Buffer Automatic Range Select Enable bit
  4105                           ;	DACAUTOEN = OFF, DAC Buffer reference range is determined by the REFRNG bit
  4106                           ;	Brown-out Reset Voltage Selection bit
  4107                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4108                           ;	ZCD Disable bit
  4109                           ;	ZCD = OFF, ZCD module is disabled; ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4110                           ;	PPSLOCKED One-Way Set Enable bit
  4111                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once after an unlocking se
      +                          quence is executed; once PPSLOCKED is set, all future changes to PPS registers are preve
      +                          nted
  4112                           ;	Stack Overflow/Underflow Reset Enable bit
  4113                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4114     8008                     	org	32776
  4115     8008  3FFF               	dw	16383
  4116                           
  4117                           ;Config register CONFIG3 @ 0x8009
  4118                           ;	unspecified, using default values
  4119     8009                     	org	32777
  4120     8009  3FFF               	dw	16383
  4121                           
  4122                           ;Config register CONFIG4 @ 0x800A
  4123                           ;	Boot Block Size Selection bits
  4124                           ;	BBSIZE = BB512, 512 words boot block size
  4125                           ;	Boot Block Enable bit
  4126                           ;	BBEN = OFF, Boot Block disabled
  4127                           ;	Storage Area Flash (SAF) Enable bit
  4128                           ;	SAFEN = OFF, SAF disabled
  4129                           ;	Application Block Write Protection bit
  4130                           ;	WRTAPP = OFF, Application Block is NOT write protected
  4131                           ;	Boot Block Write Protection bit
  4132                           ;	WRTB = OFF, Boot Block is NOT write protected
  4133                           ;	Configuration Register Write Protection bit
  4134                           ;	WRTC = OFF, Configuration Register is NOT write protected
  4135                           ;	Data EEPROM Write-Protection bit
  4136                           ;	WRTD = OFF, Data EEPROM is NOT write-protected
  4137                           ;	Storage Area Flash (SAF) Write Protection bit
  4138                           ;	WRTSAF = OFF, SAF is NOT write protected
  4139                           ;	Low Voltage Programming Enable bit
  4140                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored
  4141     800A                     	org	32778
  4142     800A  3FFF               	dw	16383
  4143                           
  4144                           ;Config register CONFIG5 @ 0x800B
  4145                           ;	Program Flash Memory Code Protection bit
  4146                           ;	CP = OFF, Program Flash Memory code protection is disabled
  4147                           ;	Data EEPROM Code Protection bit
  4148                           ;	CPD = OFF, EEPROM code protection is disabled
  4149     800B                     	org	32779
  4150     800B  3FFF               	dw	16383

Data Sizes:
    Strings     98
    Constant    16
    Data        0
    BSS         81
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     47      47
    BANK1            80      0      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    AT_command@at_command	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[11]), STR_13(CODE[12]), STR_1(CODE[11]), 

    AT_command_check@expected_response	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_18(CODE[22]), STR_10(CODE[22]), STR_5(CODE[8]), 

    AT_command_check@at_command	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_17(CODE[8]), STR_9(CODE[8]), STR_4(CODE[3]), 

    EUSART_clear_buffer@buffer	PTR unsigned char  size(1) Largest target is 80
		 -> RX_buffer(BANK1[80]), 

    EUSART_print@string	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_17(CODE[8]), STR_14(CODE[11]), STR_13(CODE[12]), STR_12(CODE[11]), 
		 -> STR_11(CODE[12]), STR_9(CODE[8]), STR_6(CODE[11]), STR_4(CODE[3]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_AT_command_check
    _LoRa_setup->_AT_command_check
    _AT_command_check->_EUSART_print
    _AT_command->_EUSART_print
    _LoRa_send_data->_EUSART_print
    _EUSART_print_hex->_EUSART_write
    _EUSART_print->_EUSART_write
    _Analog_read_percent->___fltol
    ___flmul->__Umul8_16

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Analog_read_percent
    _LoRa_setup->_AT_command_check
    _Analog_read_percent->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   12227
                                             43 BANK0      4     4      0
                         _AT_command
                   _AT_command_check
                _Analog_read_percent
                       _Analog_setup
                _EUSART_clear_buffer
                       _EUSART_setup
                     _LoRa_send_data
                         _LoRa_setup
                        _SLEEP_start
                          _WDT_setup
 ---------------------------------------------------------------------------------
 (1) _WDT_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SLEEP_start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRa_setup                                           2     2      0    3614
                                              5 BANK0      2     2      0
                         _AT_command
                   _AT_command_check
                       _EUSART_print
 ---------------------------------------------------------------------------------
 (2) _AT_command_check                                    10     5      5    2060
                                              8 COMMON     4     4      0
                                              0 BANK0      5     0      5
                _EUSART_clear_buffer
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_clear_buffer                                  4     3      1     382
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _AT_command                                           3     1      2     943
                                              8 COMMON     3     1      2
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (1) _LoRa_send_data                                       6     1      5    1228
                                              8 COMMON     1     1      0
                                              0 BANK0      5     0      5
                       _EUSART_print
                   _EUSART_print_hex
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_print_hex                                     3     3      0     161
                                              2 COMMON     3     3      0
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_print                                         6     4      2     611
                                              2 COMMON     6     4      2
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Analog_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Analog_read_percent                                  3     3      0    3926
                                             40 BANK0      3     3      0
                    _Analog_read_raw
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             10 COMMON     2     2      0
                                             32 BANK0      8     4      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _Analog_read_raw                                      2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AT_command
     _EUSART_print
       _EUSART_write
     _EUSART_write
   _AT_command_check
     _EUSART_clear_buffer
     _EUSART_print
     _EUSART_write
   _Analog_read_percent
     _Analog_read_raw
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Analog_setup
   _EUSART_clear_buffer
   _EUSART_setup
   _LoRa_send_data
     _EUSART_print
     _EUSART_print_hex
       _EUSART_write
     _EUSART_write
   _LoRa_setup
     _AT_command
     _AT_command_check
     _EUSART_print
   _SLEEP_start
   _WDT_setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2F      2F       6       58.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 19 09:09:20 2024

                               l82 0663                                 l91 0641  
                               l85 05E5                                 l79 065D  
                               l88 0639                __Umul8_16@word_mpld 0077  
                              l103 0561                                l111 0585  
                              l202 05D1                                l117 05BD  
                              l170 0616                                l164 05F2  
                              l167 060E                                l191 0416  
                              l183 04B1                                l176 04E8  
                              l186 0515                                l198 0467  
                              l820 02D1                                l574 03F1  
                              l814 0298                                l567 0406  
                              l816 031F                                l577 0406  
                              l770 0274                                l827 02EB  
                              l828 02F7                                l782 0268  
                              l791 05A8                                l776 01F4  
                              l789 0598                                _ISR 0004  
                              u800 05A4                                u801 05A3  
                              u820 0612                                u900 03D0  
                              u821 0611                                u901 03CF  
                              u920 03E0                                u921 03DF  
                              u930 03E7                                u931 03E6  
                              u915 03D2                                u780 0594  
                              u781 0593                                u950 03F6  
                              u870 03A0                                u951 03F5  
                              u871 039F                                u960 03FB  
                              u880 03B6                                u961 03FA  
                              u945 03E9                                u970 0044  
                              u890 03C9                                u795 0599  
                              u971 0043                                u891 03C8  
                              u980 004A                                u981 0049  
                              u885 03B2                                u990 004F  
                              u991 004E                                wreg 0009  
                     ___flmul@aexp 0038                       ___flmul@bexp 0039  
                     ___flmul@sign 0033                       ___flmul@temp 003E  
                     ___flmul@prod 003A                        main@battery 004D  
                             ?_ISR 0070             LoRa_send_data@humidity 0022  
                     _BAUD2CONbits 061C                       ___fltol@exp1 007B  
                             l1411 0590                   ?_Analog_read_raw 0071  
                             l1413 0594                               l1431 0612  
                             l1415 059F                               l1407 0587  
                             l1511 003A                               l1417 05A4  
                             l1409 0589                               l1601 01C8  
                             l1521 004A                               l1513 003E  
                             l1505 03E8                               l1611 01D9  
                             l1603 01C9                               l1531 0066  
                             l1523 004F                               l1515 0040  
                             l1507 03F6                               l1429 060B  
                             l1621 01FE                               l1613 01DD  
                             l1605 01D0                               l1541 0077  
                             l1533 0068                               l1525 0057  
                             l1517 0044                               l1509 03FB  
                             l1701 05D9                               l1631 0233  
                             l1623 0206                               l1615 01F1  
                             l1607 01D4                               l1551 0093  
                             l1543 007F                               l1535 006C  
                             l1527 0059                               l1519 0045  
                             l1711 05E4                               l1703 05DB  
                             l1641 0261                               l1633 023D  
                             l1625 020A                               l1609 01D8  
                             l1561 00CC                               l1545 0081  
                             l1537 006D                               l1529 0061  
                             l1481 03A9                               l1721 04B2  
                             l1713 05E6                               l1705 05DC  
                             l1643 0265                               l1635 024B  
                             l1627 0222                               l1619 01F9  
                             l1571 0112                               l1563 00D9  
                             l1555 009C                               l1547 0089  
                             l1539 0072                               l1491 03C9  
                             l1483 03BA                               l1475 0396  
                             l1651 0277                               l1723 04BA  
                             l1715 05EA                               l1707 05DF  
                             l1645 0266                               l1637 0254  
                             l1629 0226                               l1581 0148  
                             l1573 011D                               l1565 00F1  
                             l1557 00A7                               l1549 008E  
                             l1485 03BB                               l1477 03A0  
                             l1653 027C                               l1725 04E7  
                             l1717 05ED                               l1709 05E2  
                             l1901 045F                               l1647 026C  
                             l1639 0256                               l1591 0193  
                             l1583 014F                               l1575 0124  
                             l1567 00FE                               l1559 00B4  
                             l1487 03C3                               l1671 02C2  
                             l1663 02A9                               l1655 0280  
                             l1719 05EE                               l1903 0466  
                             l1911 0482                               l1593 01AA  
                             l1585 0161                               l1577 012F  
                             l1569 010B                               l1497 03D1  
                             l1489 03C5                               l1681 02EF  
                             l1673 02CA                               l1665 02AC  
                             l1657 0290                               l1841 063E  
                             l1921 0509                               l1913 048A  
                             l1595 01B1                               l1587 016C  
                             l1579 0136                               l1499 03E1  
                             l1691 0317                               l1683 02F9  
                             l1675 02D8                               l1667 02B7  
                             l1659 02A0                               l1843 053C  
                             l1923 050D                               l1851 05AA  
                             l1915 0497                               l1907 0468  
                             l1597 01BD                               l1589 017E  
                             l1685 030D                               l1677 02E1  
                             l1669 02BE                               l1845 053E  
                             l1861 056C                               l1853 05AC  
                             l1917 04AA                               l1909 046F  
                             l1941 032F                               l1933 0320  
                             l1599 01C4                               l1687 0312  
                             l1679 02E5                               l1839 0639  
                             l1847 054D                               l1863 0577  
                             l1919 04E9                               l1871 05C9  
                             l1855 05B3                               l1695 0658  
                             l1951 0346                               l1943 0332  
                             l1935 0322                               l1689 0316  
                             l1849 0551                               l1865 057A  
                             l1857 05B7                               l1881 041B  
                             l1873 0407                               l1697 0661  
                             l1961 035A                               l1953 0349  
                             l1945 0334                               l1937 0326  
                             l1699 05D2                               l1859 0563  
                             l1867 05BE                               l1891 0440  
                             l1883 0423                               l1875 040D  
                             l1971 037C                               l1963 035F  
                             l1955 034B                               l1947 0341  
                             l1939 0329                               l1869 05C5  
                             l1893 0442                               l1885 0427  
                             l1877 040F                               l1973 037F  
                             l1965 0360                               l1957 0352  
                             l1949 0344                               l1895 0459  
                             l1887 043A                               l1879 0411  
                             l1975 0381                               l1967 0367  
                             l1959 0355                               l1889 043E  
                             l1977 0386                               l1969 037A  
                             l1899 045B                               STR_1 0617  
                             STR_2 065E                               STR_3 0642  
                             STR_4 065E                               STR_5 0642  
                             STR_6 062D                               STR_7 064A  
                             STR_8 0526                               STR_9 064A  
                             u1000 006C                               u1001 006B  
                             u1010 0072                               u1011 0071  
                             u1020 0077                               u1021 0076  
                             u1110 01C8                               u1030 008E  
                             u1111 01C7                               u1031 008D  
                             u1200 0233                               u1040 0093  
                             u1201 0232                               u1105 01BE  
                             u1041 0092                               u1210 024B  
                             u1130 01D8                               u1211 024A  
                             u1131 01D7                               u1220 0265  
                             u1140 01DD                               u1221 0264  
                             u1205 022F                               u1141 01DC  
                             u1125 01CA                               u1150 01F1  
                             u1070 0189                               u1310 02E5  
                             u1230 027C                               u1215 0247  
                             u1151 01F0                               u1055 010C  
                             u1311 02E4                               u1231 027B  
                             u1160 01F8                               u1080 01A0  
                             u1320 02EB                               u1240 0280  
                             u1161 01F7                               u1065 0137  
                             u1321 02EA                               u1305 02DB  
                             u1241 027F                               u1170 01FE  
                             u1330 02EF                               u1250 02A0  
                             u1171 01FD                               u1075 0185  
                             u1331 02EE                               u1251 029F  
                             u1180 020A                               u1340 0303  
                             u1500 043A                               u1181 0209  
                             u1085 019C                               u1501 0439  
                             u1190 0218                               u1350 0312  
                             u1270 02BD                               u1510 0459  
                             u1095 01AB                               u1351 0311  
                             u1271 02BC                               u1511 0458  
                             u1360 0316                               u1520 0466  
                             u1361 0315                               u1345 02FF  
                             u1265 02B1                               u1521 0465  
                             u1505 0436                               u1290 02D7  
                             u1450 063E                               u1530 0482  
                             u1195 0214                               u1291 02D6  
                             u1451 063D                               u1531 0481  
                             u1460 0561                               u1540 04AA  
                             u1285 02CB                               u1461 0560  
                             u1541 04A9                               u1470 05BD  
                             u1550 035F                               u1607 05CC  
                             u1471 05BC                               u1551 035E  
                             u1560 037A                               u1617 0510  
                             u1561 0379                               u1490 0416  
                             u1491 0415                               u1485 0566  
                             u1577 033A                               u1587 0490  
                             u1597 043B                               _main 0320  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                   ??_LoRa_send_data 0078  
                             start 002B           __end_of_AT_command_check 0468  
               EUSART_write@txData 0071        __end_of_Analog_read_percent 04E9  
                      ?_AT_command 0078                              ??_ISR 0070  
                    ___fltol@sign1 007A                              ?_main 0070  
                            _ADPCH 1D1F                              _ADREF 1D2B  
                            _ADRES 1D1D                              STR_10 0526  
                            STR_11 05F3                              STR_12 0622  
                            STR_13 05FF                              STR_14 0617  
                            STR_17 064A                              STR_18 0526  
                  __end_of___flmul 0275                      ?_EUSART_setup 0070  
                    ?_EUSART_print 0072                    __end_of___fltol 0407  
                    ?_EUSART_write 0070                              i1l211 0029  
                            i1l209 0023                              _PORTA 000C  
                            _TRISA 0012                         _LoRa_setup 0468  
        EUSART_clear_buffer@buffer 0073                              status 0003  
                            wtemp0 007E         AT_command_check@at_command 0020  
      __end_ofEUSART_print_hex@ref 0526            EUSART_clear_buffer@size 0071  
                  __initialization 002D           __end_of_EUSART_print_hex 0586  
                     __end_of_main 0396                     ??_EUSART_setup 0071  
                   ??_EUSART_print 0074                     ??_EUSART_write 0071  
                           ??_main 004B               Analog_read_percent@a 0048  
                     ?_SLEEP_start 0070               Analog_read_percent@r 004A  
                           _ANSELA 1E8C                             _RA1PPS 1D8D  
                           _RA2PPS 1D8E                             _RC2REG 0616  
                           _RA5PPS 1D91                             i1l1781 000B  
                           i1l1791 0027                             i1l1783 0011  
                           i1l1785 0018                             i1l1787 001C  
                           i1l1779 0006                             i1l1789 0021  
                           u140_20 0011                             u140_21 0010  
                           u141_20 0021                             u141_21 0020  
                           u142_20 0027                             u142_21 0026  
                           u139_20 000B                             u139_21 000A  
                           _RX2PPS 1E43                             _TX2REG 0617  
                 __end_of___xxtofl 0320                          ??___flmul 002E  
                        ??___fltol 0044                       _Analog_setup 05E6  
                __end_of_WDT_setup 065E                        ?_LoRa_setup 0070  
                     ___xxtofl@arg 0022                       ___xxtofl@exp 0021  
                     ___xxtofl@val 0071            __end_of__initialization 0036  
                       ___fltol@f1 0040                     __pcstackCOMMON 0070  
                       __pbssBANK1 00A0               __end_of_EUSART_setup 05E6  
             __end_of_EUSART_print 0562               __end_of_EUSART_write 0642  
                __end_of__Umul8_16 05A9                  ?_AT_command_check 0020  
                     ??_AT_command 007A                         __pmaintext 0320  
               ??_AT_command_check 0078                         __pintentry 0004  
                        ?___xxtofl 0071                            _SP2BRGH 0619  
                          _SP2BRGL 0618                            _SSP1ADD 068D  
                          _SSP1BUF 068C                 __end_of_AT_command 05D2  
                ?_EUSART_print_hex 0070                            ___flmul 003A  
                          ___fltol 0396                 ??_EUSART_print_hex 0072  
                          __ptext1 0658                            __ptext2 0661  
                          __ptext3 0468                            __ptext4 0407  
                          __ptext5 05A9                            __ptext6 05BE  
                          __ptext7 04E9                            __ptext8 0562  
                          __ptext9 053C                         ??___xxtofl 0075  
                          clrloop0 0653               end_of_initialization 0036  
                    EUSART_print@c 0077                      ___xxtofl@sign 0020  
                        _TRISAbits 0012                  main@sleep_counter 004E  
AT_command_check@expected_response 0022                       ??_LoRa_setup 0025  
            LoRa_send_data@battery 0024               AT_command@at_command 0078  
                        _WDT_setup 0658                        ___flmul@grs 0034  
                ??_Analog_read_raw 0073                 __end_of_LoRa_setup 04B2  
                        _RX_buffer 00A0                       _EUSART_setup 05D2  
                     _EUSART_print 053C                       _EUSART_write 0638  
              start_initialization 002D                        __end_of_ISR 002B  
              _EUSART_clear_buffer 05A9                         ?_WDT_setup 0070  
                        __Umul8_16 0586               ?_EUSART_clear_buffer 0071  
                AT_command_check@i 007B                          ___flmul@a 002A  
                        ___flmul@b 0026                        __pbssCOMMON 007C  
                        ___latbits 0002                      __pcstackBANK0 0020  
              _Analog_read_percent 04B2                           ?___flmul 0026  
                         ?___fltol 0040                         ?__Umul8_16 0071  
            ??_EUSART_clear_buffer 0072               ?_Analog_read_percent 0070  
                   _LoRa_send_data 04E9                      ??_SLEEP_start 0071  
           EUSART_print_hex@number 0073                        ??_WDT_setup 0071  
              EUSART_print_hex@ref 0516                          clear_ram0 0652  
                         _PIE3bits 0099                           _PIR3bits 008F  
                         _SSP1CON2 0691             __end_of_LoRa_send_data 0516  
                         _SSP1STAT 068F              ??_Analog_read_percent 007C  
                       _ADCON0bits 1D26                      ?_Analog_setup 0070  
                         _RX_index 007C                __end_of_SLEEP_start 0664  
                  _Analog_read_raw 060B                    ?_LoRa_send_data 0020  
                      ??__Umul8_16 0073                     ??_Analog_setup 0071  
                 _AT_command_check 0407                           ___xxtofl 0275  
               EUSART_print@string 0072                           __ptext10 0638  
                         __ptext11 05D2                           __ptext12 05E6  
                         __ptext13 04B2                           __ptext14 0275  
                         __ptext15 0396                           __ptext16 003A  
                         __ptext17 0586                           __ptext18 060B  
                     _SSP1CON1bits 0690                       _SSP1CON2bits 0691  
                       _RC2STAbits 061A                           int$flags 007E  
                       _ODCONAbits 1E8E                       _SSP1STATbits 068F  
    AT_command_check@response_size 0024               EUSART_clear_buffer@i 0074  
                       _INTCONbits 000B                        _SLEEP_start 0661  
                   __pstringtext10 0000                   _EUSART_print_hex 0562  
          __end_of_Analog_read_raw 0617                           intlevel1 0000  
                EUSART_print_hex@a 0074                         _AT_command 05BE  
                    __pstringtext1 0516                      __pstringtext2 05F3  
                    __pstringtext3 05FF                      __pstringtext4 0617  
                    __pstringtext5 0622                      __pstringtext6 062D  
                    __pstringtext7 0642                      __pstringtext8 064A  
                    __pstringtext9 065E             __Umul8_16@multiplicand 0071  
                       _SSP1DATPPS 1E48                         _SSP1CLKPPS 1E47  
                       _WDTCONbits 018C                         _TX2STAbits 061B  
             __Umul8_16@multiplier 0079               __end_of_Analog_setup 05F3  
      __end_of_EUSART_clear_buffer 05BE          LoRa_send_data@temperature 0020  
                __Umul8_16@product 0075  
