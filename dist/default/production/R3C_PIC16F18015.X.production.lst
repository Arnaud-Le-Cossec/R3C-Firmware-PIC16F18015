

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 19 11:26:42 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18015
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 19/10/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F18015 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     0012                     	;# 
    94     0018                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     008F                     	;# 
    99     0090                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     018E                     	;# 
   108     018F                     	;# 
   109     019C                     	;# 
   110     019C                     	;# 
   111     019D                     	;# 
   112     019D                     	;# 
   113     019E                     	;# 
   114     019F                     	;# 
   115     020E                     	;# 
   116     020F                     	;# 
   117     0210                     	;# 
   118     0211                     	;# 
   119     0212                     	;# 
   120     0213                     	;# 
   121     0214                     	;# 
   122     028C                     	;# 
   123     028C                     	;# 
   124     028D                     	;# 
   125     028E                     	;# 
   126     028F                     	;# 
   127     028F                     	;# 
   128     0290                     	;# 
   129     0290                     	;# 
   130     0291                     	;# 
   131     0291                     	;# 
   132     0292                     	;# 
   133     0292                     	;# 
   134     0293                     	;# 
   135     0294                     	;# 
   136     0295                     	;# 
   137     0295                     	;# 
   138     0296                     	;# 
   139     0296                     	;# 
   140     0297                     	;# 
   141     0297                     	;# 
   142     030C                     	;# 
   143     030C                     	;# 
   144     030D                     	;# 
   145     030D                     	;# 
   146     030E                     	;# 
   147     030F                     	;# 
   148     0310                     	;# 
   149     0310                     	;# 
   150     0311                     	;# 
   151     0312                     	;# 
   152     0312                     	;# 
   153     0313                     	;# 
   154     0313                     	;# 
   155     0314                     	;# 
   156     0315                     	;# 
   157     0316                     	;# 
   158     0316                     	;# 
   159     0317                     	;# 
   160     0318                     	;# 
   161     0318                     	;# 
   162     0319                     	;# 
   163     0319                     	;# 
   164     031A                     	;# 
   165     031B                     	;# 
   166     031C                     	;# 
   167     031C                     	;# 
   168     031D                     	;# 
   169     038C                     	;# 
   170     038C                     	;# 
   171     038D                     	;# 
   172     038E                     	;# 
   173     038F                     	;# 
   174     0390                     	;# 
   175     0390                     	;# 
   176     0391                     	;# 
   177     0392                     	;# 
   178     0393                     	;# 
   179     039F                     	;# 
   180     040C                     	;# 
   181     040C                     	;# 
   182     040D                     	;# 
   183     040E                     	;# 
   184     040F                     	;# 
   185     040F                     	;# 
   186     0410                     	;# 
   187     0411                     	;# 
   188     0412                     	;# 
   189     0412                     	;# 
   190     0413                     	;# 
   191     0414                     	;# 
   192     041F                     	;# 
   193     048C                     	;# 
   194     048C                     	;# 
   195     048D                     	;# 
   196     048E                     	;# 
   197     048F                     	;# 
   198     048F                     	;# 
   199     0490                     	;# 
   200     0491                     	;# 
   201     0492                     	;# 
   202     0493                     	;# 
   203     050C                     	;# 
   204     050C                     	;# 
   205     050D                     	;# 
   206     050D                     	;# 
   207     050E                     	;# 
   208     050F                     	;# 
   209     0510                     	;# 
   210     0511                     	;# 
   211     0512                     	;# 
   212     0513                     	;# 
   213     0514                     	;# 
   214     058C                     	;# 
   215     058D                     	;# 
   216     058E                     	;# 
   217     058F                     	;# 
   218     0590                     	;# 
   219     0591                     	;# 
   220     0592                     	;# 
   221     0593                     	;# 
   222     0594                     	;# 
   223     0595                     	;# 
   224     0596                     	;# 
   225     0597                     	;# 
   226     060C                     	;# 
   227     060D                     	;# 
   228     060E                     	;# 
   229     060E                     	;# 
   230     060F                     	;# 
   231     0610                     	;# 
   232     0611                     	;# 
   233     0612                     	;# 
   234     0616                     	;# 
   235     0617                     	;# 
   236     0618                     	;# 
   237     0618                     	;# 
   238     0619                     	;# 
   239     061A                     	;# 
   240     061B                     	;# 
   241     061C                     	;# 
   242     068C                     	;# 
   243     068D                     	;# 
   244     068E                     	;# 
   245     068F                     	;# 
   246     0690                     	;# 
   247     0691                     	;# 
   248     0692                     	;# 
   249     0696                     	;# 
   250     0697                     	;# 
   251     0698                     	;# 
   252     0699                     	;# 
   253     069A                     	;# 
   254     069B                     	;# 
   255     069C                     	;# 
   256     100C                     	;# 
   257     100D                     	;# 
   258     101F                     	;# 
   259     108C                     	;# 
   260     108D                     	;# 
   261     108E                     	;# 
   262     108F                     	;# 
   263     109F                     	;# 
   264     109F                     	;# 
   265     110C                     	;# 
   266     110D                     	;# 
   267     1C8C                     	;# 
   268     1C8C                     	;# 
   269     1C8D                     	;# 
   270     1C8E                     	;# 
   271     1C8E                     	;# 
   272     1C8F                     	;# 
   273     1C90                     	;# 
   274     1C91                     	;# 
   275     1D0C                     	;# 
   276     1D0C                     	;# 
   277     1D0D                     	;# 
   278     1D0E                     	;# 
   279     1D0E                     	;# 
   280     1D0F                     	;# 
   281     1D10                     	;# 
   282     1D10                     	;# 
   283     1D11                     	;# 
   284     1D12                     	;# 
   285     1D12                     	;# 
   286     1D13                     	;# 
   287     1D14                     	;# 
   288     1D14                     	;# 
   289     1D15                     	;# 
   290     1D16                     	;# 
   291     1D16                     	;# 
   292     1D17                     	;# 
   293     1D18                     	;# 
   294     1D19                     	;# 
   295     1D1A                     	;# 
   296     1D1B                     	;# 
   297     1D1B                     	;# 
   298     1D1C                     	;# 
   299     1D1D                     	;# 
   300     1D1D                     	;# 
   301     1D1E                     	;# 
   302     1D1F                     	;# 
   303     1D21                     	;# 
   304     1D21                     	;# 
   305     1D22                     	;# 
   306     1D23                     	;# 
   307     1D24                     	;# 
   308     1D24                     	;# 
   309     1D25                     	;# 
   310     1D26                     	;# 
   311     1D27                     	;# 
   312     1D28                     	;# 
   313     1D29                     	;# 
   314     1D2A                     	;# 
   315     1D2B                     	;# 
   316     1D2C                     	;# 
   317     1D2D                     	;# 
   318     1D2E                     	;# 
   319     1D8C                     	;# 
   320     1D8D                     	;# 
   321     1D8E                     	;# 
   322     1D90                     	;# 
   323     1D91                     	;# 
   324     1E0C                     	;# 
   325     1E0D                     	;# 
   326     1E0E                     	;# 
   327     1E0F                     	;# 
   328     1E10                     	;# 
   329     1E11                     	;# 
   330     1E12                     	;# 
   331     1E19                     	;# 
   332     1E1A                     	;# 
   333     1E1B                     	;# 
   334     1E1E                     	;# 
   335     1E1F                     	;# 
   336     1E39                     	;# 
   337     1E3D                     	;# 
   338     1E3E                     	;# 
   339     1E3F                     	;# 
   340     1E40                     	;# 
   341     1E41                     	;# 
   342     1E41                     	;# 
   343     1E42                     	;# 
   344     1E42                     	;# 
   345     1E43                     	;# 
   346     1E43                     	;# 
   347     1E44                     	;# 
   348     1E44                     	;# 
   349     1E47                     	;# 
   350     1E48                     	;# 
   351     1E49                     	;# 
   352     1E4A                     	;# 
   353     1E4B                     	;# 
   354     1E4C                     	;# 
   355     1E50                     	;# 
   356     1E8C                     	;# 
   357     1E8D                     	;# 
   358     1E8E                     	;# 
   359     1E8F                     	;# 
   360     1E90                     	;# 
   361     1E91                     	;# 
   362     1E92                     	;# 
   363     1E93                     	;# 
   364     1EE1                     	;# 
   365     1EE2                     	;# 
   366     1F0C                     	;# 
   367     1F0D                     	;# 
   368     1F0E                     	;# 
   369     1FE4                     	;# 
   370     1FE5                     	;# 
   371     1FE6                     	;# 
   372     1FE7                     	;# 
   373     1FE8                     	;# 
   374     1FE8                     	;# 
   375     1FE9                     	;# 
   376     1FEA                     	;# 
   377     1FEA                     	;# 
   378     1FEB                     	;# 
   379     1FED                     	;# 
   380     1FEE                     	;# 
   381     1FEF                     	;# 
   382     0000                     	;# 
   383     0001                     	;# 
   384     0002                     	;# 
   385     0003                     	;# 
   386     0004                     	;# 
   387     0005                     	;# 
   388     0006                     	;# 
   389     0007                     	;# 
   390     0008                     	;# 
   391     0009                     	;# 
   392     000A                     	;# 
   393     000B                     	;# 
   394     000C                     	;# 
   395     0012                     	;# 
   396     0018                     	;# 
   397     008C                     	;# 
   398     008D                     	;# 
   399     008E                     	;# 
   400     008F                     	;# 
   401     0090                     	;# 
   402     0096                     	;# 
   403     0097                     	;# 
   404     0098                     	;# 
   405     0099                     	;# 
   406     009A                     	;# 
   407     018C                     	;# 
   408     018D                     	;# 
   409     018E                     	;# 
   410     018F                     	;# 
   411     019C                     	;# 
   412     019C                     	;# 
   413     019D                     	;# 
   414     019D                     	;# 
   415     019E                     	;# 
   416     019F                     	;# 
   417     020E                     	;# 
   418     020F                     	;# 
   419     0210                     	;# 
   420     0211                     	;# 
   421     0212                     	;# 
   422     0213                     	;# 
   423     0214                     	;# 
   424     028C                     	;# 
   425     028C                     	;# 
   426     028D                     	;# 
   427     028E                     	;# 
   428     028F                     	;# 
   429     028F                     	;# 
   430     0290                     	;# 
   431     0290                     	;# 
   432     0291                     	;# 
   433     0291                     	;# 
   434     0292                     	;# 
   435     0292                     	;# 
   436     0293                     	;# 
   437     0294                     	;# 
   438     0295                     	;# 
   439     0295                     	;# 
   440     0296                     	;# 
   441     0296                     	;# 
   442     0297                     	;# 
   443     0297                     	;# 
   444     030C                     	;# 
   445     030C                     	;# 
   446     030D                     	;# 
   447     030D                     	;# 
   448     030E                     	;# 
   449     030F                     	;# 
   450     0310                     	;# 
   451     0310                     	;# 
   452     0311                     	;# 
   453     0312                     	;# 
   454     0312                     	;# 
   455     0313                     	;# 
   456     0313                     	;# 
   457     0314                     	;# 
   458     0315                     	;# 
   459     0316                     	;# 
   460     0316                     	;# 
   461     0317                     	;# 
   462     0318                     	;# 
   463     0318                     	;# 
   464     0319                     	;# 
   465     0319                     	;# 
   466     031A                     	;# 
   467     031B                     	;# 
   468     031C                     	;# 
   469     031C                     	;# 
   470     031D                     	;# 
   471     038C                     	;# 
   472     038C                     	;# 
   473     038D                     	;# 
   474     038E                     	;# 
   475     038F                     	;# 
   476     0390                     	;# 
   477     0390                     	;# 
   478     0391                     	;# 
   479     0392                     	;# 
   480     0393                     	;# 
   481     039F                     	;# 
   482     040C                     	;# 
   483     040C                     	;# 
   484     040D                     	;# 
   485     040E                     	;# 
   486     040F                     	;# 
   487     040F                     	;# 
   488     0410                     	;# 
   489     0411                     	;# 
   490     0412                     	;# 
   491     0412                     	;# 
   492     0413                     	;# 
   493     0414                     	;# 
   494     041F                     	;# 
   495     048C                     	;# 
   496     048C                     	;# 
   497     048D                     	;# 
   498     048E                     	;# 
   499     048F                     	;# 
   500     048F                     	;# 
   501     0490                     	;# 
   502     0491                     	;# 
   503     0492                     	;# 
   504     0493                     	;# 
   505     050C                     	;# 
   506     050C                     	;# 
   507     050D                     	;# 
   508     050D                     	;# 
   509     050E                     	;# 
   510     050F                     	;# 
   511     0510                     	;# 
   512     0511                     	;# 
   513     0512                     	;# 
   514     0513                     	;# 
   515     0514                     	;# 
   516     058C                     	;# 
   517     058D                     	;# 
   518     058E                     	;# 
   519     058F                     	;# 
   520     0590                     	;# 
   521     0591                     	;# 
   522     0592                     	;# 
   523     0593                     	;# 
   524     0594                     	;# 
   525     0595                     	;# 
   526     0596                     	;# 
   527     0597                     	;# 
   528     060C                     	;# 
   529     060D                     	;# 
   530     060E                     	;# 
   531     060E                     	;# 
   532     060F                     	;# 
   533     0610                     	;# 
   534     0611                     	;# 
   535     0612                     	;# 
   536     0616                     	;# 
   537     0617                     	;# 
   538     0618                     	;# 
   539     0618                     	;# 
   540     0619                     	;# 
   541     061A                     	;# 
   542     061B                     	;# 
   543     061C                     	;# 
   544     068C                     	;# 
   545     068D                     	;# 
   546     068E                     	;# 
   547     068F                     	;# 
   548     0690                     	;# 
   549     0691                     	;# 
   550     0692                     	;# 
   551     0696                     	;# 
   552     0697                     	;# 
   553     0698                     	;# 
   554     0699                     	;# 
   555     069A                     	;# 
   556     069B                     	;# 
   557     069C                     	;# 
   558     100C                     	;# 
   559     100D                     	;# 
   560     101F                     	;# 
   561     108C                     	;# 
   562     108D                     	;# 
   563     108E                     	;# 
   564     108F                     	;# 
   565     109F                     	;# 
   566     109F                     	;# 
   567     110C                     	;# 
   568     110D                     	;# 
   569     1C8C                     	;# 
   570     1C8C                     	;# 
   571     1C8D                     	;# 
   572     1C8E                     	;# 
   573     1C8E                     	;# 
   574     1C8F                     	;# 
   575     1C90                     	;# 
   576     1C91                     	;# 
   577     1D0C                     	;# 
   578     1D0C                     	;# 
   579     1D0D                     	;# 
   580     1D0E                     	;# 
   581     1D0E                     	;# 
   582     1D0F                     	;# 
   583     1D10                     	;# 
   584     1D10                     	;# 
   585     1D11                     	;# 
   586     1D12                     	;# 
   587     1D12                     	;# 
   588     1D13                     	;# 
   589     1D14                     	;# 
   590     1D14                     	;# 
   591     1D15                     	;# 
   592     1D16                     	;# 
   593     1D16                     	;# 
   594     1D17                     	;# 
   595     1D18                     	;# 
   596     1D19                     	;# 
   597     1D1A                     	;# 
   598     1D1B                     	;# 
   599     1D1B                     	;# 
   600     1D1C                     	;# 
   601     1D1D                     	;# 
   602     1D1D                     	;# 
   603     1D1E                     	;# 
   604     1D1F                     	;# 
   605     1D21                     	;# 
   606     1D21                     	;# 
   607     1D22                     	;# 
   608     1D23                     	;# 
   609     1D24                     	;# 
   610     1D24                     	;# 
   611     1D25                     	;# 
   612     1D26                     	;# 
   613     1D27                     	;# 
   614     1D28                     	;# 
   615     1D29                     	;# 
   616     1D2A                     	;# 
   617     1D2B                     	;# 
   618     1D2C                     	;# 
   619     1D2D                     	;# 
   620     1D2E                     	;# 
   621     1D8C                     	;# 
   622     1D8D                     	;# 
   623     1D8E                     	;# 
   624     1D90                     	;# 
   625     1D91                     	;# 
   626     1E0C                     	;# 
   627     1E0D                     	;# 
   628     1E0E                     	;# 
   629     1E0F                     	;# 
   630     1E10                     	;# 
   631     1E11                     	;# 
   632     1E12                     	;# 
   633     1E19                     	;# 
   634     1E1A                     	;# 
   635     1E1B                     	;# 
   636     1E1E                     	;# 
   637     1E1F                     	;# 
   638     1E39                     	;# 
   639     1E3D                     	;# 
   640     1E3E                     	;# 
   641     1E3F                     	;# 
   642     1E40                     	;# 
   643     1E41                     	;# 
   644     1E41                     	;# 
   645     1E42                     	;# 
   646     1E42                     	;# 
   647     1E43                     	;# 
   648     1E43                     	;# 
   649     1E44                     	;# 
   650     1E44                     	;# 
   651     1E47                     	;# 
   652     1E48                     	;# 
   653     1E49                     	;# 
   654     1E4A                     	;# 
   655     1E4B                     	;# 
   656     1E4C                     	;# 
   657     1E50                     	;# 
   658     1E8C                     	;# 
   659     1E8D                     	;# 
   660     1E8E                     	;# 
   661     1E8F                     	;# 
   662     1E90                     	;# 
   663     1E91                     	;# 
   664     1E92                     	;# 
   665     1E93                     	;# 
   666     1EE1                     	;# 
   667     1EE2                     	;# 
   668     1F0C                     	;# 
   669     1F0D                     	;# 
   670     1F0E                     	;# 
   671     1FE4                     	;# 
   672     1FE5                     	;# 
   673     1FE6                     	;# 
   674     1FE7                     	;# 
   675     1FE8                     	;# 
   676     1FE8                     	;# 
   677     1FE9                     	;# 
   678     1FEA                     	;# 
   679     1FEA                     	;# 
   680     1FEB                     	;# 
   681     1FED                     	;# 
   682     1FEE                     	;# 
   683     1FEF                     	;# 
   684                           
   685                           	psect	stringtext1
   686     0531                     __pstringtext1:
   687     0531                     EUSART_print_hex@ref:
   688     0531  3430               	retlw	48
   689     0532  3431               	retlw	49
   690     0533  3432               	retlw	50
   691     0534  3433               	retlw	51
   692     0535  3434               	retlw	52
   693     0536  3435               	retlw	53
   694     0537  3436               	retlw	54
   695     0538  3437               	retlw	55
   696     0539  3438               	retlw	56
   697     053A  3439               	retlw	57
   698     053B  3441               	retlw	65
   699     053C  3442               	retlw	66
   700     053D  3443               	retlw	67
   701     053E  3444               	retlw	68
   702     053F  3445               	retlw	69
   703     0540  3446               	retlw	70
   704     0541                     __end_ofEUSART_print_hex@ref:
   705     000C                     _PORTA	set	12
   706     000C                     _PORTAbits	set	12
   707     0012                     _TRISA	set	18
   708     000B                     _INTCONbits	set	11
   709     0012                     _TRISAbits	set	18
   710     0099                     _PIE3bits	set	153
   711     008F                     _PIR3bits	set	143
   712     018C                     _WDTCONbits	set	396
   713     0616                     _RC2REG	set	1558
   714     0617                     _TX2REG	set	1559
   715     0619                     _SP2BRGH	set	1561
   716     0618                     _SP2BRGL	set	1560
   717     061A                     _RC2STAbits	set	1562
   718     061B                     _TX2STAbits	set	1563
   719     061C                     _BAUD2CONbits	set	1564
   720     068C                     _SSP1BUF	set	1676
   721     068F                     _SSP1STAT	set	1679
   722     0692                     _SSP1CON3bits	set	1682
   723     0691                     _SSP1CON2bits	set	1681
   724     068D                     _SSP1ADD	set	1677
   725     0691                     _SSP1CON2	set	1681
   726     0690                     _SSP1CON1bits	set	1680
   727     068F                     _SSP1STATbits	set	1679
   728     1D1D                     _ADRES	set	7453
   729     1D26                     _ADCON0bits	set	7462
   730     1D2B                     _ADREF	set	7467
   731     1D1F                     _ADPCH	set	7455
   732     1D8E                     _RA2PPS	set	7566
   733     1D8D                     _RA1PPS	set	7565
   734     1D91                     _RA5PPS	set	7569
   735     1E48                     _SSP1DATPPS	set	7752
   736     1E47                     _SSP1CLKPPS	set	7751
   737     1E43                     _RX2PPS	set	7747
   738     1E8C                     _ANSELA	set	7820
   739     1E8E                     _ODCONAbits	set	7822
   740     0541                     STR_8:
   741     0541  342B               	retlw	43	;'+'
   742     0542  344A               	retlw	74	;'J'
   743     0543  344F               	retlw	79	;'O'
   744     0544  3449               	retlw	73	;'I'
   745     0545  344E               	retlw	78	;'N'
   746     0546  343A               	retlw	58	;':'
   747     0547  3420               	retlw	32	;' '
   748     0548  344A               	retlw	74	;'J'
   749     0549  346F               	retlw	111	;'o'
   750     054A  3469               	retlw	105	;'i'
   751     054B  346E               	retlw	110	;'n'
   752     054C  3465               	retlw	101	;'e'
   753     054D  3464               	retlw	100	;'d'
   754     054E  3420               	retlw	32	;' '
   755     054F  3461               	retlw	97	;'a'
   756     0550  346C               	retlw	108	;'l'
   757     0551  3472               	retlw	114	;'r'
   758     0552  3465               	retlw	101	;'e'
   759     0553  3461               	retlw	97	;'a'
   760     0554  3464               	retlw	100	;'d'
   761     0555  3479               	retlw	121	;'y'
   762     0556  3400               	retlw	0
   763                           
   764                           	psect	stringtext2
   765     0648                     __pstringtext2:
   766     0648                     STR_11:
   767     0648  3443               	retlw	67	;'C'
   768     0649  346F               	retlw	111	;'o'
   769     064A  346E               	retlw	110	;'n'
   770     064B  346E               	retlw	110	;'n'
   771     064C  3465               	retlw	101	;'e'
   772     064D  3463               	retlw	99	;'c'
   773     064E  3474               	retlw	116	;'t'
   774     064F  3465               	retlw	101	;'e'
   775     0650  3464               	retlw	100	;'d'
   776     0651  3420               	retlw	32	;' '
   777     0652  3421               	retlw	33	;'!'
   778     0653  3400               	retlw	0
   779                           
   780                           	psect	stringtext3
   781     0654                     __pstringtext3:
   782     0654                     STR_13:
   783     0654  3441               	retlw	65	;'A'
   784     0655  3454               	retlw	84	;'T'
   785     0656  342B               	retlw	43	;'+'
   786     0657  344C               	retlw	76	;'L'
   787     0658  344F               	retlw	79	;'O'
   788     0659  3457               	retlw	87	;'W'
   789     065A  3450               	retlw	80	;'P'
   790     065B  344F               	retlw	79	;'O'
   791     065C  3457               	retlw	87	;'W'
   792     065D  3445               	retlw	69	;'E'
   793     065E  3452               	retlw	82	;'R'
   794     065F  3400               	retlw	0
   795                           
   796                           	psect	stringtext4
   797     066C                     __pstringtext4:
   798     066C                     STR_1:
   799     066C  3457               	retlw	87	;'W'
   800     066D  3461               	retlw	97	;'a'
   801     066E  346B               	retlw	107	;'k'
   802     066F  3465               	retlw	101	;'e'
   803     0670  3420               	retlw	32	;' '
   804     0671  3475               	retlw	117	;'u'
   805     0672  3470               	retlw	112	;'p'
   806     0673  3420               	retlw	32	;' '
   807     0674  3421               	retlw	33	;'!'
   808     0675  3421               	retlw	33	;'!'
   809     0676  3400               	retlw	0
   810                           
   811                           	psect	stringtext5
   812     0677                     __pstringtext5:
   813     0677                     STR_12:
   814     0677  3441               	retlw	65	;'A'
   815     0678  3454               	retlw	84	;'T'
   816     0679  342B               	retlw	43	;'+'
   817     067A  344D               	retlw	77	;'M'
   818     067B  3453               	retlw	83	;'S'
   819     067C  3447               	retlw	71	;'G'
   820     067D  3448               	retlw	72	;'H'
   821     067E  3445               	retlw	69	;'E'
   822     067F  3458               	retlw	88	;'X'
   823     0680  343D               	retlw	61	;'='
   824     0681  3400               	retlw	0
   825                           
   826                           	psect	stringtext6
   827     0682                     __pstringtext6:
   828     0682                     STR_6:
   829     0682  3452               	retlw	82	;'R'
   830     0683  3458               	retlw	88	;'X'
   831     0684  342F               	retlw	47	;'/'
   832     0685  3454               	retlw	84	;'T'
   833     0686  3458               	retlw	88	;'X'
   834     0687  3420               	retlw	32	;' '
   835     0688  3446               	retlw	70	;'F'
   836     0689  3461               	retlw	97	;'a'
   837     068A  3469               	retlw	105	;'i'
   838     068B  346C               	retlw	108	;'l'
   839     068C  3400               	retlw	0
   840                           
   841                           	psect	stringtext7
   842     0697                     __pstringtext7:
   843     0697                     STR_3:
   844     0697  342B               	retlw	43	;'+'
   845     0698  3441               	retlw	65	;'A'
   846     0699  3454               	retlw	84	;'T'
   847     069A  343A               	retlw	58	;':'
   848     069B  3420               	retlw	32	;' '
   849     069C  344F               	retlw	79	;'O'
   850     069D  344B               	retlw	75	;'K'
   851     069E  3400               	retlw	0
   852                           
   853                           	psect	stringtext8
   854     069F                     __pstringtext8:
   855     069F                     STR_7:
   856     069F  3441               	retlw	65	;'A'
   857     06A0  3454               	retlw	84	;'T'
   858     06A1  342B               	retlw	43	;'+'
   859     06A2  344A               	retlw	74	;'J'
   860     06A3  344F               	retlw	79	;'O'
   861     06A4  3449               	retlw	73	;'I'
   862     06A5  344E               	retlw	78	;'N'
   863     06A6  3400               	retlw	0
   864                           
   865                           	psect	stringtext9
   866     06B3                     __pstringtext9:
   867     06B3                     STR_2:
   868     06B3  3441               	retlw	65	;'A'
   869     06B4  3454               	retlw	84	;'T'
   870     06B5  3400               	retlw	0
   871                           
   872                           	psect	stringtext10
   873     0000                     __pstringtext10:
   874     066C                     
   875                           	psect	cinit
   876     003A                     start_initialization:	
   877                           ; #config settings
   878                           
   879     003A                     __initialization:
   880                           
   881                           ; Clear objects allocated to COMMON
   882     003A  01FC               	clrf	__pbssCOMMON& (0+127)
   883                           
   884                           ; Clear objects allocated to BANK1
   885     003B  30A0               	movlw	low __pbssBANK1
   886     003C  0084               	movwf	4
   887     003D  3000               	movlw	high __pbssBANK1
   888     003E  0085               	movwf	5
   889     003F  3050               	movlw	80
   890     0040  3186  26A7  3180   	fcall	clear_ram0
   891     0043                     end_of_initialization:	
   892                           ;End of C runtime variable initialization code
   893                           
   894     0043                     __end_of__initialization:
   895     0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   896     0044  0140               	movlb	0
   897     0045  3183  2B2D         	ljmp	_main	;jump to C main() function
   898                           
   899                           	psect	bssCOMMON
   900     007C                     __pbssCOMMON:
   901     007C                     _RX_index:
   902     007C                     	ds	1
   903                           
   904                           	psect	bssBANK1
   905     00A0                     __pbssBANK1:
   906     00A0                     _RX_buffer:
   907     00A0                     	ds	80
   908                           
   909                           	psect	clrtext
   910     06A7                     clear_ram0:	
   911                           ;	Called with FSR0 containing the base address, and
   912                           ;	WREG with the size to clear
   913                           
   914     06A7  0064               	clrwdt	;clear the watchdog before getting into this loop
   915     06A8                     clrloop0:
   916     06A8  0180               	clrf	0	;clear RAM location pointed to by FSR
   917     06A9  3101               	addfsr 0,1
   918     06AA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   919     06AB  2EA8               	goto	clrloop0	;have we reached the end yet?
   920     06AC  3400               	retlw	0	;all done for this memory range, return
   921                           
   922                           	psect	cstackCOMMON
   923     0070                     __pcstackCOMMON:
   924     0070                     ?_WDT_setup:
   925     0070                     ?_SLEEP_start:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ?_EUSART_setup:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?_EUSART_write:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0070                     ?_EUSART_print_hex:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ?_I2C_setup_slave:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ?_Analog_setup:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0070                     ?_Analog_read_percent:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0070                     ?_LoRa_setup:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     ?_ISR:	
   950                           ; 1 bytes @ 0x0
   951                           
   952     0070                     ??_ISR:	
   953                           ; 1 bytes @ 0x0
   954                           
   955     0070                     ?_main:	
   956                           ; 1 bytes @ 0x0
   957                           
   958                           
   959                           ; 1 bytes @ 0x0
   960     0070                     	ds	1
   961     0071                     ??_WDT_setup:
   962     0071                     ??_SLEEP_start:	
   963                           ; 1 bytes @ 0x1
   964                           
   965     0071                     ??_EUSART_setup:	
   966                           ; 1 bytes @ 0x1
   967                           
   968     0071                     ??_EUSART_write:	
   969                           ; 1 bytes @ 0x1
   970                           
   971     0071                     ?_EUSART_clear_buffer:	
   972                           ; 1 bytes @ 0x1
   973                           
   974     0071                     ??_I2C_setup_slave:	
   975                           ; 1 bytes @ 0x1
   976                           
   977     0071                     ??_Analog_setup:	
   978                           ; 1 bytes @ 0x1
   979                           
   980     0071                     ?__Umul8_16:	
   981                           ; 1 bytes @ 0x1
   982                           
   983     0071                     ?_Analog_read_raw:	
   984                           ; 2 bytes @ 0x1
   985                           
   986     0071                     ?_remote_check:	
   987                           ; 2 bytes @ 0x1
   988                           
   989     0071                     ?___xxtofl:	
   990                           ; 2 bytes @ 0x1
   991                           
   992     0071                     EUSART_write@txData:	
   993                           ; 4 bytes @ 0x1
   994                           
   995     0071                     EUSART_clear_buffer@size:	
   996                           ; 1 bytes @ 0x1
   997                           
   998     0071                     I2C_setup_slave@slaveAddress:	
   999                           ; 1 bytes @ 0x1
  1000                           
  1001     0071                     __Umul8_16@multiplicand:	
  1002                           ; 1 bytes @ 0x1
  1003                           
  1004     0071                     ___xxtofl@val:	
  1005                           ; 1 bytes @ 0x1
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0x1
  1009     0071                     	ds	1
  1010     0072                     ?_EUSART_print:
  1011     0072                     ??_EUSART_print_hex:	
  1012                           ; 1 bytes @ 0x2
  1013                           
  1014     0072                     ??_EUSART_clear_buffer:	
  1015                           ; 1 bytes @ 0x2
  1016                           
  1017     0072                     EUSART_print@string:	
  1018                           ; 1 bytes @ 0x2
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0x2
  1022     0072                     	ds	1
  1023     0073                     ??__Umul8_16:
  1024     0073                     ??_Analog_read_raw:	
  1025                           ; 1 bytes @ 0x3
  1026                           
  1027     0073                     ??_remote_check:	
  1028                           ; 1 bytes @ 0x3
  1029                           
  1030     0073                     EUSART_print_hex@number:	
  1031                           ; 1 bytes @ 0x3
  1032                           
  1033     0073                     EUSART_clear_buffer@buffer:	
  1034                           ; 1 bytes @ 0x3
  1035                           
  1036                           
  1037                           ; 1 bytes @ 0x3
  1038     0073                     	ds	1
  1039     0074                     ??_EUSART_print:
  1040     0074                     EUSART_print_hex@a:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043     0074                     EUSART_clear_buffer@i:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046                           
  1047                           ; 1 bytes @ 0x4
  1048     0074                     	ds	1
  1049     0075                     ??___xxtofl:
  1050     0075                     __Umul8_16@product:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053                           
  1054                           ; 2 bytes @ 0x5
  1055     0075                     	ds	2
  1056     0077                     EUSART_print@c:
  1057     0077                     __Umul8_16@word_mpld:	
  1058                           ; 1 bytes @ 0x7
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0x7
  1062     0077                     	ds	1
  1063     0078                     ?_AT_command:
  1064     0078                     ??_AT_command_check:	
  1065                           ; 1 bytes @ 0x8
  1066                           
  1067     0078                     ??_LoRa_send_data:	
  1068                           ; 1 bytes @ 0x8
  1069                           
  1070     0078                     AT_command@at_command:	
  1071                           ; 1 bytes @ 0x8
  1072                           
  1073                           
  1074                           ; 2 bytes @ 0x8
  1075     0078                     	ds	1
  1076     0079                     __Umul8_16@multiplier:
  1077                           
  1078                           ; 1 bytes @ 0x9
  1079     0079                     	ds	1
  1080     007A                     ??_AT_command:
  1081     007A                     ___fltol@sign1:	
  1082                           ; 1 bytes @ 0xA
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0xA
  1086     007A                     	ds	1
  1087     007B                     AT_command_check@i:
  1088     007B                     ___fltol@exp1:	
  1089                           ; 1 bytes @ 0xB
  1090                           
  1091                           
  1092                           ; 1 bytes @ 0xB
  1093     007B                     	ds	1
  1094     007C                     ??_Analog_read_percent:
  1095                           
  1096                           	psect	cstackBANK0
  1097     0020                     __pcstackBANK0:	
  1098                           ; 1 bytes @ 0xC
  1099                           
  1100     0020                     ?_AT_command_check:
  1101     0020                     ?_LoRa_send_data:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104     0020                     ___xxtofl@sign:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107     0020                     LoRa_send_data@temperature:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110     0020                     AT_command_check@at_command:	
  1111                           ; 2 bytes @ 0x0
  1112                           
  1113                           
  1114                           ; 2 bytes @ 0x0
  1115     0020                     	ds	1
  1116     0021                     ___xxtofl@exp:
  1117                           
  1118                           ; 1 bytes @ 0x1
  1119     0021                     	ds	1
  1120     0022                     LoRa_send_data@humidity:
  1121     0022                     AT_command_check@expected_response:	
  1122                           ; 2 bytes @ 0x2
  1123                           
  1124     0022                     ___xxtofl@arg:	
  1125                           ; 2 bytes @ 0x2
  1126                           
  1127                           
  1128                           ; 4 bytes @ 0x2
  1129     0022                     	ds	2
  1130     0024                     LoRa_send_data@battery:
  1131     0024                     AT_command_check@response_size:	
  1132                           ; 1 bytes @ 0x4
  1133                           
  1134                           
  1135                           ; 1 bytes @ 0x4
  1136     0024                     	ds	1
  1137     0025                     ??_LoRa_setup:
  1138                           
  1139                           ; 1 bytes @ 0x5
  1140     0025                     	ds	1
  1141     0026                     ?___flmul:
  1142     0026                     ___flmul@b:	
  1143                           ; 4 bytes @ 0x6
  1144                           
  1145                           
  1146                           ; 4 bytes @ 0x6
  1147     0026                     	ds	4
  1148     002A                     ___flmul@a:
  1149                           
  1150                           ; 4 bytes @ 0xA
  1151     002A                     	ds	4
  1152     002E                     ??___flmul:
  1153                           
  1154                           ; 1 bytes @ 0xE
  1155     002E                     	ds	5
  1156     0033                     ___flmul@sign:
  1157                           
  1158                           ; 1 bytes @ 0x13
  1159     0033                     	ds	1
  1160     0034                     ___flmul@grs:
  1161                           
  1162                           ; 4 bytes @ 0x14
  1163     0034                     	ds	4
  1164     0038                     ___flmul@aexp:
  1165                           
  1166                           ; 1 bytes @ 0x18
  1167     0038                     	ds	1
  1168     0039                     ___flmul@bexp:
  1169                           
  1170                           ; 1 bytes @ 0x19
  1171     0039                     	ds	1
  1172     003A                     ___flmul@prod:
  1173                           
  1174                           ; 4 bytes @ 0x1A
  1175     003A                     	ds	4
  1176     003E                     ___flmul@temp:
  1177                           
  1178                           ; 2 bytes @ 0x1E
  1179     003E                     	ds	2
  1180     0040                     ?___fltol:
  1181     0040                     ___fltol@f1:	
  1182                           ; 4 bytes @ 0x20
  1183                           
  1184                           
  1185                           ; 4 bytes @ 0x20
  1186     0040                     	ds	4
  1187     0044                     ??___fltol:
  1188                           
  1189                           ; 1 bytes @ 0x24
  1190     0044                     	ds	4
  1191     0048                     Analog_read_percent@a:
  1192                           
  1193                           ; 2 bytes @ 0x28
  1194     0048                     	ds	2
  1195     004A                     Analog_read_percent@r:
  1196                           
  1197                           ; 1 bytes @ 0x2A
  1198     004A                     	ds	1
  1199     004B                     ??_main:
  1200                           
  1201                           ; 1 bytes @ 0x2B
  1202     004B                     	ds	2
  1203     004D                     main@battery:
  1204                           
  1205                           ; 1 bytes @ 0x2D
  1206     004D                     	ds	1
  1207     004E                     main@sleep_counter:
  1208                           
  1209                           ; 1 bytes @ 0x2E
  1210     004E                     	ds	1
  1211                           
  1212                           	psect	maintext
  1213     032D                     __pmaintext:	
  1214 ;;
  1215 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1216 ;;
  1217 ;; *************** function _main *****************
  1218 ;; Defined at:
  1219 ;;		line 108 in file "main.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  humidity        4    0        float 
  1224 ;;  temp            4    0        float 
  1225 ;;  sleep_counte    1   46[BANK0 ] unsigned char 
  1226 ;;  battery         1   45[BANK0 ] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : B3F/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1237 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1238 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1239 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1240 ;;Total ram usage:        4 bytes
  1241 ;; Hardware stack levels required when called: 5
  1242 ;; This function calls:
  1243 ;;		_AT_command
  1244 ;;		_AT_command_check
  1245 ;;		_Analog_read_percent
  1246 ;;		_Analog_setup
  1247 ;;		_EUSART_clear_buffer
  1248 ;;		_EUSART_setup
  1249 ;;		_I2C_setup_slave
  1250 ;;		_LoRa_send_data
  1251 ;;		_LoRa_setup
  1252 ;;		_SLEEP_start
  1253 ;;		_WDT_setup
  1254 ;;		_remote_check
  1255 ;; This function is called by:
  1256 ;;		Startup code after reset
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260     032D                     _main:	
  1261                           ;psect for function _main
  1262                           
  1263     032D                     l2053:	
  1264                           ;incstack = 0
  1265                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1266                           
  1267                           
  1268                           ;main.c: 110:     INTCONbits.PEIE = 1;
  1269     032D  170B               	bsf	11,6	;volatile
  1270                           
  1271                           ;main.c: 111:     INTCONbits.GIE = 1;
  1272     032E  178B               	bsf	11,7	;volatile
  1273     032F                     l2055:
  1274                           
  1275                           ;main.c: 114:     TRISA &= !(1<<2);
  1276     032F  0140               	movlb	0	; select bank0
  1277     0330  0192               	clrf	18	;volatile
  1278                           
  1279                           ;main.c: 116:     ANSELA = 0x0;
  1280     0331  017D               	movlb	61	; select bank61
  1281     0332  018C               	clrf	12	;volatile
  1282     0333                     l2057:
  1283                           
  1284                           ;main.c: 119:     if(remote_check()){
  1285     0333  3185  25E8  3183   	fcall	_remote_check
  1286     0336  0871               	movf	?_remote_check,w
  1287     0337  0472               	iorwf	?_remote_check+1,w
  1288     0338  1903               	btfsc	3,2
  1289     0339  2B3B               	goto	u1651
  1290     033A  2B3C               	goto	u1650
  1291     033B                     u1651:
  1292     033B  2B41               	goto	l2061
  1293     033C                     u1650:
  1294     033C                     l2059:
  1295                           
  1296                           ;main.c: 120:         I2C_setup_slave(0x30);
  1297     033C  3030               	movlw	48
  1298     033D  3185  25A1  3183   	fcall	_I2C_setup_slave
  1299     0340                     l233:	
  1300                           ;main.c: 121:         while(1);
  1301                           
  1302     0340                     l234:
  1303     0340  2B40               	goto	l233
  1304     0341                     l2061:
  1305                           
  1306                           ;main.c: 128:     EUSART_setup();
  1307     0341  3186  2627  3183   	fcall	_EUSART_setup
  1308     0344                     l2063:
  1309                           
  1310                           ;main.c: 129:     EUSART_clear_buffer(RX_buffer, 80);
  1311     0344  3050               	movlw	80
  1312     0345  00F1               	movwf	EUSART_clear_buffer@size
  1313     0346  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
  1314     0347  3185  25FE  3183   	fcall	_EUSART_clear_buffer
  1315     034A                     l2065:
  1316                           
  1317                           ;main.c: 132:     Analog_setup();
  1318     034A  3186  263B  3183   	fcall	_Analog_setup
  1319     034D                     l2067:
  1320                           
  1321                           ;main.c: 135:     PORTA |= (1<<2);
  1322     034D  0140               	movlb	0	; select bank0
  1323     034E  150C               	bsf	12,2	;volatile
  1324     034F                     l2069:
  1325                           
  1326                           ;main.c: 136:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1327     034F  3002               	movlw	2
  1328     0350  0140               	movlb	0	; select bank0
  1329     0351  00CC               	movwf	??_main+1
  1330     0352  3045               	movlw	69
  1331     0353  00CB               	movwf	??_main
  1332     0354  30A9               	movlw	169
  1333     0355                     u1687:
  1334     0355  0B89               	decfsz	9,f
  1335     0356  2B55               	goto	u1687
  1336     0357  0BCB               	decfsz	??_main,f
  1337     0358  2B55               	goto	u1687
  1338     0359  0BCC               	decfsz	??_main+1,f
  1339     035A  2B55               	goto	u1687
  1340     035B  3200               	nop2
  1341     035C                     l2071:
  1342                           
  1343                           ;main.c: 137:     LoRa_setup();
  1344     035C  3184  2483  3183   	fcall	_LoRa_setup
  1345     035F                     l2073:
  1346                           
  1347                           ;main.c: 138:     PORTA &= !(1<<2);
  1348     035F  0140               	movlb	0	; select bank0
  1349     0360  018C               	clrf	12	;volatile
  1350     0361                     l2075:
  1351                           
  1352                           ;main.c: 141:     WDT_setup();
  1353     0361  3186  26AD  3183   	fcall	_WDT_setup
  1354     0364                     l2077:
  1355                           
  1356                           ;main.c: 144:     uint8_t sleep_counter = 0;
  1357     0364  0140               	movlb	0	; select bank0
  1358     0365  01CE               	clrf	main@sleep_counter
  1359     0366                     l2079:
  1360                           
  1361                           ;main.c: 153:         AT_command("AT+LOWPOWER");
  1362     0366  3054               	movlw	low (STR_13| (0+32768))
  1363     0367  00F8               	movwf	AT_command@at_command
  1364     0368  3086               	movlw	high (STR_13| (0+32768))
  1365     0369  00F9               	movwf	AT_command@at_command+1
  1366     036A  3186  2613  3183   	fcall	_AT_command
  1367     036D                     l2081:
  1368                           
  1369                           ;main.c: 154:         SLEEP_start();
  1370     036D  3186  26B6  3183   	fcall	_SLEEP_start
  1371     0370                     l2083:
  1372                           
  1373                           ;main.c: 157:         sleep_counter++;
  1374     0370  3001               	movlw	1
  1375     0371  0140               	movlb	0	; select bank0
  1376     0372  00CB               	movwf	??_main
  1377     0373  084B               	movf	??_main,w
  1378     0374  07CE               	addwf	main@sleep_counter,f
  1379     0375                     l2085:
  1380                           
  1381                           ;main.c: 159:         if(sleep_counter >= 1){
  1382     0375  084E               	movf	main@sleep_counter,w
  1383     0376  1903               	btfsc	3,2
  1384     0377  2B79               	goto	u1661
  1385     0378  2B7A               	goto	u1660
  1386     0379                     u1661:
  1387     0379  2B66               	goto	l2079
  1388     037A                     u1660:
  1389     037A                     l2087:
  1390                           
  1391                           ;main.c: 161:             sleep_counter = 0;
  1392     037A  01CE               	clrf	main@sleep_counter
  1393     037B                     l2089:
  1394                           
  1395                           ;main.c: 163:             AT_command("Wake up !!");
  1396     037B  306C               	movlw	low (STR_1| (0+32768))
  1397     037C  00F8               	movwf	AT_command@at_command
  1398     037D  3086               	movlw	high (STR_1| (0+32768))
  1399     037E  00F9               	movwf	AT_command@at_command+1
  1400     037F  3186  2613  3183   	fcall	_AT_command
  1401     0382                     l2091:
  1402                           
  1403                           ;main.c: 165:             if(!AT_command_check("AT+JOIN", "+JOIN: Joined already", 21)){
  1404     0382  309F               	movlw	low (STR_7| (0+32768))
  1405     0383  0140               	movlb	0	; select bank0
  1406     0384  00A0               	movwf	AT_command_check@at_command
  1407     0385  3086               	movlw	high (STR_7| (0+32768))
  1408     0386  00A1               	movwf	AT_command_check@at_command+1
  1409     0387  3041               	movlw	low (STR_8| (0+32768))
  1410     0388  00A2               	movwf	AT_command_check@expected_response
  1411     0389  3085               	movlw	high (STR_8| (0+32768))
  1412     038A  00A3               	movwf	AT_command_check@expected_response+1
  1413     038B  3015               	movlw	21
  1414     038C  00A4               	movwf	AT_command_check@response_size
  1415     038D  3184  2422  3183   	fcall	_AT_command_check
  1416     0390  3A00               	xorlw	0
  1417     0391  1D03               	skipz
  1418     0392  2B94               	goto	u1671
  1419     0393  2B95               	goto	u1670
  1420     0394                     u1671:
  1421     0394  2B9C               	goto	l2099
  1422     0395                     u1670:
  1423     0395                     l2093:
  1424                           
  1425                           ;main.c: 167:                 PORTA |= (1<<2);
  1426     0395  0140               	movlb	0	; select bank0
  1427     0396  150C               	bsf	12,2	;volatile
  1428     0397                     l2095:
  1429                           
  1430                           ;main.c: 168:                 LoRa_setup();
  1431     0397  3184  2483  3183   	fcall	_LoRa_setup
  1432     039A                     l2097:
  1433                           
  1434                           ;main.c: 169:                 PORTA &= !(1<<2);
  1435     039A  0140               	movlb	0	; select bank0
  1436     039B  018C               	clrf	12	;volatile
  1437     039C                     l2099:
  1438                           
  1439                           ;main.c: 174:             battery = Analog_read_percent();
  1440     039C  3184  24CD  3183   	fcall	_Analog_read_percent
  1441     039F  0140               	movlb	0	; select bank0
  1442     03A0  00CD               	movwf	main@battery
  1443     03A1                     l2101:
  1444                           
  1445                           ;main.c: 177:             LoRa_send_data(0x2525, 0x2323, battery);
  1446     03A1  3025               	movlw	37
  1447     03A2  00A0               	movwf	LoRa_send_data@temperature
  1448     03A3  3025               	movlw	37
  1449     03A4  00A1               	movwf	LoRa_send_data@temperature+1
  1450     03A5  3023               	movlw	35
  1451     03A6  00A2               	movwf	LoRa_send_data@humidity
  1452     03A7  3023               	movlw	35
  1453     03A8  00A3               	movwf	LoRa_send_data@humidity+1
  1454     03A9  084D               	movf	main@battery,w
  1455     03AA  00A4               	movwf	LoRa_send_data@battery
  1456     03AB  3185  2504  3183   	fcall	_LoRa_send_data
  1457     03AE  2B66               	goto	l2079
  1458     03AF  3180  2838         	ljmp	start
  1459     03B1                     __end_of_main:
  1460                           
  1461                           	psect	text1
  1462     05E8                     __ptext1:	
  1463 ;; *************** function _remote_check *****************
  1464 ;; Defined at:
  1465 ;;		line 4 in file "./remote_mode_driver.h"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  2    1[COMMON] int 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1483 ;;Total ram usage:        2 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493     05E8                     _remote_check:	
  1494                           ;psect for function _remote_check
  1495                           
  1496     05E8                     l1845:	
  1497                           ;incstack = 0
  1498                           ; Regs used in _remote_check: [wreg+status,2]
  1499                           
  1500                           
  1501                           ;./remote_mode_driver.h: 5:     TRISAbits.TRISA1 = 1;
  1502     05E8  0140               	movlb	0	; select bank0
  1503     05E9  1492               	bsf	18,1	;volatile
  1504                           
  1505                           ;./remote_mode_driver.h: 6:     TRISAbits.TRISA2 = 0;
  1506     05EA  1112               	bcf	18,2	;volatile
  1507                           
  1508                           ;./remote_mode_driver.h: 9:     if (PORTAbits.RA1 == 0){
  1509     05EB  188C               	btfsc	12,1	;volatile
  1510     05EC  2DEE               	goto	u1441
  1511     05ED  2DEF               	goto	u1440
  1512     05EE                     u1441:
  1513     05EE  2DFB               	goto	l1853
  1514     05EF                     u1440:
  1515     05EF                     l1847:
  1516                           
  1517                           ;./remote_mode_driver.h: 11:         PORTAbits.RA2 = 0;
  1518     05EF  110C               	bcf	12,2	;volatile
  1519                           
  1520                           ;./remote_mode_driver.h: 12:         while(PORTAbits.RA1 == 0){
  1521     05F0  2DF2               	goto	l213
  1522     05F1                     l214:
  1523                           
  1524                           ;./remote_mode_driver.h: 14:             PORTAbits.RA2 = 1;
  1525     05F1  150C               	bsf	12,2	;volatile
  1526     05F2                     l213:	
  1527                           ;./remote_mode_driver.h: 15:         }
  1528                           
  1529                           
  1530                           ;./remote_mode_driver.h: 12:         while(PORTAbits.RA1 == 0){
  1531     05F2  1C8C               	btfss	12,1	;volatile
  1532     05F3  2DF5               	goto	u1451
  1533     05F4  2DF6               	goto	u1450
  1534     05F5                     u1451:
  1535     05F5  2DF1               	goto	l214
  1536     05F6                     u1450:
  1537     05F6                     l1849:
  1538                           
  1539                           ;./remote_mode_driver.h: 16:         return 1;
  1540     05F6  3001               	movlw	1
  1541     05F7  00F1               	movwf	?_remote_check
  1542     05F8  3000               	movlw	0
  1543     05F9  00F2               	movwf	?_remote_check+1
  1544     05FA  2DFD               	goto	l216
  1545     05FB                     l1853:
  1546                           
  1547                           ;./remote_mode_driver.h: 19:     return 0;
  1548     05FB  01F1               	clrf	?_remote_check
  1549     05FC  01F2               	clrf	?_remote_check+1
  1550     05FD                     l216:
  1551     05FD  0008               	return
  1552     05FE                     __end_of_remote_check:
  1553                           
  1554                           	psect	text2
  1555     06AD                     __ptext2:	
  1556 ;; *************** function _WDT_setup *****************
  1557 ;; Defined at:
  1558 ;;		line 4 in file "./watchdog_driver.h"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1576 ;;Total ram usage:        0 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; Hardware stack levels required when called: 1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586     06AD                     _WDT_setup:	
  1587                           ;psect for function _WDT_setup
  1588                           
  1589     06AD                     l1765:	
  1590                           ;incstack = 0
  1591                           ; Regs used in _WDT_setup: [wreg+status,2+status,0]
  1592                           
  1593                           
  1594                           ;./watchdog_driver.h: 8:     WDTCONbits.PS = 0b10000;
  1595     06AD  0143               	movlb	3	; select bank3
  1596     06AE  080C               	movf	12,w	;volatile
  1597     06AF  39C1               	andlw	-63
  1598     06B0  3820               	iorlw	32
  1599     06B1  008C               	movwf	12	;volatile
  1600     06B2                     l83:
  1601     06B2  0008               	return
  1602     06B3                     __end_of_WDT_setup:
  1603                           
  1604                           	psect	text3
  1605     06B6                     __ptext3:	
  1606 ;; *************** function _SLEEP_start *****************
  1607 ;; Defined at:
  1608 ;;		line 11 in file "./watchdog_driver.h"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		None
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636     06B6                     _SLEEP_start:	
  1637                           ;psect for function _SLEEP_start
  1638                           
  1639     06B6                     l1767:	
  1640                           ;incstack = 0
  1641                           ; Regs used in _SLEEP_start: []
  1642                           
  1643     06B6  0064               	clrwdt	;# 
  1644     06B7  0063               	sleep	;# 
  1645     06B8                     l86:
  1646     06B8  0008               	return
  1647     06B9                     __end_of_SLEEP_start:
  1648                           
  1649                           	psect	text4
  1650     0483                     __ptext4:	
  1651 ;; *************** function _LoRa_setup *****************
  1652 ;; Defined at:
  1653 ;;		line 8 in file "./lora_driver.h"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1669 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1670 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1671 ;;Total ram usage:        2 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 4
  1674 ;; This function calls:
  1675 ;;		_AT_command
  1676 ;;		_AT_command_check
  1677 ;;		_EUSART_print
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683     0483                     _LoRa_setup:	
  1684                           ;psect for function _LoRa_setup
  1685                           
  1686     0483                     l2027:	
  1687                           ;incstack = 0
  1688                           ; Regs used in _LoRa_setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1689                           
  1690                           
  1691                           ;./lora_driver.h: 10:     AT_command("Wake up !!");
  1692     0483  306C               	movlw	low (STR_1| (0+32768))
  1693     0484  00F8               	movwf	AT_command@at_command
  1694     0485  3086               	movlw	high (STR_1| (0+32768))
  1695     0486  00F9               	movwf	AT_command@at_command+1
  1696     0487  3186  2613  3184   	fcall	_AT_command
  1697     048A                     l2029:
  1698                           
  1699                           ;./lora_driver.h: 12:     if(!AT_command_check("AT", "+AT: OK", 7)){
  1700     048A  30B3               	movlw	low (STR_2| (0+32768))
  1701     048B  0140               	movlb	0	; select bank0
  1702     048C  00A0               	movwf	AT_command_check@at_command
  1703     048D  3086               	movlw	high (STR_2| (0+32768))
  1704     048E  00A1               	movwf	AT_command_check@at_command+1
  1705     048F  3097               	movlw	low (STR_3| (0+32768))
  1706     0490  00A2               	movwf	AT_command_check@expected_response
  1707     0491  3086               	movlw	high (STR_3| (0+32768))
  1708     0492  00A3               	movwf	AT_command_check@expected_response+1
  1709     0493  3007               	movlw	7
  1710     0494  00A4               	movwf	AT_command_check@response_size
  1711     0495  3184  2422  3184   	fcall	_AT_command_check
  1712     0498  3A00               	xorlw	0
  1713     0499  1D03               	skipz
  1714     049A  2C9C               	goto	u1631
  1715     049B  2C9D               	goto	u1630
  1716     049C                     u1631:
  1717     049C  2CB2               	goto	l2035
  1718     049D                     u1630:
  1719     049D                     l2031:
  1720                           
  1721                           ;./lora_driver.h: 13:         EUSART_print("RX/TX Fail");
  1722     049D  3082               	movlw	low (STR_6| (0+32768))
  1723     049E  00F2               	movwf	EUSART_print@string
  1724     049F  3086               	movlw	high (STR_6| (0+32768))
  1725     04A0  00F3               	movwf	EUSART_print@string+1
  1726     04A1  3185  2557  3184   	fcall	_EUSART_print
  1727     04A4  2CB2               	goto	l2035
  1728     04A5                     l2033:
  1729                           
  1730                           ;./lora_driver.h: 19:         _delay((unsigned long)((20000)*(1000000/4000.0)));
  1731     04A5  301A               	movlw	26
  1732     04A6  0140               	movlb	0	; select bank0
  1733     04A7  00A6               	movwf	??_LoRa_setup+1
  1734     04A8  305E               	movlw	94
  1735     04A9  00A5               	movwf	??_LoRa_setup
  1736     04AA  306E               	movlw	110
  1737     04AB                     u1697:
  1738     04AB  0B89               	decfsz	9,f
  1739     04AC  2CAB               	goto	u1697
  1740     04AD  0BA5               	decfsz	??_LoRa_setup,f
  1741     04AE  2CAB               	goto	u1697
  1742     04AF  0BA6               	decfsz	??_LoRa_setup+1,f
  1743     04B0  2CAB               	goto	u1697
  1744     04B1  0000               	nop
  1745     04B2                     l2035:
  1746                           
  1747                           ;./lora_driver.h: 18:     while(!AT_command_check("AT+JOIN", "+JOIN: Joined already", 21
      +                          )){
  1748     04B2  309F               	movlw	low (STR_7| (0+32768))
  1749     04B3  0140               	movlb	0	; select bank0
  1750     04B4  00A0               	movwf	AT_command_check@at_command
  1751     04B5  3086               	movlw	high (STR_7| (0+32768))
  1752     04B6  00A1               	movwf	AT_command_check@at_command+1
  1753     04B7  3041               	movlw	low (STR_8| (0+32768))
  1754     04B8  00A2               	movwf	AT_command_check@expected_response
  1755     04B9  3085               	movlw	high (STR_8| (0+32768))
  1756     04BA  00A3               	movwf	AT_command_check@expected_response+1
  1757     04BB  3015               	movlw	21
  1758     04BC  00A4               	movwf	AT_command_check@response_size
  1759     04BD  3184  2422  3184   	fcall	_AT_command_check
  1760     04C0  3A00               	xorlw	0
  1761     04C1  1903               	skipnz
  1762     04C2  2CC4               	goto	u1641
  1763     04C3  2CC5               	goto	u1640
  1764     04C4                     u1641:
  1765     04C4  2CA5               	goto	l2033
  1766     04C5                     u1640:
  1767     04C5                     l2037:
  1768                           
  1769                           ;./lora_driver.h: 21:     EUSART_print("Connected !");
  1770     04C5  3048               	movlw	low (STR_11| (0+32768))
  1771     04C6  00F2               	movwf	EUSART_print@string
  1772     04C7  3086               	movlw	high (STR_11| (0+32768))
  1773     04C8  00F3               	movwf	EUSART_print@string+1
  1774     04C9  3185  2557  3184   	fcall	_EUSART_print
  1775     04CC                     l190:
  1776     04CC  0008               	return
  1777     04CD                     __end_of_LoRa_setup:
  1778                           
  1779                           	psect	text5
  1780     0422                     __ptext5:	
  1781 ;; *************** function _AT_command_check *****************
  1782 ;; Defined at:
  1783 ;;		line 39 in file "./lora_driver.h"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  at_command      2    0[BANK0 ] PTR const unsigned char 
  1786 ;;		 -> STR_17(8), STR_9(8), STR_4(3), 
  1787 ;;  expected_res    2    2[BANK0 ] PTR const unsigned char 
  1788 ;;		 -> STR_18(22), STR_10(22), STR_5(8), 
  1789 ;;  response_siz    1    4[BANK0 ] unsigned char 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  i               1   11[COMMON] unsigned char 
  1792 ;;  tmp             1    0        unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      unsigned char 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1802 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1804 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1805 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1806 ;;Total ram usage:        9 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 3
  1809 ;; This function calls:
  1810 ;;		_EUSART_clear_buffer
  1811 ;;		_EUSART_print
  1812 ;;		_EUSART_write
  1813 ;; This function is called by:
  1814 ;;		_LoRa_setup
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819     0422                     _AT_command_check:	
  1820                           ;psect for function _AT_command_check
  1821                           
  1822     0422                     l1993:	
  1823                           ;incstack = 0
  1824                           ; Regs used in _AT_command_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1825                           
  1826                           
  1827                           ;./lora_driver.h: 41:     EUSART_clear_buffer(RX_buffer, 80);
  1828     0422  3050               	movlw	80
  1829     0423  00F1               	movwf	EUSART_clear_buffer@size
  1830     0424  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
  1831     0425  3185  25FE  3184   	fcall	_EUSART_clear_buffer
  1832     0428                     l1995:
  1833                           
  1834                           ;./lora_driver.h: 42:     RX_index = 0;
  1835     0428  01FC               	clrf	_RX_index
  1836                           
  1837                           ;./lora_driver.h: 44:     uint8_t tmp;;./lora_driver.h: 45:     while(PIR3bits.RC2IF){
  1838     0429  2C2C               	goto	l1999
  1839     042A                     l1997:
  1840     042A  014C               	movlb	12	; select bank12
  1841     042B  0816               	movf	22,w	;volatile
  1842     042C                     l1999:
  1843                           
  1844                           ;./lora_driver.h: 45:     while(PIR3bits.RC2IF){
  1845     042C  0141               	movlb	1	; select bank1
  1846     042D  1A8F               	btfsc	15,5	;volatile
  1847     042E  2C30               	goto	u1591
  1848     042F  2C31               	goto	u1590
  1849     0430                     u1591:
  1850     0430  2C2A               	goto	l1997
  1851     0431                     u1590:
  1852     0431                     l198:
  1853                           
  1854                           ;./lora_driver.h: 48:     RC2STAbits.CREN = 0;
  1855     0431  014C               	movlb	12	; select bank12
  1856     0432  121A               	bcf	26,4	;volatile
  1857                           
  1858                           ;./lora_driver.h: 49:     RC2STAbits.CREN = 1;
  1859     0433  161A               	bsf	26,4	;volatile
  1860                           
  1861                           ;./lora_driver.h: 51:     PIE3bits.RC2IE = 1;
  1862     0434  0141               	movlb	1	; select bank1
  1863     0435  1699               	bsf	25,5	;volatile
  1864     0436                     l2001:
  1865                           
  1866                           ;./lora_driver.h: 53:     EUSART_print(at_command);
  1867     0436  0140               	movlb	0	; select bank0
  1868     0437  0821               	movf	AT_command_check@at_command+1,w
  1869     0438  00F3               	movwf	EUSART_print@string+1
  1870     0439  0820               	movf	AT_command_check@at_command,w
  1871     043A  00F2               	movwf	EUSART_print@string
  1872     043B  3185  2557  3184   	fcall	_EUSART_print
  1873     043E                     l2003:
  1874                           
  1875                           ;./lora_driver.h: 54:     EUSART_write(0x0A);
  1876     043E  300A               	movlw	10
  1877     043F  3186  268D  3184   	fcall	_EUSART_write
  1878     0442                     l2005:	
  1879                           ;./lora_driver.h: 57:     while(RX_index < response_size+2);
  1880                           
  1881     0442  0140               	movlb	0	; select bank0
  1882     0443  0824               	movf	AT_command_check@response_size,w
  1883     0444  3E02               	addlw	2
  1884     0445  00F8               	movwf	??_AT_command_check
  1885     0446  3000               	movlw	0
  1886     0447  1803               	skipnc
  1887     0448  3001               	movlw	1
  1888     0449  00F9               	movwf	??_AT_command_check+1
  1889     044A  0879               	movf	??_AT_command_check+1,w
  1890     044B  3A80               	xorlw	128
  1891     044C  3C80               	sublw	128
  1892     044D  1D03               	skipz
  1893     044E  2C51               	goto	u1605
  1894     044F  0878               	movf	??_AT_command_check,w
  1895     0450  027C               	subwf	_RX_index,w
  1896     0451                     u1605:
  1897     0451  1C03               	skipc
  1898     0452  2C54               	goto	u1601
  1899     0453  2C55               	goto	u1600
  1900     0454                     u1601:
  1901     0454  2C42               	goto	l2005
  1902     0455                     u1600:
  1903     0455                     l2007:
  1904                           
  1905                           ;./lora_driver.h: 58:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1906     0455  30FA               	movlw	250
  1907     0456                     u1707:
  1908     0456  3200               	nop2
  1909     0457  0B89               	decfsz	9,f
  1910     0458  2C56               	goto	u1707
  1911     0459                     l2009:
  1912                           
  1913                           ;./lora_driver.h: 60:     PIE3bits.RC2IE = 0;
  1914     0459  0141               	movlb	1	; select bank1
  1915     045A  1299               	bcf	25,5	;volatile
  1916     045B                     l2011:
  1917                           
  1918                           ;./lora_driver.h: 61:     for(uint8_t i=0; i<response_size; i++){
  1919     045B  01FB               	clrf	AT_command_check@i
  1920     045C  2C7A               	goto	l2021
  1921     045D                     l2013:
  1922                           
  1923                           ;./lora_driver.h: 63:         if(RX_buffer[i] != expected_response[i]){
  1924     045D  0823               	movf	AT_command_check@expected_response+1,w
  1925     045E  00F9               	movwf	??_AT_command_check+1
  1926     045F  0822               	movf	AT_command_check@expected_response,w
  1927     0460  00F8               	movwf	??_AT_command_check
  1928     0461  087B               	movf	AT_command_check@i,w
  1929     0462  0778               	addwf	??_AT_command_check,w
  1930     0463  0084               	movwf	4
  1931     0464  0879               	movf	??_AT_command_check+1,w
  1932     0465  1803               	skipnc
  1933     0466  0A79               	incf	??_AT_command_check+1,w
  1934     0467  0085               	movwf	5
  1935     0468  0800               	movf	0,w	;code access
  1936     0469  00FA               	movwf	??_AT_command_check+2
  1937     046A  087B               	movf	AT_command_check@i,w
  1938     046B  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  1939     046C  0086               	movwf	6
  1940     046D  0187               	clrf	7
  1941     046E  0801               	movf	1,w
  1942     046F  067A               	xorwf	??_AT_command_check+2,w
  1943     0470  1903               	skipnz
  1944     0471  2C73               	goto	u1611
  1945     0472  2C74               	goto	u1610
  1946     0473                     u1611:
  1947     0473  2C76               	goto	l2019
  1948     0474                     u1610:
  1949     0474                     l2015:
  1950                           
  1951                           ;./lora_driver.h: 64:             return 0;
  1952     0474  3000               	movlw	0
  1953     0475  2C82               	goto	l205
  1954     0476                     l2019:
  1955                           
  1956                           ;./lora_driver.h: 66:     }
  1957     0476  3001               	movlw	1
  1958     0477  00F8               	movwf	??_AT_command_check
  1959     0478  0878               	movf	??_AT_command_check,w
  1960     0479  07FB               	addwf	AT_command_check@i,f
  1961     047A                     l2021:
  1962     047A  0140               	movlb	0	; select bank0
  1963     047B  0824               	movf	AT_command_check@response_size,w
  1964     047C  027B               	subwf	AT_command_check@i,w
  1965     047D  1C03               	skipc
  1966     047E  2C80               	goto	u1621
  1967     047F  2C81               	goto	u1620
  1968     0480                     u1621:
  1969     0480  2C5D               	goto	l2013
  1970     0481                     u1620:
  1971     0481                     l2023:
  1972                           
  1973                           ;./lora_driver.h: 67:     return 1;
  1974     0481  3001               	movlw	1
  1975     0482                     l205:
  1976     0482  0008               	return
  1977     0483                     __end_of_AT_command_check:
  1978                           
  1979                           	psect	text6
  1980     05FE                     __ptext6:	
  1981 ;; *************** function _EUSART_clear_buffer *****************
  1982 ;; Defined at:
  1983 ;;		line 69 in file "./eusart_driver.h"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  buffer          1    wreg     PTR unsigned char 
  1986 ;;		 -> RX_buffer(80), 
  1987 ;;  size            1    1[COMMON] unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  buffer          1    3[COMMON] PTR unsigned char 
  1990 ;;		 -> RX_buffer(80), 
  1991 ;;  i               1    4[COMMON] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2001 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2005 ;;Total ram usage:        4 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_AT_command_check
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016     05FE                     _EUSART_clear_buffer:	
  2017                           ;psect for function _EUSART_clear_buffer
  2018                           
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in _EUSART_clear_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  2022                           ;EUSART_clear_buffer@buffer stored from wreg
  2023     05FE  00F3               	movwf	EUSART_clear_buffer@buffer
  2024     05FF                     l1971:
  2025                           
  2026                           ;./eusart_driver.h: 70:     for(uint8_t i=0; i<size; i++){
  2027     05FF  01F4               	clrf	EUSART_clear_buffer@i
  2028     0600  2E0C               	goto	l1977
  2029     0601                     l1973:
  2030                           
  2031                           ;./eusart_driver.h: 71:         buffer[i] = 0;
  2032     0601  0874               	movf	EUSART_clear_buffer@i,w
  2033     0602  0773               	addwf	EUSART_clear_buffer@buffer,w
  2034     0603  00F2               	movwf	??_EUSART_clear_buffer
  2035     0604  0872               	movf	??_EUSART_clear_buffer,w
  2036     0605  0086               	movwf	6
  2037     0606  0187               	clrf	7
  2038     0607  0181               	clrf	1
  2039     0608                     l1975:
  2040                           
  2041                           ;./eusart_driver.h: 72:     }
  2042     0608  3001               	movlw	1
  2043     0609  00F2               	movwf	??_EUSART_clear_buffer
  2044     060A  0872               	movf	??_EUSART_clear_buffer,w
  2045     060B  07F4               	addwf	EUSART_clear_buffer@i,f
  2046     060C                     l1977:
  2047     060C  0871               	movf	EUSART_clear_buffer@size,w
  2048     060D  0274               	subwf	EUSART_clear_buffer@i,w
  2049     060E  1C03               	skipc
  2050     060F  2E11               	goto	u1571
  2051     0610  2E12               	goto	u1570
  2052     0611                     u1571:
  2053     0611  2E01               	goto	l1973
  2054     0612                     u1570:
  2055     0612                     l121:
  2056     0612  0008               	return
  2057     0613                     __end_of_EUSART_clear_buffer:
  2058                           
  2059                           	psect	text7
  2060     0613                     __ptext7:	
  2061 ;; *************** function _AT_command *****************
  2062 ;; Defined at:
  2063 ;;		line 70 in file "./lora_driver.h"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  at_command      2    8[COMMON] PTR const unsigned char 
  2066 ;;		 -> STR_14(11), STR_13(12), STR_1(11), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2081 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2082 ;;Total ram usage:        3 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 3
  2085 ;; This function calls:
  2086 ;;		_EUSART_print
  2087 ;;		_EUSART_write
  2088 ;; This function is called by:
  2089 ;;		_LoRa_setup
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094     0613                     _AT_command:	
  2095                           ;psect for function _AT_command
  2096                           
  2097     0613                     l1987:	
  2098                           ;incstack = 0
  2099                           ; Regs used in _AT_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2100                           
  2101                           
  2102                           ;./lora_driver.h: 71:     EUSART_print(at_command);
  2103     0613  0879               	movf	AT_command@at_command+1,w
  2104     0614  00F3               	movwf	EUSART_print@string+1
  2105     0615  0878               	movf	AT_command@at_command,w
  2106     0616  00F2               	movwf	EUSART_print@string
  2107     0617  3185  2557  3186   	fcall	_EUSART_print
  2108     061A                     l1989:
  2109                           
  2110                           ;./lora_driver.h: 72:     EUSART_write(0x0A);
  2111     061A  300A               	movlw	10
  2112     061B  3186  268D  3186   	fcall	_EUSART_write
  2113     061E                     l1991:
  2114                           
  2115                           ;./lora_driver.h: 73:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2116     061E  3007               	movlw	7
  2117     061F  00FA               	movwf	??_AT_command
  2118     0620  307D               	movlw	125
  2119     0621                     u1717:
  2120     0621  0B89               	decfsz	9,f
  2121     0622  2E21               	goto	u1717
  2122     0623  0BFA               	decfsz	??_AT_command,f
  2123     0624  2E21               	goto	u1717
  2124     0625  0000               	nop
  2125     0626                     l209:
  2126     0626  0008               	return
  2127     0627                     __end_of_AT_command:
  2128                           
  2129                           	psect	text8
  2130     0504                     __ptext8:	
  2131 ;; *************** function _LoRa_send_data *****************
  2132 ;; Defined at:
  2133 ;;		line 24 in file "./lora_driver.h"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;  temperature     2    0[BANK0 ] unsigned short 
  2136 ;;  humidity        2    2[BANK0 ] unsigned short 
  2137 ;;  battery         1    4[BANK0 ] unsigned char 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2149 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2152 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2153 ;;Total ram usage:        6 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 3
  2156 ;; This function calls:
  2157 ;;		_EUSART_print
  2158 ;;		_EUSART_print_hex
  2159 ;;		_EUSART_write
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165     0504                     _LoRa_send_data:	
  2166                           ;psect for function _LoRa_send_data
  2167                           
  2168     0504                     l2039:	
  2169                           ;incstack = 0
  2170                           ; Regs used in _LoRa_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2171                           
  2172                           
  2173                           ;./lora_driver.h: 25:     EUSART_print("AT+MSGHEX=");
  2174     0504  3077               	movlw	low (STR_12| (0+32768))
  2175     0505  00F2               	movwf	EUSART_print@string
  2176     0506  3086               	movlw	high (STR_12| (0+32768))
  2177     0507  00F3               	movwf	EUSART_print@string+1
  2178     0508  3185  2557  3185   	fcall	_EUSART_print
  2179                           
  2180                           ;./lora_driver.h: 27:     EUSART_print_hex(temperature&0xFF);
  2181     050B  0140               	movlb	0	; select bank0
  2182     050C  0820               	movf	LoRa_send_data@temperature,w
  2183     050D  3185  257D  3185   	fcall	_EUSART_print_hex
  2184                           
  2185                           ;./lora_driver.h: 28:     EUSART_print_hex((temperature >> 8)&0xFF);
  2186     0510  0140               	movlb	0	; select bank0
  2187     0511  0821               	movf	LoRa_send_data@temperature+1,w
  2188     0512  3185  257D  3185   	fcall	_EUSART_print_hex
  2189                           
  2190                           ;./lora_driver.h: 30:     EUSART_print_hex(humidity&0xFF);
  2191     0515  0140               	movlb	0	; select bank0
  2192     0516  0822               	movf	LoRa_send_data@humidity,w
  2193     0517  3185  257D  3185   	fcall	_EUSART_print_hex
  2194                           
  2195                           ;./lora_driver.h: 31:     EUSART_print_hex((humidity >> 8)&0xFF);
  2196     051A  0140               	movlb	0	; select bank0
  2197     051B  0823               	movf	LoRa_send_data@humidity+1,w
  2198     051C  3185  257D  3185   	fcall	_EUSART_print_hex
  2199                           
  2200                           ;./lora_driver.h: 33:     EUSART_print_hex(battery);
  2201     051F  0140               	movlb	0	; select bank0
  2202     0520  0824               	movf	LoRa_send_data@battery,w
  2203     0521  3185  257D  3185   	fcall	_EUSART_print_hex
  2204     0524                     l2041:
  2205                           
  2206                           ;./lora_driver.h: 35:     EUSART_write(0x0A);
  2207     0524  300A               	movlw	10
  2208     0525  3186  268D  3185   	fcall	_EUSART_write
  2209     0528                     l2043:
  2210                           
  2211                           ;./lora_driver.h: 36:     _delay((unsigned long)((20)*(1000000/4000.0)));
  2212     0528  3007               	movlw	7
  2213     0529  00F8               	movwf	??_LoRa_send_data
  2214     052A  307D               	movlw	125
  2215     052B                     u1727:
  2216     052B  0B89               	decfsz	9,f
  2217     052C  2D2B               	goto	u1727
  2218     052D  0BF8               	decfsz	??_LoRa_send_data,f
  2219     052E  2D2B               	goto	u1727
  2220     052F  0000               	nop
  2221     0530                     l193:
  2222     0530  0008               	return
  2223     0531                     __end_of_LoRa_send_data:
  2224                           
  2225                           	psect	text9
  2226     057D                     __ptext9:	
  2227 ;; *************** function _EUSART_print_hex *****************
  2228 ;; Defined at:
  2229 ;;		line 61 in file "./eusart_driver.h"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  number          1    wreg     unsigned char 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  number          1    3[COMMON] unsigned char 
  2234 ;;  a               1    4[COMMON] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2248 ;;Total ram usage:        3 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 2
  2251 ;; This function calls:
  2252 ;;		_EUSART_write
  2253 ;; This function is called by:
  2254 ;;		_LoRa_send_data
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258     057D                     _EUSART_print_hex:	
  2259                           ;psect for function _EUSART_print_hex
  2260                           
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _EUSART_print_hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2264                           ;EUSART_print_hex@number stored from wreg
  2265     057D  00F3               	movwf	EUSART_print_hex@number
  2266     057E                     l1979:
  2267                           
  2268                           ;./eusart_driver.h: 62:     const char ref[] = {'0','1','2','3','4','5','6','7','8','9',
      +                          'A','B','C','D','E','F'};;./eusart_driver.h: 63:     uint8_t a = (number >> 4)&0b0000111
      +                          1;
  2269     057E  0873               	movf	EUSART_print_hex@number,w
  2270     057F  00F2               	movwf	??_EUSART_print_hex
  2271     0580  3004               	movlw	4
  2272     0581                     u1585:
  2273     0581  36F2               	lsrf	??_EUSART_print_hex,f
  2274     0582  0B89               	decfsz	9,f
  2275     0583  2D81               	goto	u1585
  2276     0584  0872               	movf	??_EUSART_print_hex,w
  2277     0585  390F               	andlw	15
  2278     0586  00F4               	movwf	EUSART_print_hex@a
  2279     0587                     l1981:
  2280                           
  2281                           ;./eusart_driver.h: 64:     EUSART_write(ref[a]);
  2282     0587  0874               	movf	EUSART_print_hex@a,w
  2283     0588  3E31               	addlw	low (EUSART_print_hex@ref| (0+32768))
  2284     0589  0084               	movwf	4
  2285     058A  3085               	movlw	high (EUSART_print_hex@ref| (0+32768))
  2286     058B  1803               	skipnc
  2287     058C  3E01               	addlw	1
  2288     058D  0085               	movwf	5
  2289     058E  0800               	movf	0,w	;code access
  2290     058F  3186  268D  3185   	fcall	_EUSART_write
  2291     0592                     l1983:
  2292                           
  2293                           ;./eusart_driver.h: 65:     a = number & 0b00001111;
  2294     0592  0873               	movf	EUSART_print_hex@number,w
  2295     0593  390F               	andlw	15
  2296     0594  00F4               	movwf	EUSART_print_hex@a
  2297     0595                     l1985:
  2298                           
  2299                           ;./eusart_driver.h: 66:     EUSART_write(ref[a]);
  2300     0595  0874               	movf	EUSART_print_hex@a,w
  2301     0596  3E31               	addlw	low (EUSART_print_hex@ref| (0+32768))
  2302     0597  0084               	movwf	4
  2303     0598  3085               	movlw	high (EUSART_print_hex@ref| (0+32768))
  2304     0599  1803               	skipnc
  2305     059A  3E01               	addlw	1
  2306     059B  0085               	movwf	5
  2307     059C  0800               	movf	0,w	;code access
  2308     059D  3186  268D  3185   	fcall	_EUSART_write
  2309     05A0                     l115:
  2310     05A0  0008               	return
  2311     05A1                     __end_of_EUSART_print_hex:
  2312                           
  2313                           	psect	text10
  2314     0557                     __ptext10:	
  2315 ;; *************** function _EUSART_print *****************
  2316 ;; Defined at:
  2317 ;;		line 44 in file "./eusart_driver.h"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  string          2    2[COMMON] PTR const unsigned char 
  2320 ;;		 -> STR_17(8), STR_14(11), STR_13(12), STR_12(11), 
  2321 ;;		 -> STR_11(12), STR_9(8), STR_6(11), STR_4(3), 
  2322 ;;		 -> STR_1(11), 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  c               1    7[COMMON] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;Total ram usage:        6 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; Hardware stack levels required when called: 2
  2341 ;; This function calls:
  2342 ;;		_EUSART_write
  2343 ;; This function is called by:
  2344 ;;		_LoRa_setup
  2345 ;;		_LoRa_send_data
  2346 ;;		_AT_command_check
  2347 ;;		_AT_command
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351     0557                     _EUSART_print:	
  2352                           ;psect for function _EUSART_print
  2353                           
  2354     0557                     l1963:	
  2355                           ;incstack = 0
  2356                           ; Regs used in _EUSART_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2357                           
  2358                           
  2359                           ;./eusart_driver.h: 45:     uint8_t c=0;
  2360     0557  01F7               	clrf	EUSART_print@c
  2361                           
  2362                           ;./eusart_driver.h: 46:     while(string[c]!=0){
  2363     0558  2D6C               	goto	l1969
  2364     0559                     l1965:
  2365                           
  2366                           ;./eusart_driver.h: 47:         EUSART_write(string[c]);
  2367     0559  0873               	movf	EUSART_print@string+1,w
  2368     055A  00F5               	movwf	??_EUSART_print+1
  2369     055B  0872               	movf	EUSART_print@string,w
  2370     055C  00F4               	movwf	??_EUSART_print
  2371     055D  0877               	movf	EUSART_print@c,w
  2372     055E  0774               	addwf	??_EUSART_print,w
  2373     055F  0084               	movwf	4
  2374     0560  0875               	movf	??_EUSART_print+1,w
  2375     0561  1803               	skipnc
  2376     0562  0A75               	incf	??_EUSART_print+1,w
  2377     0563  0085               	movwf	5
  2378     0564  0800               	movf	0,w	;code access
  2379     0565  3186  268D  3185   	fcall	_EUSART_write
  2380     0568                     l1967:
  2381                           
  2382                           ;./eusart_driver.h: 48:         c++;
  2383     0568  3001               	movlw	1
  2384     0569  00F4               	movwf	??_EUSART_print
  2385     056A  0874               	movf	??_EUSART_print,w
  2386     056B  07F7               	addwf	EUSART_print@c,f
  2387     056C                     l1969:
  2388                           
  2389                           ;./eusart_driver.h: 46:     while(string[c]!=0){
  2390     056C  0873               	movf	EUSART_print@string+1,w
  2391     056D  00F5               	movwf	??_EUSART_print+1
  2392     056E  0872               	movf	EUSART_print@string,w
  2393     056F  00F4               	movwf	??_EUSART_print
  2394     0570  0877               	movf	EUSART_print@c,w
  2395     0571  0774               	addwf	??_EUSART_print,w
  2396     0572  0084               	movwf	4
  2397     0573  0875               	movf	??_EUSART_print+1,w
  2398     0574  1803               	skipnc
  2399     0575  0A75               	incf	??_EUSART_print+1,w
  2400     0576  0085               	movwf	5
  2401     0577  0012               	moviw fsr0++
  2402     0578  1D03               	btfss	3,2
  2403     0579  2D7B               	goto	u1561
  2404     057A  2D7C               	goto	u1560
  2405     057B                     u1561:
  2406     057B  2D59               	goto	l1965
  2407     057C                     u1560:
  2408     057C                     l107:
  2409     057C  0008               	return
  2410     057D                     __end_of_EUSART_print:
  2411                           
  2412                           	psect	text11
  2413     068D                     __ptext11:	
  2414 ;; *************** function _EUSART_write *****************
  2415 ;; Defined at:
  2416 ;;		line 34 in file "./eusart_driver.h"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  txData          1    wreg     unsigned char 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  txData          1    1[COMMON] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2434 ;;Total ram usage:        1 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 1
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_EUSART_print
  2441 ;;		_EUSART_print_hex
  2442 ;;		_LoRa_send_data
  2443 ;;		_AT_command_check
  2444 ;;		_AT_command
  2445 ;;		_EUSART_print_dec
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449     068D                     _EUSART_write:	
  2450                           ;psect for function _EUSART_write
  2451                           
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _EUSART_write: [wreg]
  2455                           ;EUSART_write@txData stored from wreg
  2456     068D  00F1               	movwf	EUSART_write@txData
  2457     068E                     l1959:
  2458     068E                     l92:	
  2459                           ;./eusart_driver.h: 35:     while(PIR3bits.TX2IF == 0){}
  2460                           
  2461     068E  0141               	movlb	1	; select bank1
  2462     068F  1E0F               	btfss	15,4	;volatile
  2463     0690  2E92               	goto	u1551
  2464     0691  2E93               	goto	u1550
  2465     0692                     u1551:
  2466     0692  2E8E               	goto	l92
  2467     0693                     u1550:
  2468     0693                     l1961:
  2469                           
  2470                           ;./eusart_driver.h: 36:     TX2REG = txData;
  2471     0693  0871               	movf	EUSART_write@txData,w
  2472     0694  014C               	movlb	12	; select bank12
  2473     0695  0097               	movwf	23	;volatile
  2474     0696                     l95:
  2475     0696  0008               	return
  2476     0697                     __end_of_EUSART_write:
  2477                           
  2478                           	psect	text12
  2479     05A1                     __ptext12:	
  2480 ;; *************** function _I2C_setup_slave *****************
  2481 ;; Defined at:
  2482 ;;		line 41 in file "./i2c_driver.h"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  slaveAddress    1    wreg     unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  slaveAddress    1    1[COMMON] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;Total ram usage:        1 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510     05A1                     _I2C_setup_slave:	
  2511                           ;psect for function _I2C_setup_slave
  2512                           
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _I2C_setup_slave: [wreg+status,2+status,0]
  2516                           ;I2C_setup_slave@slaveAddress stored from wreg
  2517     05A1  00F1               	movwf	I2C_setup_slave@slaveAddress
  2518     05A2                     l1783:
  2519                           
  2520                           ;./i2c_driver.h: 43:     TRISAbits.TRISA1 = 1;
  2521     05A2  0140               	movlb	0	; select bank0
  2522     05A3  1492               	bsf	18,1	;volatile
  2523                           
  2524                           ;./i2c_driver.h: 44:     TRISAbits.TRISA2 = 1;
  2525     05A4  1512               	bsf	18,2	;volatile
  2526                           
  2527                           ;./i2c_driver.h: 45:     ODCONAbits.ODCA1 = 1;
  2528     05A5  017D               	movlb	61	; select bank61
  2529     05A6  148E               	bsf	14,1	;volatile
  2530                           
  2531                           ;./i2c_driver.h: 46:     ODCONAbits.ODCA2 = 1;
  2532     05A7  150E               	bsf	14,2	;volatile
  2533     05A8                     l1785:
  2534                           
  2535                           ;./i2c_driver.h: 47:     RA1PPS = 0x15;
  2536     05A8  3015               	movlw	21
  2537     05A9  017B               	movlb	59	; select bank59
  2538     05AA  008D               	movwf	13	;volatile
  2539                           
  2540                           ;./i2c_driver.h: 48:     RA2PPS = 0x16;
  2541     05AB  3016               	movlw	22
  2542     05AC  008E               	movwf	14	;volatile
  2543                           
  2544                           ;./i2c_driver.h: 49:     SSP1CLKPPS = 0x1;
  2545     05AD  3001               	movlw	1
  2546     05AE  017C               	movlb	60	; select bank60
  2547     05AF  00C7               	movwf	71	;volatile
  2548                           
  2549                           ;./i2c_driver.h: 50:     SSP1DATPPS = 0x2;
  2550     05B0  3002               	movlw	2
  2551     05B1  00C8               	movwf	72	;volatile
  2552     05B2                     l1787:
  2553                           
  2554                           ;./i2c_driver.h: 52:     SSP1STATbits.SMP = 1;
  2555     05B2  014D               	movlb	13	; select bank13
  2556     05B3  178F               	bsf	15,7	;volatile
  2557     05B4                     l1789:
  2558                           
  2559                           ;./i2c_driver.h: 54:     SSP1CON1bits.SSPM = 0b0110;
  2560     05B4  0810               	movf	16,w	;volatile
  2561     05B5  39F0               	andlw	-16
  2562     05B6  3806               	iorlw	6
  2563     05B7  0090               	movwf	16	;volatile
  2564     05B8                     l1791:
  2565                           
  2566                           ;./i2c_driver.h: 55:     SSP1CON2bits.SEN = 1;
  2567     05B8  1411               	bsf	17,0	;volatile
  2568     05B9                     l1793:
  2569                           
  2570                           ;./i2c_driver.h: 56:     SSP1CON3bits.SBCDE = 1;
  2571     05B9  1512               	bsf	18,2	;volatile
  2572     05BA                     l1795:
  2573                           
  2574                           ;./i2c_driver.h: 57:     SSP1ADD = slaveAddress;
  2575     05BA  0871               	movf	I2C_setup_slave@slaveAddress,w
  2576     05BB  008D               	movwf	13	;volatile
  2577     05BC                     l1797:
  2578                           
  2579                           ;./i2c_driver.h: 58:     SSP1CON1bits.SSPEN = 1;
  2580     05BC  1690               	bsf	16,5	;volatile
  2581     05BD                     l1799:
  2582                           
  2583                           ;./i2c_driver.h: 60:     PIR3bits.BCL1IF = 0;
  2584     05BD  0141               	movlb	1	; select bank1
  2585     05BE  138F               	bcf	15,7	;volatile
  2586     05BF                     l1801:
  2587                           
  2588                           ;./i2c_driver.h: 61:     PIR3bits.SSP1IF = 0;
  2589     05BF  130F               	bcf	15,6	;volatile
  2590     05C0                     l1803:
  2591                           
  2592                           ;./i2c_driver.h: 62:     PIE3bits.BCL1IE = 1;
  2593     05C0  1799               	bsf	25,7	;volatile
  2594     05C1                     l1805:
  2595                           
  2596                           ;./i2c_driver.h: 63:     PIE3bits.SSP1IE = 1;
  2597     05C1  1719               	bsf	25,6	;volatile
  2598     05C2                     l1807:
  2599                           
  2600                           ;./i2c_driver.h: 64:     INTCONbits.PEIE = 1;
  2601     05C2  170B               	bsf	11,6	;volatile
  2602     05C3                     l1809:
  2603                           
  2604                           ;./i2c_driver.h: 65:     INTCONbits.GIE = 1;
  2605     05C3  178B               	bsf	11,7	;volatile
  2606     05C4                     l127:
  2607     05C4  0008               	return
  2608     05C5                     __end_of_I2C_setup_slave:
  2609                           
  2610                           	psect	text13
  2611     0627                     __ptext13:	
  2612 ;; *************** function _EUSART_setup *****************
  2613 ;; Defined at:
  2614 ;;		line 8 in file "./eusart_driver.h"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642     0627                     _EUSART_setup:	
  2643                           ;psect for function _EUSART_setup
  2644                           
  2645     0627                     l1769:	
  2646                           ;incstack = 0
  2647                           ; Regs used in _EUSART_setup: [wreg+status,2]
  2648                           
  2649                           
  2650                           ;./eusart_driver.h: 10:     BAUD2CONbits.BRG16 = 1;
  2651     0627  014C               	movlb	12	; select bank12
  2652     0628  159C               	bsf	28,3	;volatile
  2653                           
  2654                           ;./eusart_driver.h: 12:     TX2STAbits.SYNC = 0;
  2655     0629  121B               	bcf	27,4	;volatile
  2656                           
  2657                           ;./eusart_driver.h: 14:     TX2STAbits.TXEN = 1;
  2658     062A  169B               	bsf	27,5	;volatile
  2659                           
  2660                           ;./eusart_driver.h: 16:     TX2STAbits.BRGH = 1;
  2661     062B  151B               	bsf	27,2	;volatile
  2662                           
  2663                           ;./eusart_driver.h: 18:     RC2STAbits.CREN = 1;
  2664     062C  161A               	bsf	26,4	;volatile
  2665                           
  2666                           ;./eusart_driver.h: 20:     RC2STAbits.SPEN = 1;
  2667     062D  179A               	bsf	26,7	;volatile
  2668     062E                     l1771:
  2669                           
  2670                           ;./eusart_driver.h: 22:     SP2BRGL = 25;
  2671     062E  3019               	movlw	25
  2672     062F  0098               	movwf	24	;volatile
  2673     0630                     l1773:
  2674                           
  2675                           ;./eusart_driver.h: 23:     SP2BRGH = 0;
  2676     0630  0199               	clrf	25	;volatile
  2677     0631                     l1775:
  2678                           
  2679                           ;./eusart_driver.h: 25:     RA5PPS = 0x11;
  2680     0631  3011               	movlw	17
  2681     0632  017B               	movlb	59	; select bank59
  2682     0633  0091               	movwf	17	;volatile
  2683     0634                     l1777:
  2684                           
  2685                           ;./eusart_driver.h: 27:     RX2PPS = 0x4;
  2686     0634  3004               	movlw	4
  2687     0635  017C               	movlb	60	; select bank60
  2688     0636  00C3               	movwf	67	;volatile
  2689     0637                     l1779:
  2690                           
  2691                           ;./eusart_driver.h: 29:     TRISAbits.TRISA5 = 0;
  2692     0637  0140               	movlb	0	; select bank0
  2693     0638  1292               	bcf	18,5	;volatile
  2694     0639                     l1781:
  2695                           
  2696                           ;./eusart_driver.h: 31:     TRISAbits.TRISA4 = 1;
  2697     0639  1612               	bsf	18,4	;volatile
  2698     063A                     l89:
  2699     063A  0008               	return
  2700     063B                     __end_of_EUSART_setup:
  2701                           
  2702                           	psect	text14
  2703     063B                     __ptext14:	
  2704 ;; *************** function _Analog_setup *****************
  2705 ;; Defined at:
  2706 ;;		line 7 in file "./analog_driver.h"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; Hardware stack levels required when called: 1
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734     063B                     _Analog_setup:	
  2735                           ;psect for function _Analog_setup
  2736                           
  2737     063B                     l1811:	
  2738                           ;incstack = 0
  2739                           ; Regs used in _Analog_setup: [wreg+status,2+status,0]
  2740                           
  2741                           
  2742                           ;./analog_driver.h: 9:     TRISA |= (1<<0);
  2743     063B  0140               	movlb	0	; select bank0
  2744     063C  1412               	bsf	18,0	;volatile
  2745                           
  2746                           ;./analog_driver.h: 10:     ANSELA |= (1<<0);
  2747     063D  017D               	movlb	61	; select bank61
  2748     063E  140C               	bsf	12,0	;volatile
  2749     063F                     l1813:
  2750                           
  2751                           ;./analog_driver.h: 11:     ADPCH = 0 & 0b00111111;
  2752     063F  017A               	movlb	58	; select bank58
  2753     0640  019F               	clrf	31	;volatile
  2754                           
  2755                           ;./analog_driver.h: 12:     ADREF = 0x0;
  2756     0641  01AB               	clrf	43	;volatile
  2757     0642                     l1815:
  2758                           
  2759                           ;./analog_driver.h: 13:     ADCON0bits.CS = 1;
  2760     0642  1626               	bsf	38,4	;volatile
  2761     0643                     l1817:
  2762                           
  2763                           ;./analog_driver.h: 14:     ADCON0bits.FM = 1;
  2764     0643  0826               	movf	38,w	;volatile
  2765     0644  39F3               	andlw	-13
  2766     0645  3804               	iorlw	4
  2767     0646  00A6               	movwf	38	;volatile
  2768     0647                     l171:
  2769     0647  0008               	return
  2770     0648                     __end_of_Analog_setup:
  2771                           
  2772                           	psect	text15
  2773     04CD                     __ptext15:	
  2774 ;; *************** function _Analog_read_percent *****************
  2775 ;; Defined at:
  2776 ;;		line 31 in file "./analog_driver.h"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  a               2   40[BANK0 ] unsigned short 
  2781 ;;  r               1   42[BANK0 ] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      unsigned char 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;Total ram usage:        3 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 3
  2798 ;; This function calls:
  2799 ;;		_Analog_read_raw
  2800 ;;		___flmul
  2801 ;;		___fltol
  2802 ;;		___xxtofl
  2803 ;; This function is called by:
  2804 ;;		_main
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808     04CD                     _Analog_read_percent:	
  2809                           ;psect for function _Analog_read_percent
  2810                           
  2811     04CD                     l1819:	
  2812                           ;incstack = 0
  2813                           ; Regs used in _Analog_read_percent: [wreg+status,2+status,0+pclath+cstack]
  2814                           
  2815                           
  2816                           ;./analog_driver.h: 32:     uint16_t a = Analog_read_raw();
  2817     04CD  3186  2660  3184   	fcall	_Analog_read_raw
  2818     04D0  0872               	movf	?_Analog_read_raw+1,w
  2819     04D1  0140               	movlb	0	; select bank0
  2820     04D2  00C9               	movwf	Analog_read_percent@a+1
  2821     04D3  0871               	movf	?_Analog_read_raw,w
  2822     04D4  00C8               	movwf	Analog_read_percent@a
  2823     04D5                     l1821:
  2824                           
  2825                           ;./analog_driver.h: 33:     uint8_t r = a*(100.0/1023.0);
  2826     04D5  0848               	movf	Analog_read_percent@a,w
  2827     04D6  00F1               	movwf	___xxtofl@val
  2828     04D7  0849               	movf	Analog_read_percent@a+1,w
  2829     04D8  00F2               	movwf	___xxtofl@val+1
  2830     04D9  01F3               	clrf	___xxtofl@val+2
  2831     04DA  01F4               	clrf	___xxtofl@val+3
  2832     04DB  3000               	movlw	0
  2833     04DC  3182  2282  3184   	fcall	___xxtofl
  2834     04DF  0874               	movf	?___xxtofl+3,w
  2835     04E0  0140               	movlb	0	; select bank0
  2836     04E1  00AD               	movwf	___flmul@a+3
  2837     04E2  0873               	movf	?___xxtofl+2,w
  2838     04E3  00AC               	movwf	___flmul@a+2
  2839     04E4  0872               	movf	?___xxtofl+1,w
  2840     04E5  00AB               	movwf	___flmul@a+1
  2841     04E6  0871               	movf	?___xxtofl,w
  2842     04E7  00AA               	movwf	___flmul@a
  2843     04E8  303D               	movlw	61
  2844     04E9  00A9               	movwf	___flmul@b+3
  2845     04EA  30C8               	movlw	200
  2846     04EB  00A8               	movwf	___flmul@b+2
  2847     04EC  3032               	movlw	50
  2848     04ED  00A7               	movwf	___flmul@b+1
  2849     04EE  300D               	movlw	13
  2850     04EF  00A6               	movwf	___flmul@b
  2851     04F0  3180  2047  3184   	fcall	___flmul
  2852     04F3  0140               	movlb	0	; select bank0
  2853     04F4  0829               	movf	?___flmul+3,w
  2854     04F5  00C3               	movwf	___fltol@f1+3
  2855     04F6  0828               	movf	?___flmul+2,w
  2856     04F7  00C2               	movwf	___fltol@f1+2
  2857     04F8  0827               	movf	?___flmul+1,w
  2858     04F9  00C1               	movwf	___fltol@f1+1
  2859     04FA  0826               	movf	?___flmul,w
  2860     04FB  00C0               	movwf	___fltol@f1
  2861     04FC  3183  23B1  3184   	fcall	___fltol
  2862     04FF  0140               	movlb	0	; select bank0
  2863     0500  0840               	movf	?___fltol,w
  2864     0501  00CA               	movwf	Analog_read_percent@r
  2865     0502                     l1823:
  2866                           
  2867                           ;./analog_driver.h: 34:     return r;
  2868     0502  084A               	movf	Analog_read_percent@r,w
  2869     0503                     l183:
  2870     0503  0008               	return
  2871     0504                     __end_of_Analog_read_percent:
  2872                           
  2873                           	psect	text16
  2874     0282                     __ptext16:	
  2875 ;; *************** function ___xxtofl *****************
  2876 ;; Defined at:
  2877 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  sign            1    wreg     unsigned char 
  2880 ;;  val             4    1[COMMON] long 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  sign            1    0[BANK0 ] unsigned char 
  2883 ;;  arg             4    2[BANK0 ] unsigned long 
  2884 ;;  exp             1    1[BANK0 ] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  4    1[COMMON] unsigned char 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2895 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2896 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2897 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2898 ;;Total ram usage:       14 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; Hardware stack levels required when called: 1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_Analog_read_percent
  2905 ;;		_I2C_SHT4x_read
  2906 ;;		_Analog_read_voltage
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910     0282                     ___xxtofl:	
  2911                           ;psect for function ___xxtofl
  2912                           
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2916                           ;___xxtofl@sign stored from wreg
  2917     0282  0140               	movlb	0	; select bank0
  2918     0283  00A0               	movwf	___xxtofl@sign
  2919     0284                     l1721:
  2920     0284  0820               	movf	___xxtofl@sign,w
  2921     0285  1903               	btfsc	3,2
  2922     0286  2A88               	goto	u1281
  2923     0287  2A89               	goto	u1280
  2924     0288                     u1281:
  2925     0288  2A9D               	goto	l1727
  2926     0289                     u1280:
  2927     0289                     l1723:
  2928     0289  1FF4               	btfss	___xxtofl@val+3,7
  2929     028A  2A8C               	goto	u1291
  2930     028B  2A8D               	goto	u1290
  2931     028C                     u1291:
  2932     028C  2A9D               	goto	l1727
  2933     028D                     u1290:
  2934     028D                     l1725:
  2935     028D  0971               	comf	___xxtofl@val,w
  2936     028E  00A2               	movwf	___xxtofl@arg
  2937     028F  0972               	comf	___xxtofl@val+1,w
  2938     0290  00A3               	movwf	___xxtofl@arg+1
  2939     0291  0973               	comf	___xxtofl@val+2,w
  2940     0292  00A4               	movwf	___xxtofl@arg+2
  2941     0293  0974               	comf	___xxtofl@val+3,w
  2942     0294  00A5               	movwf	___xxtofl@arg+3
  2943     0295  0AA2               	incf	___xxtofl@arg,f
  2944     0296  1903               	skipnz
  2945     0297  0AA3               	incf	___xxtofl@arg+1,f
  2946     0298  1903               	skipnz
  2947     0299  0AA4               	incf	___xxtofl@arg+2,f
  2948     029A  1903               	skipnz
  2949     029B  0AA5               	incf	___xxtofl@arg+3,f
  2950     029C  2AA5               	goto	l834
  2951     029D                     l1727:
  2952     029D  0874               	movf	___xxtofl@val+3,w
  2953     029E  00A5               	movwf	___xxtofl@arg+3
  2954     029F  0873               	movf	___xxtofl@val+2,w
  2955     02A0  00A4               	movwf	___xxtofl@arg+2
  2956     02A1  0872               	movf	___xxtofl@val+1,w
  2957     02A2  00A3               	movwf	___xxtofl@arg+1
  2958     02A3  0871               	movf	___xxtofl@val,w
  2959     02A4  00A2               	movwf	___xxtofl@arg
  2960     02A5                     l834:
  2961     02A5  0874               	movf	___xxtofl@val+3,w
  2962     02A6  0473               	iorwf	___xxtofl@val+2,w
  2963     02A7  0472               	iorwf	___xxtofl@val+1,w
  2964     02A8  0471               	iorwf	___xxtofl@val,w
  2965     02A9  1D03               	skipz
  2966     02AA  2AAC               	goto	u1301
  2967     02AB  2AAD               	goto	u1300
  2968     02AC                     u1301:
  2969     02AC  2AB6               	goto	l1733
  2970     02AD                     u1300:
  2971     02AD                     l1729:
  2972     02AD  3000               	movlw	0
  2973     02AE  00F4               	movwf	?___xxtofl+3
  2974     02AF  3000               	movlw	0
  2975     02B0  00F3               	movwf	?___xxtofl+2
  2976     02B1  3000               	movlw	0
  2977     02B2  00F2               	movwf	?___xxtofl+1
  2978     02B3  3000               	movlw	0
  2979     02B4  00F1               	movwf	?___xxtofl
  2980     02B5  2B2C               	goto	l836
  2981     02B6                     l1733:
  2982     02B6  3096               	movlw	150
  2983     02B7  00A1               	movwf	___xxtofl@exp
  2984     02B8  2AC4               	goto	l1737
  2985     02B9                     l1735:
  2986     02B9  3001               	movlw	1
  2987     02BA  00F5               	movwf	??___xxtofl
  2988     02BB  0875               	movf	??___xxtofl,w
  2989     02BC  07A1               	addwf	___xxtofl@exp,f
  2990     02BD  3001               	movlw	1
  2991     02BE                     u1315:
  2992     02BE  36A5               	lsrf	___xxtofl@arg+3,f
  2993     02BF  0CA4               	rrf	___xxtofl@arg+2,f
  2994     02C0  0CA3               	rrf	___xxtofl@arg+1,f
  2995     02C1  0CA2               	rrf	___xxtofl@arg,f
  2996     02C2  0B89               	decfsz	9,f
  2997     02C3  2ABE               	goto	u1315
  2998     02C4                     l1737:
  2999     02C4  30FE               	movlw	254
  3000     02C5  0525               	andwf	___xxtofl@arg+3,w
  3001     02C6  1D03               	btfss	3,2
  3002     02C7  2AC9               	goto	u1321
  3003     02C8  2ACA               	goto	u1320
  3004     02C9                     u1321:
  3005     02C9  2AB9               	goto	l1735
  3006     02CA                     u1320:
  3007     02CA  2ADE               	goto	l840
  3008     02CB                     l1739:
  3009     02CB  3001               	movlw	1
  3010     02CC  00F5               	movwf	??___xxtofl
  3011     02CD  0875               	movf	??___xxtofl,w
  3012     02CE  07A1               	addwf	___xxtofl@exp,f
  3013     02CF                     l1741:
  3014     02CF  3001               	movlw	1
  3015     02D0  07A2               	addwf	___xxtofl@arg,f
  3016     02D1  3000               	movlw	0
  3017     02D2  3DA3               	addwfc	___xxtofl@arg+1,f
  3018     02D3  3000               	movlw	0
  3019     02D4  3DA4               	addwfc	___xxtofl@arg+2,f
  3020     02D5  3000               	movlw	0
  3021     02D6  3DA5               	addwfc	___xxtofl@arg+3,f
  3022     02D7                     l1743:
  3023     02D7  3001               	movlw	1
  3024     02D8                     u1335:
  3025     02D8  36A5               	lsrf	___xxtofl@arg+3,f
  3026     02D9  0CA4               	rrf	___xxtofl@arg+2,f
  3027     02DA  0CA3               	rrf	___xxtofl@arg+1,f
  3028     02DB  0CA2               	rrf	___xxtofl@arg,f
  3029     02DC  0B89               	decfsz	9,f
  3030     02DD  2AD8               	goto	u1335
  3031     02DE                     l840:
  3032     02DE  30FF               	movlw	255
  3033     02DF  0525               	andwf	___xxtofl@arg+3,w
  3034     02E0  1D03               	btfss	3,2
  3035     02E1  2AE3               	goto	u1341
  3036     02E2  2AE4               	goto	u1340
  3037     02E3                     u1341:
  3038     02E3  2ACB               	goto	l1739
  3039     02E4                     u1340:
  3040     02E4  2AEE               	goto	l1747
  3041     02E5                     l1745:
  3042     02E5  3001               	movlw	1
  3043     02E6  02A1               	subwf	___xxtofl@exp,f
  3044     02E7  3001               	movlw	1
  3045     02E8                     u1355:
  3046     02E8  35A2               	lslf	___xxtofl@arg,f
  3047     02E9  0DA3               	rlf	___xxtofl@arg+1,f
  3048     02EA  0DA4               	rlf	___xxtofl@arg+2,f
  3049     02EB  0DA5               	rlf	___xxtofl@arg+3,f
  3050     02EC  0B89               	decfsz	9,f
  3051     02ED  2AE8               	goto	u1355
  3052     02EE                     l1747:
  3053     02EE  1BA4               	btfsc	___xxtofl@arg+2,7
  3054     02EF  2AF1               	goto	u1361
  3055     02F0  2AF2               	goto	u1360
  3056     02F1                     u1361:
  3057     02F1  2AF8               	goto	l847
  3058     02F2                     u1360:
  3059     02F2                     l1749:
  3060     02F2  3002               	movlw	2
  3061     02F3  0221               	subwf	___xxtofl@exp,w
  3062     02F4  1803               	skipnc
  3063     02F5  2AF7               	goto	u1371
  3064     02F6  2AF8               	goto	u1370
  3065     02F7                     u1371:
  3066     02F7  2AE5               	goto	l1745
  3067     02F8                     u1370:
  3068     02F8                     l847:
  3069     02F8  1821               	btfsc	___xxtofl@exp,0
  3070     02F9  2AFB               	goto	u1381
  3071     02FA  2AFC               	goto	u1380
  3072     02FB                     u1381:
  3073     02FB  2B04               	goto	l848
  3074     02FC                     u1380:
  3075     02FC                     l1751:
  3076     02FC  30FF               	movlw	255
  3077     02FD  05A2               	andwf	___xxtofl@arg,f
  3078     02FE  30FF               	movlw	255
  3079     02FF  05A3               	andwf	___xxtofl@arg+1,f
  3080     0300  307F               	movlw	127
  3081     0301  05A4               	andwf	___xxtofl@arg+2,f
  3082     0302  30FF               	movlw	255
  3083     0303  05A5               	andwf	___xxtofl@arg+3,f
  3084     0304                     l848:
  3085     0304  1003               	clrc
  3086     0305  0CA1               	rrf	___xxtofl@exp,f
  3087     0306                     l1753:
  3088     0306  0821               	movf	___xxtofl@exp,w
  3089     0307  00F5               	movwf	??___xxtofl
  3090     0308  01F6               	clrf	??___xxtofl+1
  3091     0309  01F7               	clrf	??___xxtofl+2
  3092     030A  01F8               	clrf	??___xxtofl+3
  3093     030B  3018               	movlw	24
  3094     030C                     u1395:
  3095     030C  35F5               	lslf	??___xxtofl,f
  3096     030D  0DF6               	rlf	??___xxtofl+1,f
  3097     030E  0DF7               	rlf	??___xxtofl+2,f
  3098     030F  0DF8               	rlf	??___xxtofl+3,f
  3099     0310                     u1390:
  3100     0310  0B89               	decfsz	9,f
  3101     0311  2B0C               	goto	u1395
  3102     0312  0875               	movf	??___xxtofl,w
  3103     0313  04A2               	iorwf	___xxtofl@arg,f
  3104     0314  0876               	movf	??___xxtofl+1,w
  3105     0315  04A3               	iorwf	___xxtofl@arg+1,f
  3106     0316  0877               	movf	??___xxtofl+2,w
  3107     0317  04A4               	iorwf	___xxtofl@arg+2,f
  3108     0318  0878               	movf	??___xxtofl+3,w
  3109     0319  04A5               	iorwf	___xxtofl@arg+3,f
  3110     031A                     l1755:
  3111     031A  0820               	movf	___xxtofl@sign,w
  3112     031B  1903               	btfsc	3,2
  3113     031C  2B1E               	goto	u1401
  3114     031D  2B1F               	goto	u1400
  3115     031E                     u1401:
  3116     031E  2B24               	goto	l1761
  3117     031F                     u1400:
  3118     031F                     l1757:
  3119     031F  1FF4               	btfss	___xxtofl@val+3,7
  3120     0320  2B22               	goto	u1411
  3121     0321  2B23               	goto	u1410
  3122     0322                     u1411:
  3123     0322  2B24               	goto	l1761
  3124     0323                     u1410:
  3125     0323                     l1759:
  3126     0323  17A5               	bsf	___xxtofl@arg+3,7
  3127     0324                     l1761:
  3128     0324  0825               	movf	___xxtofl@arg+3,w
  3129     0325  00F4               	movwf	?___xxtofl+3
  3130     0326  0824               	movf	___xxtofl@arg+2,w
  3131     0327  00F3               	movwf	?___xxtofl+2
  3132     0328  0823               	movf	___xxtofl@arg+1,w
  3133     0329  00F2               	movwf	?___xxtofl+1
  3134     032A  0822               	movf	___xxtofl@arg,w
  3135     032B  00F1               	movwf	?___xxtofl
  3136     032C                     l836:
  3137     032C  0008               	return
  3138     032D                     __end_of___xxtofl:
  3139                           
  3140                           	psect	text17
  3141     03B1                     __ptext17:	
  3142 ;; *************** function ___fltol *****************
  3143 ;; Defined at:
  3144 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  f1              4   32[BANK0 ] unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  exp1            1   11[COMMON] unsigned char 
  3149 ;;  sign1           1   10[COMMON] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  4   32[BANK0 ] long 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;Total ram usage:       10 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 1
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_Analog_read_percent
  3170 ;;		_Analog_read_voltage
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174     03B1                     ___fltol:	
  3175                           ;psect for function ___fltol
  3176                           
  3177     03B1                     l1545:	
  3178                           ;incstack = 0
  3179                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3180                           
  3181     03B1  1003               	clrc
  3182     03B2  0140               	movlb	0	; select bank0
  3183     03B3  0D42               	rlf	___fltol@f1+2,w
  3184     03B4  0D43               	rlf	___fltol@f1+3,w
  3185     03B5  00FB               	movwf	___fltol@exp1
  3186     03B6  087B               	movf	___fltol@exp1,w
  3187     03B7  1D03               	btfss	3,2
  3188     03B8  2BBA               	goto	u921
  3189     03B9  2BBB               	goto	u920
  3190     03BA                     u921:
  3191     03BA  2BC4               	goto	l1551
  3192     03BB                     u920:
  3193     03BB                     l1547:
  3194     03BB  3000               	movlw	0
  3195     03BC  00C3               	movwf	?___fltol+3
  3196     03BD  3000               	movlw	0
  3197     03BE  00C2               	movwf	?___fltol+2
  3198     03BF  3000               	movlw	0
  3199     03C0  00C1               	movwf	?___fltol+1
  3200     03C1  3000               	movlw	0
  3201     03C2  00C0               	movwf	?___fltol
  3202     03C3  2C21               	goto	l587
  3203     03C4                     l1551:
  3204     03C4  0840               	movf	___fltol@f1,w
  3205     03C5  00C4               	movwf	??___fltol
  3206     03C6  0841               	movf	___fltol@f1+1,w
  3207     03C7  00C5               	movwf	??___fltol+1
  3208     03C8  0842               	movf	___fltol@f1+2,w
  3209     03C9  00C6               	movwf	??___fltol+2
  3210     03CA  0843               	movf	___fltol@f1+3,w
  3211     03CB  00C7               	movwf	??___fltol+3
  3212     03CC  301F               	movlw	31
  3213     03CD                     u935:
  3214     03CD  36C7               	lsrf	??___fltol+3,f
  3215     03CE  0CC6               	rrf	??___fltol+2,f
  3216     03CF  0CC5               	rrf	??___fltol+1,f
  3217     03D0  0CC4               	rrf	??___fltol,f
  3218     03D1                     u930:
  3219     03D1  0B89               	decfsz	9,f
  3220     03D2  2BCD               	goto	u935
  3221     03D3  0844               	movf	??___fltol,w
  3222     03D4  00FA               	movwf	___fltol@sign1
  3223     03D5                     l1553:
  3224     03D5  17C2               	bsf	___fltol@f1+2,7
  3225     03D6                     l1555:
  3226     03D6  30FF               	movlw	255
  3227     03D7  05C0               	andwf	___fltol@f1,f
  3228     03D8  30FF               	movlw	255
  3229     03D9  05C1               	andwf	___fltol@f1+1,f
  3230     03DA  30FF               	movlw	255
  3231     03DB  05C2               	andwf	___fltol@f1+2,f
  3232     03DC  3000               	movlw	0
  3233     03DD  05C3               	andwf	___fltol@f1+3,f
  3234     03DE                     l1557:
  3235     03DE  3096               	movlw	150
  3236     03DF  02FB               	subwf	___fltol@exp1,f
  3237     03E0                     l1559:
  3238     03E0  1FFB               	btfss	___fltol@exp1,7
  3239     03E1  2BE3               	goto	u941
  3240     03E2  2BE4               	goto	u940
  3241     03E3                     u941:
  3242     03E3  2BFC               	goto	l1569
  3243     03E4                     u940:
  3244     03E4                     l1561:
  3245     03E4  087B               	movf	___fltol@exp1,w
  3246     03E5  3A80               	xorlw	128
  3247     03E6  3E97               	addlw	151
  3248     03E7  1803               	skipnc
  3249     03E8  2BEA               	goto	u951
  3250     03E9  2BEB               	goto	u950
  3251     03EA                     u951:
  3252     03EA  2BEC               	goto	l1567
  3253     03EB                     u950:
  3254     03EB  2BBB               	goto	l1547
  3255     03EC                     l1567:
  3256     03EC  3001               	movlw	1
  3257     03ED                     u965:
  3258     03ED  36C3               	lsrf	___fltol@f1+3,f
  3259     03EE  0CC2               	rrf	___fltol@f1+2,f
  3260     03EF  0CC1               	rrf	___fltol@f1+1,f
  3261     03F0  0CC0               	rrf	___fltol@f1,f
  3262     03F1  0B89               	decfsz	9,f
  3263     03F2  2BED               	goto	u965
  3264     03F3  3001               	movlw	1
  3265     03F4  00C4               	movwf	??___fltol
  3266     03F5  0844               	movf	??___fltol,w
  3267     03F6  07FB               	addwf	___fltol@exp1,f
  3268     03F7  1D03               	btfss	3,2
  3269     03F8  2BFA               	goto	u971
  3270     03F9  2BFB               	goto	u970
  3271     03FA                     u971:
  3272     03FA  2BEC               	goto	l1567
  3273     03FB                     u970:
  3274     03FB  2C11               	goto	l1577
  3275     03FC                     l1569:
  3276     03FC  3020               	movlw	32
  3277     03FD  027B               	subwf	___fltol@exp1,w
  3278     03FE  1C03               	skipc
  3279     03FF  2C01               	goto	u981
  3280     0400  2C02               	goto	u980
  3281     0401                     u981:
  3282     0401  2C0C               	goto	l594
  3283     0402                     u980:
  3284     0402  2BBB               	goto	l1547
  3285     0403                     l1575:
  3286     0403  3001               	movlw	1
  3287     0404                     u995:
  3288     0404  35C0               	lslf	___fltol@f1,f
  3289     0405  0DC1               	rlf	___fltol@f1+1,f
  3290     0406  0DC2               	rlf	___fltol@f1+2,f
  3291     0407  0DC3               	rlf	___fltol@f1+3,f
  3292     0408  0B89               	decfsz	9,f
  3293     0409  2C04               	goto	u995
  3294     040A  3001               	movlw	1
  3295     040B  02FB               	subwf	___fltol@exp1,f
  3296     040C                     l594:
  3297     040C  087B               	movf	___fltol@exp1,w
  3298     040D  1D03               	btfss	3,2
  3299     040E  2C10               	goto	u1001
  3300     040F  2C11               	goto	u1000
  3301     0410                     u1001:
  3302     0410  2C03               	goto	l1575
  3303     0411                     u1000:
  3304     0411                     l1577:
  3305     0411  087A               	movf	___fltol@sign1,w
  3306     0412  1903               	btfsc	3,2
  3307     0413  2C15               	goto	u1011
  3308     0414  2C16               	goto	u1010
  3309     0415                     u1011:
  3310     0415  2C21               	goto	l597
  3311     0416                     u1010:
  3312     0416                     l1579:
  3313     0416  09C0               	comf	___fltol@f1,f
  3314     0417  09C1               	comf	___fltol@f1+1,f
  3315     0418  09C2               	comf	___fltol@f1+2,f
  3316     0419  09C3               	comf	___fltol@f1+3,f
  3317     041A  0AC0               	incf	___fltol@f1,f
  3318     041B  1903               	skipnz
  3319     041C  0AC1               	incf	___fltol@f1+1,f
  3320     041D  1903               	skipnz
  3321     041E  0AC2               	incf	___fltol@f1+2,f
  3322     041F  1903               	skipnz
  3323     0420  0AC3               	incf	___fltol@f1+3,f
  3324     0421                     l597:
  3325     0421                     l587:
  3326     0421  0008               	return
  3327     0422                     __end_of___fltol:
  3328                           
  3329                           	psect	text18
  3330     0047                     __ptext18:	
  3331 ;; *************** function ___flmul *****************
  3332 ;; Defined at:
  3333 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  b               4    6[BANK0 ] long 
  3336 ;;  a               4   10[BANK0 ] long 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  prod            4   26[BANK0 ] struct .
  3339 ;;  grs             4   20[BANK0 ] unsigned long 
  3340 ;;  temp            2   30[BANK0 ] struct .
  3341 ;;  bexp            1   25[BANK0 ] unsigned char 
  3342 ;;  aexp            1   24[BANK0 ] unsigned char 
  3343 ;;  sign            1   19[BANK0 ] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  4    6[BANK0 ] unsigned char 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0, pclath, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3353 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;Total ram usage:       26 bytes
  3358 ;; Hardware stack levels used: 1
  3359 ;; Hardware stack levels required when called: 2
  3360 ;; This function calls:
  3361 ;;		__Umul8_16
  3362 ;; This function is called by:
  3363 ;;		_Analog_read_percent
  3364 ;;		_I2C_SHT4x_read
  3365 ;;		_Analog_read_voltage
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369     0047                     ___flmul:	
  3370                           ;psect for function ___flmul
  3371                           
  3372     0047                     l1581:	
  3373                           ;incstack = 0
  3374                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3375                           
  3376     0047  0140               	movlb	0	; select bank0
  3377     0048  0829               	movf	___flmul@b+3,w
  3378     0049  3980               	andlw	128
  3379     004A  00B3               	movwf	___flmul@sign
  3380     004B                     l1583:
  3381     004B  3529               	lslf	___flmul@b+3,w
  3382     004C  00B9               	movwf	___flmul@bexp
  3383     004D                     l1585:
  3384     004D  1FA8               	btfss	___flmul@b+2,7
  3385     004E  2850               	goto	u1021
  3386     004F  2851               	goto	u1020
  3387     0050                     u1021:
  3388     0050  2852               	goto	l1589
  3389     0051                     u1020:
  3390     0051                     l1587:
  3391     0051  1439               	bsf	___flmul@bexp,0
  3392     0052                     l1589:
  3393     0052  0839               	movf	___flmul@bexp,w
  3394     0053  1903               	btfsc	3,2
  3395     0054  2856               	goto	u1031
  3396     0055  2857               	goto	u1030
  3397     0056                     u1031:
  3398     0056  2866               	goto	l1597
  3399     0057                     u1030:
  3400     0057                     l1591:
  3401     0057  0A39               	incf	___flmul@bexp,w
  3402     0058  1D03               	btfss	3,2
  3403     0059  285B               	goto	u1041
  3404     005A  285C               	goto	u1040
  3405     005B                     u1041:
  3406     005B  2864               	goto	l1595
  3407     005C                     u1040:
  3408     005C                     l1593:
  3409     005C  3000               	movlw	0
  3410     005D  00A9               	movwf	___flmul@b+3
  3411     005E  3000               	movlw	0
  3412     005F  00A8               	movwf	___flmul@b+2
  3413     0060  3000               	movlw	0
  3414     0061  00A7               	movwf	___flmul@b+1
  3415     0062  3000               	movlw	0
  3416     0063  00A6               	movwf	___flmul@b
  3417     0064                     l1595:
  3418     0064  17A8               	bsf	___flmul@b+2,7
  3419     0065  286E               	goto	l1599
  3420     0066                     l1597:
  3421     0066  3000               	movlw	0
  3422     0067  00A9               	movwf	___flmul@b+3
  3423     0068  3000               	movlw	0
  3424     0069  00A8               	movwf	___flmul@b+2
  3425     006A  3000               	movlw	0
  3426     006B  00A7               	movwf	___flmul@b+1
  3427     006C  3000               	movlw	0
  3428     006D  00A6               	movwf	___flmul@b
  3429     006E                     l1599:
  3430     006E  082D               	movf	___flmul@a+3,w
  3431     006F  3980               	andlw	128
  3432     0070  00AE               	movwf	??___flmul
  3433     0071  082E               	movf	??___flmul,w
  3434     0072  06B3               	xorwf	___flmul@sign,f
  3435     0073                     l1601:
  3436     0073  352D               	lslf	___flmul@a+3,w
  3437     0074  00B8               	movwf	___flmul@aexp
  3438     0075                     l1603:
  3439     0075  1FAC               	btfss	___flmul@a+2,7
  3440     0076  2878               	goto	u1051
  3441     0077  2879               	goto	u1050
  3442     0078                     u1051:
  3443     0078  287A               	goto	l1607
  3444     0079                     u1050:
  3445     0079                     l1605:
  3446     0079  1438               	bsf	___flmul@aexp,0
  3447     007A                     l1607:
  3448     007A  0838               	movf	___flmul@aexp,w
  3449     007B  1903               	btfsc	3,2
  3450     007C  287E               	goto	u1061
  3451     007D  287F               	goto	u1060
  3452     007E                     u1061:
  3453     007E  288E               	goto	l1615
  3454     007F                     u1060:
  3455     007F                     l1609:
  3456     007F  0A38               	incf	___flmul@aexp,w
  3457     0080  1D03               	btfss	3,2
  3458     0081  2883               	goto	u1071
  3459     0082  2884               	goto	u1070
  3460     0083                     u1071:
  3461     0083  288C               	goto	l1613
  3462     0084                     u1070:
  3463     0084                     l1611:
  3464     0084  3000               	movlw	0
  3465     0085  00AD               	movwf	___flmul@a+3
  3466     0086  3000               	movlw	0
  3467     0087  00AC               	movwf	___flmul@a+2
  3468     0088  3000               	movlw	0
  3469     0089  00AB               	movwf	___flmul@a+1
  3470     008A  3000               	movlw	0
  3471     008B  00AA               	movwf	___flmul@a
  3472     008C                     l1613:
  3473     008C  17AC               	bsf	___flmul@a+2,7
  3474     008D  2896               	goto	l1617
  3475     008E                     l1615:
  3476     008E  3000               	movlw	0
  3477     008F  00AD               	movwf	___flmul@a+3
  3478     0090  3000               	movlw	0
  3479     0091  00AC               	movwf	___flmul@a+2
  3480     0092  3000               	movlw	0
  3481     0093  00AB               	movwf	___flmul@a+1
  3482     0094  3000               	movlw	0
  3483     0095  00AA               	movwf	___flmul@a
  3484     0096                     l1617:
  3485     0096  0838               	movf	___flmul@aexp,w
  3486     0097  1903               	btfsc	3,2
  3487     0098  289A               	goto	u1081
  3488     0099  289B               	goto	u1080
  3489     009A                     u1081:
  3490     009A  28A0               	goto	l1621
  3491     009B                     u1080:
  3492     009B                     l1619:
  3493     009B  0839               	movf	___flmul@bexp,w
  3494     009C  1D03               	btfss	3,2
  3495     009D  289F               	goto	u1091
  3496     009E  28A0               	goto	u1090
  3497     009F                     u1091:
  3498     009F  28A9               	goto	l1625
  3499     00A0                     u1090:
  3500     00A0                     l1621:
  3501     00A0  3000               	movlw	0
  3502     00A1  00A9               	movwf	?___flmul+3
  3503     00A2  3000               	movlw	0
  3504     00A3  00A8               	movwf	?___flmul+2
  3505     00A4  3000               	movlw	0
  3506     00A5  00A7               	movwf	?___flmul+1
  3507     00A6  3000               	movlw	0
  3508     00A7  00A6               	movwf	?___flmul
  3509     00A8  2A81               	goto	l790
  3510     00A9                     l1625:
  3511     00A9  0826               	movf	___flmul@b,w
  3512     00AA  00F1               	movwf	__Umul8_16@multiplicand
  3513     00AB  082C               	movf	___flmul@a+2,w
  3514     00AC  3185  25C5  3180   	fcall	__Umul8_16
  3515     00AF  0872               	movf	?__Umul8_16+1,w
  3516     00B0  0140               	movlb	0	; select bank0
  3517     00B1  00BF               	movwf	___flmul@temp+1
  3518     00B2  0871               	movf	?__Umul8_16,w
  3519     00B3  00BE               	movwf	___flmul@temp
  3520     00B4                     l1627:
  3521     00B4  083E               	movf	___flmul@temp,w
  3522     00B5  00AE               	movwf	??___flmul
  3523     00B6  01AF               	clrf	??___flmul+1
  3524     00B7  01B0               	clrf	??___flmul+2
  3525     00B8  01B1               	clrf	??___flmul+3
  3526     00B9  0831               	movf	??___flmul+3,w
  3527     00BA  00B7               	movwf	___flmul@grs+3
  3528     00BB  0830               	movf	??___flmul+2,w
  3529     00BC  00B6               	movwf	___flmul@grs+2
  3530     00BD  082F               	movf	??___flmul+1,w
  3531     00BE  00B5               	movwf	___flmul@grs+1
  3532     00BF  082E               	movf	??___flmul,w
  3533     00C0  00B4               	movwf	___flmul@grs
  3534     00C1                     l1629:
  3535     00C1  083F               	movf	___flmul@temp+1,w
  3536     00C2  00AE               	movwf	??___flmul
  3537     00C3  01AF               	clrf	??___flmul+1
  3538     00C4  01B0               	clrf	??___flmul+2
  3539     00C5  01B1               	clrf	??___flmul+3
  3540     00C6  0831               	movf	??___flmul+3,w
  3541     00C7  00BD               	movwf	___flmul@prod+3
  3542     00C8  0830               	movf	??___flmul+2,w
  3543     00C9  00BC               	movwf	___flmul@prod+2
  3544     00CA  082F               	movf	??___flmul+1,w
  3545     00CB  00BB               	movwf	___flmul@prod+1
  3546     00CC  082E               	movf	??___flmul,w
  3547     00CD  00BA               	movwf	___flmul@prod
  3548     00CE  0827               	movf	___flmul@b+1,w
  3549     00CF  00F1               	movwf	__Umul8_16@multiplicand
  3550     00D0  082B               	movf	___flmul@a+1,w
  3551     00D1  3185  25C5  3180   	fcall	__Umul8_16
  3552     00D4  0872               	movf	?__Umul8_16+1,w
  3553     00D5  0140               	movlb	0	; select bank0
  3554     00D6  00BF               	movwf	___flmul@temp+1
  3555     00D7  0871               	movf	?__Umul8_16,w
  3556     00D8  00BE               	movwf	___flmul@temp
  3557     00D9                     l1631:
  3558     00D9  083E               	movf	___flmul@temp,w
  3559     00DA  00AE               	movwf	??___flmul
  3560     00DB  01AF               	clrf	??___flmul+1
  3561     00DC  01B0               	clrf	??___flmul+2
  3562     00DD  01B1               	clrf	??___flmul+3
  3563     00DE  082E               	movf	??___flmul,w
  3564     00DF  07B4               	addwf	___flmul@grs,f
  3565     00E0  082F               	movf	??___flmul+1,w
  3566     00E1  3DB5               	addwfc	___flmul@grs+1,f
  3567     00E2  0830               	movf	??___flmul+2,w
  3568     00E3  3DB6               	addwfc	___flmul@grs+2,f
  3569     00E4  0831               	movf	??___flmul+3,w
  3570     00E5  3DB7               	addwfc	___flmul@grs+3,f
  3571     00E6                     l1633:
  3572     00E6  083F               	movf	___flmul@temp+1,w
  3573     00E7  00AE               	movwf	??___flmul
  3574     00E8  01AF               	clrf	??___flmul+1
  3575     00E9  01B0               	clrf	??___flmul+2
  3576     00EA  01B1               	clrf	??___flmul+3
  3577     00EB  082E               	movf	??___flmul,w
  3578     00EC  07BA               	addwf	___flmul@prod,f
  3579     00ED  082F               	movf	??___flmul+1,w
  3580     00EE  3DBB               	addwfc	___flmul@prod+1,f
  3581     00EF  0830               	movf	??___flmul+2,w
  3582     00F0  3DBC               	addwfc	___flmul@prod+2,f
  3583     00F1  0831               	movf	??___flmul+3,w
  3584     00F2  3DBD               	addwfc	___flmul@prod+3,f
  3585     00F3  0828               	movf	___flmul@b+2,w
  3586     00F4  00F1               	movwf	__Umul8_16@multiplicand
  3587     00F5  082A               	movf	___flmul@a,w
  3588     00F6  3185  25C5  3180   	fcall	__Umul8_16
  3589     00F9  0872               	movf	?__Umul8_16+1,w
  3590     00FA  0140               	movlb	0	; select bank0
  3591     00FB  00BF               	movwf	___flmul@temp+1
  3592     00FC  0871               	movf	?__Umul8_16,w
  3593     00FD  00BE               	movwf	___flmul@temp
  3594     00FE                     l1635:
  3595     00FE  083E               	movf	___flmul@temp,w
  3596     00FF  00AE               	movwf	??___flmul
  3597     0100  01AF               	clrf	??___flmul+1
  3598     0101  01B0               	clrf	??___flmul+2
  3599     0102  01B1               	clrf	??___flmul+3
  3600     0103  082E               	movf	??___flmul,w
  3601     0104  07B4               	addwf	___flmul@grs,f
  3602     0105  082F               	movf	??___flmul+1,w
  3603     0106  3DB5               	addwfc	___flmul@grs+1,f
  3604     0107  0830               	movf	??___flmul+2,w
  3605     0108  3DB6               	addwfc	___flmul@grs+2,f
  3606     0109  0831               	movf	??___flmul+3,w
  3607     010A  3DB7               	addwfc	___flmul@grs+3,f
  3608     010B                     l1637:
  3609     010B  083F               	movf	___flmul@temp+1,w
  3610     010C  00AE               	movwf	??___flmul
  3611     010D  01AF               	clrf	??___flmul+1
  3612     010E  01B0               	clrf	??___flmul+2
  3613     010F  01B1               	clrf	??___flmul+3
  3614     0110  082E               	movf	??___flmul,w
  3615     0111  07BA               	addwf	___flmul@prod,f
  3616     0112  082F               	movf	??___flmul+1,w
  3617     0113  3DBB               	addwfc	___flmul@prod+1,f
  3618     0114  0830               	movf	??___flmul+2,w
  3619     0115  3DBC               	addwfc	___flmul@prod+2,f
  3620     0116  0831               	movf	??___flmul+3,w
  3621     0117  3DBD               	addwfc	___flmul@prod+3,f
  3622     0118                     l1639:
  3623     0118  3008               	movlw	8
  3624     0119                     u1105:
  3625     0119  35B4               	lslf	___flmul@grs,f
  3626     011A  0DB5               	rlf	___flmul@grs+1,f
  3627     011B  0DB6               	rlf	___flmul@grs+2,f
  3628     011C  0DB7               	rlf	___flmul@grs+3,f
  3629     011D  0B89               	decfsz	9,f
  3630     011E  2919               	goto	u1105
  3631     011F                     l1641:
  3632     011F  0827               	movf	___flmul@b+1,w
  3633     0120  00F1               	movwf	__Umul8_16@multiplicand
  3634     0121  082A               	movf	___flmul@a,w
  3635     0122  3185  25C5  3180   	fcall	__Umul8_16
  3636     0125  0872               	movf	?__Umul8_16+1,w
  3637     0126  0140               	movlb	0	; select bank0
  3638     0127  00BF               	movwf	___flmul@temp+1
  3639     0128  0871               	movf	?__Umul8_16,w
  3640     0129  00BE               	movwf	___flmul@temp
  3641     012A                     l1643:
  3642     012A  083E               	movf	___flmul@temp,w
  3643     012B  07B4               	addwf	___flmul@grs,f
  3644     012C  083F               	movf	___flmul@temp+1,w
  3645     012D  3DB5               	addwfc	___flmul@grs+1,f
  3646     012E  3000               	movlw	0
  3647     012F  3DB6               	addwfc	___flmul@grs+2,f
  3648     0130  3DB7               	addwfc	___flmul@grs+3,f
  3649     0131                     l1645:
  3650     0131  0826               	movf	___flmul@b,w
  3651     0132  00F1               	movwf	__Umul8_16@multiplicand
  3652     0133  082B               	movf	___flmul@a+1,w
  3653     0134  3185  25C5  3180   	fcall	__Umul8_16
  3654     0137  0872               	movf	?__Umul8_16+1,w
  3655     0138  0140               	movlb	0	; select bank0
  3656     0139  00BF               	movwf	___flmul@temp+1
  3657     013A  0871               	movf	?__Umul8_16,w
  3658     013B  00BE               	movwf	___flmul@temp
  3659     013C                     l1647:
  3660     013C  083E               	movf	___flmul@temp,w
  3661     013D  07B4               	addwf	___flmul@grs,f
  3662     013E  083F               	movf	___flmul@temp+1,w
  3663     013F  3DB5               	addwfc	___flmul@grs+1,f
  3664     0140  3000               	movlw	0
  3665     0141  3DB6               	addwfc	___flmul@grs+2,f
  3666     0142  3DB7               	addwfc	___flmul@grs+3,f
  3667     0143                     l1649:
  3668     0143  3008               	movlw	8
  3669     0144                     u1115:
  3670     0144  35B4               	lslf	___flmul@grs,f
  3671     0145  0DB5               	rlf	___flmul@grs+1,f
  3672     0146  0DB6               	rlf	___flmul@grs+2,f
  3673     0147  0DB7               	rlf	___flmul@grs+3,f
  3674     0148  0B89               	decfsz	9,f
  3675     0149  2944               	goto	u1115
  3676     014A  0826               	movf	___flmul@b,w
  3677     014B  00F1               	movwf	__Umul8_16@multiplicand
  3678     014C  082A               	movf	___flmul@a,w
  3679     014D  3185  25C5  3180   	fcall	__Umul8_16
  3680     0150  0872               	movf	?__Umul8_16+1,w
  3681     0151  0140               	movlb	0	; select bank0
  3682     0152  00BF               	movwf	___flmul@temp+1
  3683     0153  0871               	movf	?__Umul8_16,w
  3684     0154  00BE               	movwf	___flmul@temp
  3685     0155                     l1651:
  3686     0155  083E               	movf	___flmul@temp,w
  3687     0156  07B4               	addwf	___flmul@grs,f
  3688     0157  083F               	movf	___flmul@temp+1,w
  3689     0158  3DB5               	addwfc	___flmul@grs+1,f
  3690     0159  3000               	movlw	0
  3691     015A  3DB6               	addwfc	___flmul@grs+2,f
  3692     015B  3DB7               	addwfc	___flmul@grs+3,f
  3693     015C                     l1653:
  3694     015C  0827               	movf	___flmul@b+1,w
  3695     015D  00F1               	movwf	__Umul8_16@multiplicand
  3696     015E  082C               	movf	___flmul@a+2,w
  3697     015F  3185  25C5  3180   	fcall	__Umul8_16
  3698     0162  0872               	movf	?__Umul8_16+1,w
  3699     0163  0140               	movlb	0	; select bank0
  3700     0164  00BF               	movwf	___flmul@temp+1
  3701     0165  0871               	movf	?__Umul8_16,w
  3702     0166  00BE               	movwf	___flmul@temp
  3703     0167  083E               	movf	___flmul@temp,w
  3704     0168  07BA               	addwf	___flmul@prod,f
  3705     0169  083F               	movf	___flmul@temp+1,w
  3706     016A  3DBB               	addwfc	___flmul@prod+1,f
  3707     016B  3000               	movlw	0
  3708     016C  3DBC               	addwfc	___flmul@prod+2,f
  3709     016D  3DBD               	addwfc	___flmul@prod+3,f
  3710     016E                     l1655:
  3711     016E  0828               	movf	___flmul@b+2,w
  3712     016F  00F1               	movwf	__Umul8_16@multiplicand
  3713     0170  082B               	movf	___flmul@a+1,w
  3714     0171  3185  25C5  3180   	fcall	__Umul8_16
  3715     0174  0872               	movf	?__Umul8_16+1,w
  3716     0175  0140               	movlb	0	; select bank0
  3717     0176  00BF               	movwf	___flmul@temp+1
  3718     0177  0871               	movf	?__Umul8_16,w
  3719     0178  00BE               	movwf	___flmul@temp
  3720     0179                     l1657:
  3721     0179  083E               	movf	___flmul@temp,w
  3722     017A  07BA               	addwf	___flmul@prod,f
  3723     017B  083F               	movf	___flmul@temp+1,w
  3724     017C  3DBB               	addwfc	___flmul@prod+1,f
  3725     017D  3000               	movlw	0
  3726     017E  3DBC               	addwfc	___flmul@prod+2,f
  3727     017F  3DBD               	addwfc	___flmul@prod+3,f
  3728     0180  0828               	movf	___flmul@b+2,w
  3729     0181  00F1               	movwf	__Umul8_16@multiplicand
  3730     0182  082C               	movf	___flmul@a+2,w
  3731     0183  3185  25C5  3180   	fcall	__Umul8_16
  3732     0186  0872               	movf	?__Umul8_16+1,w
  3733     0187  0140               	movlb	0	; select bank0
  3734     0188  00BF               	movwf	___flmul@temp+1
  3735     0189  0871               	movf	?__Umul8_16,w
  3736     018A  00BE               	movwf	___flmul@temp
  3737     018B                     l1659:
  3738     018B  083E               	movf	___flmul@temp,w
  3739     018C  00AE               	movwf	??___flmul
  3740     018D  083F               	movf	___flmul@temp+1,w
  3741     018E  00AF               	movwf	??___flmul+1
  3742     018F  01B0               	clrf	??___flmul+2
  3743     0190  01B1               	clrf	??___flmul+3
  3744     0191  3008               	movlw	8
  3745     0192                     u1125:
  3746     0192  35AE               	lslf	??___flmul,f
  3747     0193  0DAF               	rlf	??___flmul+1,f
  3748     0194  0DB0               	rlf	??___flmul+2,f
  3749     0195  0DB1               	rlf	??___flmul+3,f
  3750     0196                     u1120:
  3751     0196  0B89               	decfsz	9,f
  3752     0197  2992               	goto	u1125
  3753     0198  082E               	movf	??___flmul,w
  3754     0199  07BA               	addwf	___flmul@prod,f
  3755     019A  082F               	movf	??___flmul+1,w
  3756     019B  3DBB               	addwfc	___flmul@prod+1,f
  3757     019C  0830               	movf	??___flmul+2,w
  3758     019D  3DBC               	addwfc	___flmul@prod+2,f
  3759     019E  0831               	movf	??___flmul+3,w
  3760     019F  3DBD               	addwfc	___flmul@prod+3,f
  3761     01A0                     l1661:
  3762     01A0  0834               	movf	___flmul@grs,w
  3763     01A1  00AE               	movwf	??___flmul
  3764     01A2  0835               	movf	___flmul@grs+1,w
  3765     01A3  00AF               	movwf	??___flmul+1
  3766     01A4  0836               	movf	___flmul@grs+2,w
  3767     01A5  00B0               	movwf	??___flmul+2
  3768     01A6  0837               	movf	___flmul@grs+3,w
  3769     01A7  00B1               	movwf	??___flmul+3
  3770     01A8  3018               	movlw	24
  3771     01A9                     u1135:
  3772     01A9  36B1               	lsrf	??___flmul+3,f
  3773     01AA  0CB0               	rrf	??___flmul+2,f
  3774     01AB  0CAF               	rrf	??___flmul+1,f
  3775     01AC  0CAE               	rrf	??___flmul,f
  3776     01AD                     u1130:
  3777     01AD  0B89               	decfsz	9,f
  3778     01AE  29A9               	goto	u1135
  3779     01AF  082E               	movf	??___flmul,w
  3780     01B0  07BA               	addwf	___flmul@prod,f
  3781     01B1  082F               	movf	??___flmul+1,w
  3782     01B2  3DBB               	addwfc	___flmul@prod+1,f
  3783     01B3  0830               	movf	??___flmul+2,w
  3784     01B4  3DBC               	addwfc	___flmul@prod+2,f
  3785     01B5  0831               	movf	??___flmul+3,w
  3786     01B6  3DBD               	addwfc	___flmul@prod+3,f
  3787     01B7                     l1663:
  3788     01B7  3008               	movlw	8
  3789     01B8                     u1145:
  3790     01B8  35B4               	lslf	___flmul@grs,f
  3791     01B9  0DB5               	rlf	___flmul@grs+1,f
  3792     01BA  0DB6               	rlf	___flmul@grs+2,f
  3793     01BB  0DB7               	rlf	___flmul@grs+3,f
  3794     01BC  0B89               	decfsz	9,f
  3795     01BD  29B8               	goto	u1145
  3796     01BE                     l1665:
  3797     01BE  0839               	movf	___flmul@bexp,w
  3798     01BF  0738               	addwf	___flmul@aexp,w
  3799     01C0  00AE               	movwf	??___flmul
  3800     01C1  01AF               	clrf	??___flmul+1
  3801     01C2  0DAF               	rlf	??___flmul+1,f
  3802     01C3  082E               	movf	??___flmul,w
  3803     01C4  3E82               	addlw	130
  3804     01C5  00BE               	movwf	___flmul@temp
  3805     01C6  30FF               	movlw	255
  3806     01C7  3D2F               	addwfc	??___flmul+1,w
  3807     01C8  00BF               	movwf	___flmul@temp+1
  3808     01C9  29E1               	goto	l1677
  3809     01CA                     l1667:
  3810     01CA  3001               	movlw	1
  3811     01CB                     u1155:
  3812     01CB  35BA               	lslf	___flmul@prod,f
  3813     01CC  0DBB               	rlf	___flmul@prod+1,f
  3814     01CD  0DBC               	rlf	___flmul@prod+2,f
  3815     01CE  0DBD               	rlf	___flmul@prod+3,f
  3816     01CF  0B89               	decfsz	9,f
  3817     01D0  29CB               	goto	u1155
  3818     01D1                     l1669:
  3819     01D1  1FB7               	btfss	___flmul@grs+3,7
  3820     01D2  29D4               	goto	u1161
  3821     01D3  29D5               	goto	u1160
  3822     01D4                     u1161:
  3823     01D4  29D6               	goto	l1673
  3824     01D5                     u1160:
  3825     01D5                     l1671:
  3826     01D5  143A               	bsf	___flmul@prod,0
  3827     01D6                     l1673:
  3828     01D6  3001               	movlw	1
  3829     01D7                     u1175:
  3830     01D7  35B4               	lslf	___flmul@grs,f
  3831     01D8  0DB5               	rlf	___flmul@grs+1,f
  3832     01D9  0DB6               	rlf	___flmul@grs+2,f
  3833     01DA  0DB7               	rlf	___flmul@grs+3,f
  3834     01DB  0B89               	decfsz	9,f
  3835     01DC  29D7               	goto	u1175
  3836     01DD                     l1675:
  3837     01DD  30FF               	movlw	255
  3838     01DE  07BE               	addwf	___flmul@temp,f
  3839     01DF  30FF               	movlw	255
  3840     01E0  3DBF               	addwfc	___flmul@temp+1,f
  3841     01E1                     l1677:
  3842     01E1  1FBC               	btfss	___flmul@prod+2,7
  3843     01E2  29E4               	goto	u1181
  3844     01E3  29E5               	goto	u1180
  3845     01E4                     u1181:
  3846     01E4  29CA               	goto	l1667
  3847     01E5                     u1180:
  3848     01E5                     l1679:
  3849     01E5  01B8               	clrf	___flmul@aexp
  3850     01E6                     l1681:
  3851     01E6  1FB7               	btfss	___flmul@grs+3,7
  3852     01E7  29E9               	goto	u1191
  3853     01E8  29EA               	goto	u1190
  3854     01E9                     u1191:
  3855     01E9  2A06               	goto	l1689
  3856     01EA                     u1190:
  3857     01EA                     l1683:
  3858     01EA  30FF               	movlw	255
  3859     01EB  0534               	andwf	___flmul@grs,w
  3860     01EC  00AE               	movwf	??___flmul
  3861     01ED  30FF               	movlw	255
  3862     01EE  0535               	andwf	___flmul@grs+1,w
  3863     01EF  00AF               	movwf	??___flmul+1
  3864     01F0  30FF               	movlw	255
  3865     01F1  0536               	andwf	___flmul@grs+2,w
  3866     01F2  00B0               	movwf	??___flmul+2
  3867     01F3  307F               	movlw	127
  3868     01F4  0537               	andwf	___flmul@grs+3,w
  3869     01F5  00B1               	movwf	??___flmul+3
  3870     01F6  0831               	movf	??___flmul+3,w
  3871     01F7  0430               	iorwf	??___flmul+2,w
  3872     01F8  042F               	iorwf	??___flmul+1,w
  3873     01F9  042E               	iorwf	??___flmul,w
  3874     01FA  1903               	skipnz
  3875     01FB  29FD               	goto	u1201
  3876     01FC  29FE               	goto	u1200
  3877     01FD                     u1201:
  3878     01FD  2A01               	goto	l796
  3879     01FE                     u1200:
  3880     01FE                     l1685:
  3881     01FE  01B8               	clrf	___flmul@aexp
  3882     01FF  0AB8               	incf	___flmul@aexp,f
  3883     0200  2A06               	goto	l1689
  3884     0201                     l796:
  3885     0201  1C3A               	btfss	___flmul@prod,0
  3886     0202  2A04               	goto	u1211
  3887     0203  2A05               	goto	u1210
  3888     0204                     u1211:
  3889     0204  2A06               	goto	l1689
  3890     0205                     u1210:
  3891     0205  29FE               	goto	l1685
  3892     0206                     l1689:
  3893     0206  0838               	movf	___flmul@aexp,w
  3894     0207  1903               	btfsc	3,2
  3895     0208  2A0A               	goto	u1221
  3896     0209  2A0B               	goto	u1220
  3897     020A                     u1221:
  3898     020A  2A33               	goto	l1699
  3899     020B                     u1220:
  3900     020B                     l1691:
  3901     020B  3001               	movlw	1
  3902     020C  07BA               	addwf	___flmul@prod,f
  3903     020D  3000               	movlw	0
  3904     020E  3DBB               	addwfc	___flmul@prod+1,f
  3905     020F  3000               	movlw	0
  3906     0210  3DBC               	addwfc	___flmul@prod+2,f
  3907     0211  3000               	movlw	0
  3908     0212  3DBD               	addwfc	___flmul@prod+3,f
  3909     0213                     l1693:
  3910     0213  1C3D               	btfss	___flmul@prod+3,0
  3911     0214  2A16               	goto	u1231
  3912     0215  2A17               	goto	u1230
  3913     0216                     u1231:
  3914     0216  2A33               	goto	l1699
  3915     0217                     u1230:
  3916     0217                     l1695:
  3917     0217  083A               	movf	___flmul@prod,w
  3918     0218  00AE               	movwf	??___flmul
  3919     0219  083B               	movf	___flmul@prod+1,w
  3920     021A  00AF               	movwf	??___flmul+1
  3921     021B  083C               	movf	___flmul@prod+2,w
  3922     021C  00B0               	movwf	??___flmul+2
  3923     021D  083D               	movf	___flmul@prod+3,w
  3924     021E  00B1               	movwf	??___flmul+3
  3925     021F  3001               	movlw	1
  3926     0220  00B2               	movwf	??___flmul+4
  3927     0221                     u1245:
  3928     0221  37B1               	asrf	??___flmul+3,f
  3929     0222  0CB0               	rrf	??___flmul+2,f
  3930     0223  0CAF               	rrf	??___flmul+1,f
  3931     0224  0CAE               	rrf	??___flmul,f
  3932     0225                     u1240:
  3933     0225  0BB2               	decfsz	??___flmul+4,f
  3934     0226  2A21               	goto	u1245
  3935     0227  0831               	movf	??___flmul+3,w
  3936     0228  00BD               	movwf	___flmul@prod+3
  3937     0229  0830               	movf	??___flmul+2,w
  3938     022A  00BC               	movwf	___flmul@prod+2
  3939     022B  082F               	movf	??___flmul+1,w
  3940     022C  00BB               	movwf	___flmul@prod+1
  3941     022D  082E               	movf	??___flmul,w
  3942     022E  00BA               	movwf	___flmul@prod
  3943     022F                     l1697:
  3944     022F  3001               	movlw	1
  3945     0230  07BE               	addwf	___flmul@temp,f
  3946     0231  3000               	movlw	0
  3947     0232  3DBF               	addwfc	___flmul@temp+1,f
  3948     0233                     l1699:
  3949     0233  083F               	movf	___flmul@temp+1,w
  3950     0234  3A80               	xorlw	128
  3951     0235  00AE               	movwf	??___flmul
  3952     0236  3080               	movlw	128
  3953     0237  022E               	subwf	??___flmul,w
  3954     0238  1D03               	skipz
  3955     0239  2A3C               	goto	u1255
  3956     023A  30FF               	movlw	255
  3957     023B  023E               	subwf	___flmul@temp,w
  3958     023C                     u1255:
  3959     023C  1C03               	skipc
  3960     023D  2A3F               	goto	u1251
  3961     023E  2A40               	goto	u1250
  3962     023F                     u1251:
  3963     023F  2A4A               	goto	l1703
  3964     0240                     u1250:
  3965     0240                     l1701:
  3966     0240  307F               	movlw	127
  3967     0241  0140               	movlb	0	; select bank0
  3968     0242  00BD               	movwf	___flmul@prod+3
  3969     0243  3080               	movlw	128
  3970     0244  00BC               	movwf	___flmul@prod+2
  3971     0245  3000               	movlw	0
  3972     0246  00BB               	movwf	___flmul@prod+1
  3973     0247  3000               	movlw	0
  3974     0248  00BA               	movwf	___flmul@prod
  3975     0249  2A75               	goto	l802
  3976     024A                     l1703:
  3977     024A  0140               	movlb	0	; select bank0
  3978     024B  083F               	movf	___flmul@temp+1,w
  3979     024C  3A80               	xorlw	128
  3980     024D  00AE               	movwf	??___flmul
  3981     024E  3080               	movlw	128
  3982     024F  022E               	subwf	??___flmul,w
  3983     0250  1D03               	skipz
  3984     0251  2A54               	goto	u1265
  3985     0252  3001               	movlw	1
  3986     0253  023E               	subwf	___flmul@temp,w
  3987     0254                     u1265:
  3988     0254  1803               	skipnc
  3989     0255  2A57               	goto	u1261
  3990     0256  2A58               	goto	u1260
  3991     0257                     u1261:
  3992     0257  2A63               	goto	l1709
  3993     0258                     u1260:
  3994     0258                     l1705:
  3995     0258  3000               	movlw	0
  3996     0259  0140               	movlb	0	; select bank0
  3997     025A  00BD               	movwf	___flmul@prod+3
  3998     025B  3000               	movlw	0
  3999     025C  00BC               	movwf	___flmul@prod+2
  4000     025D  3000               	movlw	0
  4001     025E  00BB               	movwf	___flmul@prod+1
  4002     025F  3000               	movlw	0
  4003     0260  00BA               	movwf	___flmul@prod
  4004     0261                     l1707:
  4005     0261  01B3               	clrf	___flmul@sign
  4006     0262  2A75               	goto	l802
  4007     0263                     l1709:
  4008     0263  0140               	movlb	0	; select bank0
  4009     0264  083E               	movf	___flmul@temp,w
  4010     0265  00B9               	movwf	___flmul@bexp
  4011     0266  30FF               	movlw	255
  4012     0267  05BA               	andwf	___flmul@prod,f
  4013     0268  30FF               	movlw	255
  4014     0269  05BB               	andwf	___flmul@prod+1,f
  4015     026A  307F               	movlw	127
  4016     026B  05BC               	andwf	___flmul@prod+2,f
  4017     026C  3000               	movlw	0
  4018     026D  05BD               	andwf	___flmul@prod+3,f
  4019     026E                     l1711:
  4020     026E  1C39               	btfss	___flmul@bexp,0
  4021     026F  2A71               	goto	u1271
  4022     0270  2A72               	goto	u1270
  4023     0271                     u1271:
  4024     0271  2A73               	goto	l1715
  4025     0272                     u1270:
  4026     0272                     l1713:
  4027     0272  17BC               	bsf	___flmul@prod+2,7
  4028     0273                     l1715:
  4029     0273  3639               	lsrf	___flmul@bexp,w
  4030     0274  00BD               	movwf	___flmul@prod+3
  4031     0275                     l802:
  4032     0275  0833               	movf	___flmul@sign,w
  4033     0276  00AE               	movwf	??___flmul
  4034     0277  082E               	movf	??___flmul,w
  4035     0278  04BD               	iorwf	___flmul@prod+3,f
  4036     0279                     l1717:
  4037     0279  083D               	movf	___flmul@prod+3,w
  4038     027A  00A9               	movwf	?___flmul+3
  4039     027B  083C               	movf	___flmul@prod+2,w
  4040     027C  00A8               	movwf	?___flmul+2
  4041     027D  083B               	movf	___flmul@prod+1,w
  4042     027E  00A7               	movwf	?___flmul+1
  4043     027F  083A               	movf	___flmul@prod,w
  4044     0280  00A6               	movwf	?___flmul
  4045     0281                     l790:
  4046     0281  0008               	return
  4047     0282                     __end_of___flmul:
  4048                           
  4049                           	psect	text19
  4050     05C5                     __ptext19:	
  4051 ;; *************** function __Umul8_16 *****************
  4052 ;; Defined at:
  4053 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  multiplier      1    wreg     unsigned char 
  4056 ;;  multiplicand    1    1[COMMON] unsigned char 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  multiplier      1    9[COMMON] unsigned char 
  4059 ;;  word_mpld       2    7[COMMON] unsigned int 
  4060 ;;  product         2    5[COMMON] unsigned int 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  2    1[COMMON] unsigned int 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;Total ram usage:        9 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		___flmul
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084     05C5                     __Umul8_16:	
  4085                           ;psect for function __Umul8_16
  4086                           
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4090                           ;__Umul8_16@multiplier stored from wreg
  4091     05C5  00F9               	movwf	__Umul8_16@multiplier
  4092     05C6                     l1477:
  4093     05C6  01F5               	clrf	__Umul8_16@product
  4094     05C7  01F6               	clrf	__Umul8_16@product+1
  4095     05C8                     l1479:
  4096     05C8  0871               	movf	__Umul8_16@multiplicand,w
  4097     05C9  00F3               	movwf	??__Umul8_16
  4098     05CA  01F4               	clrf	??__Umul8_16+1
  4099     05CB  0873               	movf	??__Umul8_16,w
  4100     05CC  00F7               	movwf	__Umul8_16@word_mpld
  4101     05CD  0874               	movf	??__Umul8_16+1,w
  4102     05CE  00F8               	movwf	__Umul8_16@word_mpld+1
  4103     05CF                     l1481:
  4104     05CF  1C79               	btfss	__Umul8_16@multiplier,0
  4105     05D0  2DD2               	goto	u831
  4106     05D1  2DD3               	goto	u830
  4107     05D2                     u831:
  4108     05D2  2DD7               	goto	l809
  4109     05D3                     u830:
  4110     05D3                     l1483:
  4111     05D3  0877               	movf	__Umul8_16@word_mpld,w
  4112     05D4  07F5               	addwf	__Umul8_16@product,f
  4113     05D5  0878               	movf	__Umul8_16@word_mpld+1,w
  4114     05D6  3DF6               	addwfc	__Umul8_16@product+1,f
  4115     05D7                     l809:
  4116     05D7  3001               	movlw	1
  4117     05D8                     u845:
  4118     05D8  35F7               	lslf	__Umul8_16@word_mpld,f
  4119     05D9  0DF8               	rlf	__Umul8_16@word_mpld+1,f
  4120     05DA  0B89               	decfsz	9,f
  4121     05DB  2DD8               	goto	u845
  4122     05DC  1003               	clrc
  4123     05DD  0CF9               	rrf	__Umul8_16@multiplier,f
  4124     05DE                     l1485:
  4125     05DE  0879               	movf	__Umul8_16@multiplier,w
  4126     05DF  1D03               	btfss	3,2
  4127     05E0  2DE2               	goto	u851
  4128     05E1  2DE3               	goto	u850
  4129     05E2                     u851:
  4130     05E2  2DCF               	goto	l1481
  4131     05E3                     u850:
  4132     05E3                     l1487:
  4133     05E3  0876               	movf	__Umul8_16@product+1,w
  4134     05E4  00F2               	movwf	?__Umul8_16+1
  4135     05E5  0875               	movf	__Umul8_16@product,w
  4136     05E6  00F1               	movwf	?__Umul8_16
  4137     05E7                     l811:
  4138     05E7  0008               	return
  4139     05E8                     __end_of__Umul8_16:
  4140                           
  4141                           	psect	text20
  4142     0660                     __ptext20:	
  4143 ;; *************** function _Analog_read_raw *****************
  4144 ;; Defined at:
  4145 ;;		line 17 in file "./analog_driver.h"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  2    1[COMMON] unsigned short 
  4152 ;; Registers used:
  4153 ;;		wreg
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;Total ram usage:        2 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 1
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_Analog_read_percent
  4170 ;;		_Analog_read_voltage
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174     0660                     _Analog_read_raw:	
  4175                           ;psect for function _Analog_read_raw
  4176                           
  4177     0660                     l1499:	
  4178                           ;incstack = 0
  4179                           ; Regs used in _Analog_read_raw: [wreg]
  4180                           
  4181                           
  4182                           ;./analog_driver.h: 18:     ADCON0bits.ON = 1;
  4183     0660  017A               	movlb	58	; select bank58
  4184     0661  17A6               	bsf	38,7	;volatile
  4185                           
  4186                           ;./analog_driver.h: 19:     ADCON0bits.GO = 1;
  4187     0662  1426               	bsf	38,0	;volatile
  4188     0663                     l174:	
  4189                           ;./analog_driver.h: 20:     while(ADCON0bits.GO);
  4190                           
  4191     0663  1826               	btfsc	38,0	;volatile
  4192     0664  2E66               	goto	u871
  4193     0665  2E67               	goto	u870
  4194     0666                     u871:
  4195     0666  2E63               	goto	l174
  4196     0667                     u870:
  4197     0667                     l1501:
  4198                           
  4199                           ;./analog_driver.h: 22:     return ADRES;
  4200     0667  081E               	movf	30,w	;volatile
  4201     0668  00F2               	movwf	?_Analog_read_raw+1
  4202     0669  081D               	movf	29,w	;volatile
  4203     066A  00F1               	movwf	?_Analog_read_raw
  4204     066B                     l177:
  4205     066B  0008               	return
  4206     066C                     __end_of_Analog_read_raw:
  4207                           
  4208                           	psect	intentry
  4209     0004                     __pintentry:	
  4210 ;; *************** function _ISR *****************
  4211 ;; Defined at:
  4212 ;;		line 74 in file "main.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4230 ;;Total ram usage:        1 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		Interrupt level 1
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239     0004                     _ISR:
  4240                           
  4241                           ;incstack = 0
  4242     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4243                           
  4244                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4245     0005  3180               	pagesel	$
  4246     0006                     i1l1889:
  4247                           
  4248                           ;main.c: 76:     if(PIR3bits.RC2IF){
  4249     0006  0141               	movlb	1	; select bank1
  4250     0007  1E8F               	btfss	15,5	;volatile
  4251     0008  280A               	goto	u146_21
  4252     0009  280B               	goto	u146_20
  4253     000A                     u146_21:
  4254     000A  2829               	goto	i1l221
  4255     000B                     u146_20:
  4256     000B                     i1l1891:
  4257                           
  4258                           ;main.c: 78:         if(RX_index < 80){
  4259     000B  3050               	movlw	80
  4260     000C  027C               	subwf	_RX_index,w
  4261     000D  1803               	skipnc
  4262     000E  2810               	goto	u147_21
  4263     000F  2811               	goto	u147_20
  4264     0010                     u147_21:
  4265     0010  281C               	goto	i1l1897
  4266     0011                     u147_20:
  4267     0011                     i1l1893:
  4268                           
  4269                           ;main.c: 79:             RX_buffer[RX_index] = RC2REG;
  4270     0011  087C               	movf	_RX_index,w
  4271     0012  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  4272     0013  0086               	movwf	6
  4273     0014  0187               	clrf	7
  4274     0015  014C               	movlb	12	; select bank12
  4275     0016  0816               	movf	22,w	;volatile
  4276     0017  0081               	movwf	1
  4277     0018                     i1l1895:
  4278                           
  4279                           ;main.c: 80:             RX_index ++;
  4280     0018  3001               	movlw	1
  4281     0019  00F0               	movwf	??_ISR
  4282     001A  0870               	movf	??_ISR,w
  4283     001B  07FC               	addwf	_RX_index,f
  4284     001C                     i1l1897:
  4285                           
  4286                           ;main.c: 83:         if(RC2STAbits.FERR){
  4287     001C  014C               	movlb	12	; select bank12
  4288     001D  1D1A               	btfss	26,2	;volatile
  4289     001E  2820               	goto	u148_21
  4290     001F  2821               	goto	u148_20
  4291     0020                     u148_21:
  4292     0020  2823               	goto	i1l223
  4293     0021                     u148_20:
  4294     0021                     i1l1899:
  4295                           
  4296                           ;main.c: 85:             RC2STAbits.SPEN = 0;
  4297     0021  139A               	bcf	26,7	;volatile
  4298                           
  4299                           ;main.c: 86:             RC2STAbits.SPEN = 1;
  4300     0022  179A               	bsf	26,7	;volatile
  4301     0023                     i1l223:	
  4302                           ;main.c: 88:         }
  4303                           
  4304                           
  4305                           ;main.c: 89:         if(RC2STAbits.OERR){
  4306     0023  1C9A               	btfss	26,1	;volatile
  4307     0024  2826               	goto	u149_21
  4308     0025  2827               	goto	u149_20
  4309     0026                     u149_21:
  4310     0026  2829               	goto	i1l221
  4311     0027                     u149_20:
  4312     0027                     i1l1901:
  4313                           
  4314                           ;main.c: 91:             RC2STAbits.CREN = 0;
  4315     0027  121A               	bcf	26,4	;volatile
  4316                           
  4317                           ;main.c: 92:             RC2STAbits.CREN = 1;
  4318     0028  161A               	bsf	26,4	;volatile
  4319     0029                     i1l221:	
  4320                           ;main.c: 96:     }
  4321                           
  4322                           
  4323                           ;main.c: 98:     if(PIR3bits.SSP1IF){
  4324     0029  0141               	movlb	1	; select bank1
  4325     002A  1F0F               	btfss	15,6	;volatile
  4326     002B  282D               	goto	u150_21
  4327     002C  282E               	goto	u150_20
  4328     002D                     u150_21:
  4329     002D  2836               	goto	i1l227
  4330     002E                     u150_20:
  4331     002E                     i1l1903:
  4332                           
  4333                           ;main.c: 99:         if(SSP1STATbits.R_nW == 1){
  4334     002E  014D               	movlb	13	; select bank13
  4335     002F  1D0F               	btfss	15,2	;volatile
  4336     0030  2832               	goto	u151_21
  4337     0031  2833               	goto	u151_20
  4338     0032                     u151_21:
  4339     0032  2836               	goto	i1l227
  4340     0033                     u151_20:
  4341     0033                     i1l1905:
  4342                           
  4343                           ;main.c: 100:             SSP1BUF = 0xF0 | 1;
  4344     0033  30F1               	movlw	241
  4345     0034  008C               	movwf	12	;volatile
  4346     0035                     i1l1907:
  4347                           
  4348                           ;main.c: 101:             SSP1CON1bits.CKP = 1;
  4349     0035  1610               	bsf	16,4	;volatile
  4350     0036                     i1l227:
  4351     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4352     0037  0009               	retfie
  4353     0038                     __end_of_ISR:
  4354     007E                     btemp	set	126	;btemp
  4355     007E                     int$flags	set	126
  4356     007E                     wtemp0	set	126
  4357                           
  4358                           	psect	idloc
  4359                           
  4360                           ;Config register IDLOC0 @ 0x8000
  4361                           ;	unspecified, using default values
  4362     8000                     	org	32768
  4363     8000  3FFF               	dw	16383
  4364                           
  4365                           ;Config register IDLOC1 @ 0x8001
  4366                           ;	unspecified, using default values
  4367     8001                     	org	32769
  4368     8001  3FFF               	dw	16383
  4369                           
  4370                           ;Config register IDLOC2 @ 0x8002
  4371                           ;	unspecified, using default values
  4372     8002                     	org	32770
  4373     8002  3FFF               	dw	16383
  4374                           
  4375                           ;Config register IDLOC3 @ 0x8003
  4376                           ;	unspecified, using default values
  4377     8003                     	org	32771
  4378     8003  3FFF               	dw	16383
  4379                           
  4380                           	psect	config
  4381                           
  4382                           ;Config register CONFIG1 @ 0x8007
  4383                           ;	External Oscillator Selection bits
  4384                           ;	FEXTOSC = OFF, Oscillator not enabled
  4385                           ;	Reset Oscillator Selection bits
  4386                           ;	RSTOSC = HFINTOSC_1MHz, HFINTOSC (1MHz)
  4387                           ;	Clock Out Enable bit
  4388                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  4389                           ;	VDD Range Analog Calibration Selection bit
  4390                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3 - 5
      +                          .5V
  4391     8007                     	org	32775
  4392     8007  3FEC               	dw	16364
  4393                           
  4394                           ;Config register CONFIG2 @ 0x8008
  4395                           ;	Master Clear Enable bit
  4396                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4397                           ;	Power-up Timer Selection bits
  4398                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4399                           ;	WDT Operating Mode bits
  4400                           ;	WDTE = ON, WDT enabled regardless of Sleep; SEN bit is ignored
  4401                           ;	Brown-out Reset Enable bits
  4402                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit is ignored
  4403                           ;	DAC Buffer Automatic Range Select Enable bit
  4404                           ;	DACAUTOEN = OFF, DAC Buffer reference range is determined by the REFRNG bit
  4405                           ;	Brown-out Reset Voltage Selection bit
  4406                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4407                           ;	ZCD Disable bit
  4408                           ;	ZCD = OFF, ZCD module is disabled; ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4409                           ;	PPSLOCKED One-Way Set Enable bit
  4410                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once after an unlocking se
      +                          quence is executed; once PPSLOCKED is set, all future changes to PPS registers are preve
      +                          nted
  4411                           ;	Stack Overflow/Underflow Reset Enable bit
  4412                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4413     8008                     	org	32776
  4414     8008  3FFF               	dw	16383
  4415                           
  4416                           ;Config register CONFIG3 @ 0x8009
  4417                           ;	unspecified, using default values
  4418     8009                     	org	32777
  4419     8009  3FFF               	dw	16383
  4420                           
  4421                           ;Config register CONFIG4 @ 0x800A
  4422                           ;	Boot Block Size Selection bits
  4423                           ;	BBSIZE = BB512, 512 words boot block size
  4424                           ;	Boot Block Enable bit
  4425                           ;	BBEN = OFF, Boot Block disabled
  4426                           ;	Storage Area Flash (SAF) Enable bit
  4427                           ;	SAFEN = OFF, SAF disabled
  4428                           ;	Application Block Write Protection bit
  4429                           ;	WRTAPP = OFF, Application Block is NOT write protected
  4430                           ;	Boot Block Write Protection bit
  4431                           ;	WRTB = OFF, Boot Block is NOT write protected
  4432                           ;	Configuration Register Write Protection bit
  4433                           ;	WRTC = OFF, Configuration Register is NOT write protected
  4434                           ;	Data EEPROM Write-Protection bit
  4435                           ;	WRTD = OFF, Data EEPROM is NOT write-protected
  4436                           ;	Storage Area Flash (SAF) Write Protection bit
  4437                           ;	WRTSAF = OFF, SAF is NOT write protected
  4438                           ;	Low Voltage Programming Enable bit
  4439                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored
  4440     800A                     	org	32778
  4441     800A  3FFF               	dw	16383
  4442                           
  4443                           ;Config register CONFIG5 @ 0x800B
  4444                           ;	Program Flash Memory Code Protection bit
  4445                           ;	CP = OFF, Program Flash Memory code protection is disabled
  4446                           ;	Data EEPROM Code Protection bit
  4447                           ;	CPD = OFF, EEPROM code protection is disabled
  4448     800B                     	org	32779
  4449     800B  3FFF               	dw	16383

Data Sizes:
    Strings     98
    Constant    16
    Data        0
    BSS         81
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     47      47
    BANK1            80      0      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    AT_command@at_command	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[11]), STR_13(CODE[12]), STR_1(CODE[11]), 

    AT_command_check@expected_response	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_18(CODE[22]), STR_10(CODE[22]), STR_5(CODE[8]), 

    AT_command_check@at_command	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_17(CODE[8]), STR_9(CODE[8]), STR_4(CODE[3]), 

    EUSART_clear_buffer@buffer	PTR unsigned char  size(1) Largest target is 80
		 -> RX_buffer(BANK1[80]), 

    EUSART_print@string	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_17(CODE[8]), STR_14(CODE[11]), STR_13(CODE[12]), STR_12(CODE[11]), 
		 -> STR_11(CODE[12]), STR_9(CODE[8]), STR_6(CODE[11]), STR_4(CODE[3]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_AT_command_check
    _LoRa_setup->_AT_command_check
    _AT_command_check->_EUSART_print
    _AT_command->_EUSART_print
    _LoRa_send_data->_EUSART_print
    _EUSART_print_hex->_EUSART_write
    _EUSART_print->_EUSART_write
    _Analog_read_percent->___fltol
    ___flmul->__Umul8_16

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Analog_read_percent
    _LoRa_setup->_AT_command_check
    _Analog_read_percent->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   12249
                                             43 BANK0      4     4      0
                         _AT_command
                   _AT_command_check
                _Analog_read_percent
                       _Analog_setup
                _EUSART_clear_buffer
                       _EUSART_setup
                    _I2C_setup_slave
                     _LoRa_send_data
                         _LoRa_setup
                        _SLEEP_start
                          _WDT_setup
                       _remote_check
 ---------------------------------------------------------------------------------
 (1) _remote_check                                         2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _WDT_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SLEEP_start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRa_setup                                           2     2      0    3614
                                              5 BANK0      2     2      0
                         _AT_command
                   _AT_command_check
                       _EUSART_print
 ---------------------------------------------------------------------------------
 (2) _AT_command_check                                    10     5      5    2060
                                              8 COMMON     4     4      0
                                              0 BANK0      5     0      5
                _EUSART_clear_buffer
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_clear_buffer                                  4     3      1     382
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _AT_command                                           3     1      2     943
                                              8 COMMON     3     1      2
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (1) _LoRa_send_data                                       6     1      5    1228
                                              8 COMMON     1     1      0
                                              0 BANK0      5     0      5
                       _EUSART_print
                   _EUSART_print_hex
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_print_hex                                     3     3      0     161
                                              2 COMMON     3     3      0
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_print                                         6     4      2     611
                                              2 COMMON     6     4      2
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_setup_slave                                      1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Analog_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Analog_read_percent                                  3     3      0    3926
                                             40 BANK0      3     3      0
                    _Analog_read_raw
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             10 COMMON     2     2      0
                                             32 BANK0      8     4      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _Analog_read_raw                                      2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AT_command
     _EUSART_print
       _EUSART_write
     _EUSART_write
   _AT_command_check
     _EUSART_clear_buffer
     _EUSART_print
     _EUSART_write
   _Analog_read_percent
     _Analog_read_raw
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Analog_setup
   _EUSART_clear_buffer
   _EUSART_setup
   _I2C_setup_slave
   _LoRa_send_data
     _EUSART_print
     _EUSART_print_hex
       _EUSART_write
     _EUSART_write
   _LoRa_setup
     _AT_command
     _AT_command_check
     _EUSART_print
   _SLEEP_start
   _WDT_setup
   _remote_check

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2F      2F       6       58.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 19 11:26:42 2024

                               l83 06B2                                 l92 068E  
                               l86 06B8                                 l95 0696  
                               l89 063A                __Umul8_16@word_mpld 0077  
                              l121 0612                                l107 057C  
                              l115 05A0                                l205 0482  
                              l213 05F2                                l214 05F1  
                              l127 05C4                                l216 05FD  
                              l209 0626                                l233 0340  
                              l234 0340                                l171 0647  
                              l174 0663                                l190 04CC  
                              l183 0503                                l177 066B  
                              l193 0530                                l198 0431  
                              l802 0275                                l811 05E7  
                              l840 02DE                                l809 05D7  
                              l594 040C                                l834 02A5  
                              l587 0421                                l836 032C  
                              l597 0421                                l790 0281  
                              l847 02F8                                l848 0304  
                              l796 0201                                _ISR 0004  
                              u830 05D3                                u831 05D2  
                              u920 03BB                                u921 03BA  
                              u850 05E3                                u930 03D1  
                              u851 05E2                                u940 03E4  
                              u845 05D8                                u941 03E3  
                              u870 0667                                u950 03EB  
                              u871 0666                                u951 03EA  
                              u935 03CD                                u970 03FB  
                              u971 03FA                                u980 0402  
                              u981 0401                                u965 03ED  
                              u995 0404                                wreg 0009  
                     ___flmul@aexp 0038                       ___flmul@bexp 0039  
                     ___flmul@sign 0033                       ___flmul@temp 003E  
                     ___flmul@prod 003A                        main@battery 004D  
                             ?_ISR 0070             LoRa_send_data@humidity 0022  
                     _BAUD2CONbits 061C                       ___fltol@exp1 007B  
                             l2001 0436                               l2011 045B  
                             l2003 043E                               l2013 045D  
                             l2021 047A                               l2005 0442  
                             l2101 03A1                               l2023 0481  
                             l2015 0474                               l2007 0455  
                             l2031 049D                               l2041 0524  
                             l2009 0459                               l2033 04A5  
                             l2043 0528                               l2019 0476  
                             l2035 04B2                               l2027 0483  
                 ?_Analog_read_raw 0071                               l1501 0667  
                             l2037 04C5                               l2029 048A  
                             l2061 0341                               l2053 032D  
                             l2039 0504                               l2071 035C  
                             l2063 0344                               l2055 032F  
                             l1601 0073                               l2081 036D  
                             l2073 035F                               l2065 034A  
                             l2057 0333                               l1611 0084  
                             l1603 0075                               l2091 0382  
                             l2083 0370                               l2075 0361  
                             l2067 034D                               l2059 033C  
                             l1701 0240                               l1621 00A0  
                             l1613 008C                               l1605 0079  
                             l2093 0395                               l2085 0375  
                             l2077 0364                               l2069 034F  
                             l1711 026E                               l1703 024A  
                             l1631 00D9                               l1615 008E  
                             l1607 007A                               l1551 03C4  
                             l2095 0397                               l2087 037A  
                             l2079 0366                               l1481 05CF  
                             l1713 0272                               l1705 0258  
                             l1641 011F                               l1633 00E6  
                             l1625 00A9                               l1617 0096  
                             l1609 007F                               l1561 03E4  
                             l1553 03D5                               l1545 03B1  
                             l1721 0284                               l1801 05BF  
                             l2097 039A                               l2089 037B  
                             l1483 05D3                               l1715 0273  
                             l1707 0261                               l1651 0155  
                             l1643 012A                               l1635 00FE  
                             l1627 00B4                               l1619 009B  
                             l1555 03D6                               l1547 03BB  
                             l1723 0289                               l1811 063B  
                             l1803 05C0                               l2099 039C  
                             l1485 05DE                               l1477 05C6  
                             l1717 0279                               l1709 0263  
                             l1661 01A0                               l1653 015C  
                             l1645 0131                               l1637 010B  
                             l1629 00C1                               l1581 0047  
                             l1557 03DE                               l1741 02CF  
                             l1733 02B6                               l1725 028D  
                             l1821 04D5                               l1813 063F  
                             l1805 05C1                               l1487 05E3  
                             l1479 05C8                               l1671 01D5  
                             l1663 01B7                               l1655 016E  
                             l1647 013C                               l1639 0118  
                             l1591 0057                               l1583 004B  
                             l1575 0403                               l1567 03EC  
                             l1559 03E0                               l1751 02FC  
                             l1743 02D7                               l1735 02B9  
                             l1727 029D                               l1823 0502  
                             l1815 0642                               l1807 05C2  
                             l1681 01E6                               l1673 01D6  
                             l1665 01BE                               l1657 0179  
                             l1649 0143                               l1593 005C  
                             l1585 004D                               l1577 0411  
                             l1569 03FC                               l1761 0324  
                             l1753 0306                               l1745 02E5  
                             l1737 02C4                               l1729 02AD  
                             l1817 0643                               l1809 05C3  
                             l1499 0660                               l1691 020B  
                             l1683 01EA                               l1675 01DD  
                             l1667 01CA                               l1659 018B  
                             l1595 0064                               l1587 0051  
                             l1579 0416                               l1755 031A  
                             l1747 02EE                               l1739 02CB  
                             l1819 04CD                               l1771 062E  
                             l1693 0213                               l1685 01FE  
                             l1669 01D1                               l1677 01E1  
                             l1597 0066                               l1589 0052  
                             l1757 031F                               l1749 02F2  
                             l1781 0639                               l1773 0630  
                             l1765 06AD                               l1853 05FB  
                             l1845 05E8                               l1695 0217  
                             l1679 01E5                               l1599 006E  
                             l1759 0323                               l1775 0631  
                             l1791 05B8                               l1783 05A2  
                             l1767 06B6                               l1847 05EF  
                             l1697 022F                               l1689 0206  
                             l1777 0634                               l1769 0627  
                             l1793 05B9                               l1785 05A8  
                             l1961 0693                               l1849 05F6  
                             l1699 0233                               l1779 0637  
                             l1795 05BA                               l1787 05B2  
                             l1963 0557                               l1971 05FF  
                             l1797 05BC                               l1789 05B4  
                             l1965 0559                               l1981 0587  
                             l1973 0601                               l1799 05BD  
                             l1959 068E                               l1967 0568  
                             l1983 0592                               l1991 061E  
                             l1975 0608                               l1969 056C  
                             l1985 0595                               l1977 060C  
                             l1993 0422                               l1979 057E  
                             l1987 0613                               l1995 0428  
                             l1989 061A                               l1997 042A  
                             l1999 042C                               STR_1 066C  
                             STR_2 06B3                               STR_3 0697  
                             STR_4 06B3                               STR_5 0697  
                             STR_6 0682                               STR_7 069F  
                             STR_8 0541                               STR_9 069F  
                             u1000 0411                               u1001 0410  
                             u1010 0416                               u1011 0415  
                             u1020 0051                               u1021 0050  
                             u1030 0057                               u1031 0056  
                             u1200 01FE                               u1120 0196  
                             u1040 005C                               u1201 01FD  
                             u1105 0119                               u1041 005B  
                             u1210 0205                               u1130 01AD  
                             u1050 0079                               u1211 0204  
                             u1115 0144                               u1051 0078  
                             u1220 020B                               u1060 007F  
                             u1300 02AD                               u1221 020A  
                             u1125 0192                               u1061 007E  
                             u1301 02AC                               u1230 0217  
                             u1070 0084                               u1231 0216  
                             u1135 01A9                               u1071 0083  
                             u1240 0225                               u1160 01D5  
                             u1080 009B                               u1400 031F  
                             u1320 02CA                               u1161 01D4  
                             u1145 01B8                               u1081 009A  
                             u1401 031E                               u1321 02C9  
                             u1250 0240                               u1090 00A0  
                             u1410 0323                               u1251 023F  
                             u1155 01CB                               u1091 009F  
                             u1411 0322                               u1315 02BE  
                             u1260 0258                               u1180 01E5  
                             u1340 02E4                               u1261 0257  
                             u1245 0221                               u1181 01E4  
                             u1341 02E3                               u1270 0272  
                             u1190 01EA                               u1271 0271  
                             u1255 023C                               u1191 01E9  
                             u1175 01D7                               u1335 02D8  
                             u1360 02F2                               u1280 0289  
                             u1600 0455                               u1440 05EF  
                             u1265 0254                               u1361 02F1  
                             u1281 0288                               u1601 0454  
                             u1441 05EE                               u1370 02F8  
                             u1290 028D                               u1610 0474  
                             u1450 05F6                               u1371 02F7  
                             u1355 02E8                               u1291 028C  
                             u1611 0473                               u1451 05F5  
                             u1380 02FC                               u1620 0481  
                             u1381 02FB                               u1621 0480  
                             u1605 0451                               u1390 0310  
                             u1550 0693                               u1630 049D  
                             u1551 0692                               u1631 049C  
                             u1560 057C                               u1640 04C5  
                             u1561 057B                               u1641 04C4  
                             u1570 0612                               u1650 033C  
                             u1395 030C                               u1571 0611  
                             u1707 0456                               u1651 033B  
                             u1660 037A                               u1717 0621  
                             u1661 0379                               u1590 0431  
                             u1670 0395                               u1727 052B  
                             u1591 0430                               u1671 0394  
                             u1585 0581                               u1687 0355  
                             u1697 04AB                               _main 032D  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                   ??_LoRa_send_data 0078  
                             start 0038           __end_of_AT_command_check 0483  
               EUSART_write@txData 0071        __end_of_Analog_read_percent 0504  
                      ?_AT_command 0078                              ??_ISR 0070  
                    ___fltol@sign1 007A                              ?_main 0070  
                            _ADPCH 1D1F                              _ADREF 1D2B  
                            _ADRES 1D1D                              STR_10 0541  
                            STR_11 0648                              STR_12 0677  
                            STR_13 0654                              STR_14 066C  
                            STR_17 069F                              STR_18 0541  
                  __end_of___flmul 0282                      ?_EUSART_setup 0070  
                    ?_EUSART_print 0072                    __end_of___fltol 0422  
                    ?_EUSART_write 0070                              i1l221 0029  
                            i1l223 0023                              i1l227 0036  
                            _PORTA 000C                              _TRISA 0012  
                       _LoRa_setup 0483          EUSART_clear_buffer@buffer 0073  
                            status 0003                              wtemp0 007E  
       AT_command_check@at_command 0020        __end_ofEUSART_print_hex@ref 0541  
          EUSART_clear_buffer@size 0071                    __initialization 003A  
         __end_of_EUSART_print_hex 05A1                       __end_of_main 03B1  
                   ??_EUSART_setup 0071                     ??_EUSART_print 0074  
                   ??_EUSART_write 0071                             ??_main 004B  
             Analog_read_percent@a 0048                       ?_SLEEP_start 0070  
             Analog_read_percent@r 004A                             _ANSELA 1E8C  
                           _RA1PPS 1D8D                             _RA2PPS 1D8E  
                           _RC2REG 0616                             _RA5PPS 1D91  
                           i1l1901 0027                             i1l1903 002E  
                           i1l1905 0033                             i1l1907 0035  
                           i1l1891 000B                             i1l1893 0011  
                           i1l1895 0018                             i1l1897 001C  
                           i1l1889 0006                             i1l1899 0021  
                           u150_20 002E                             u150_21 002D  
                           u151_20 0033                             u151_21 0032  
                           u146_20 000B                             u146_21 000A  
                           u147_20 0011                             u147_21 0010  
                           u148_20 0021                             u148_21 0020  
                           u149_20 0027                             u149_21 0026  
                           _RX2PPS 1E43                             _TX2REG 0617  
                 __end_of___xxtofl 032D                          ??___flmul 002E  
                        ??___fltol 0044                       _Analog_setup 063B  
                __end_of_WDT_setup 06B3                        ?_LoRa_setup 0070  
                     ___xxtofl@arg 0022                       ___xxtofl@exp 0021  
                     ___xxtofl@val 0071            __end_of__initialization 0043  
      I2C_setup_slave@slaveAddress 0071                         ___fltol@f1 0040  
                   __pcstackCOMMON 0070                  ??_I2C_setup_slave 0071  
                       __pbssBANK1 00A0               __end_of_EUSART_setup 063B  
             __end_of_EUSART_print 057D               __end_of_EUSART_write 0697  
                __end_of__Umul8_16 05E8                  ?_AT_command_check 0020  
                     ??_AT_command 007A                         __pmaintext 032D  
               ??_AT_command_check 0078                         __pintentry 0004  
                        ?___xxtofl 0071                            _SP2BRGH 0619  
                          _SP2BRGL 0618                            _SSP1ADD 068D  
                          _SSP1BUF 068C                 __end_of_AT_command 0627  
                    ?_remote_check 0071                  ?_EUSART_print_hex 0070  
                          ___flmul 0047                            ___fltol 03B1  
               ??_EUSART_print_hex 0072                            __ptext1 05E8  
                          __ptext2 06AD                            __ptext3 06B6  
                          __ptext4 0483                            __ptext5 0422  
                          __ptext6 05FE                            __ptext7 0613  
                          __ptext8 0504                            __ptext9 057D  
                       ??___xxtofl 0075                            clrloop0 06A8  
             end_of_initialization 0043                     ??_remote_check 0073  
                        _PORTAbits 000C                      EUSART_print@c 0077  
                    ___xxtofl@sign 0020                          _TRISAbits 0012  
                main@sleep_counter 004E  AT_command_check@expected_response 0022  
                     ??_LoRa_setup 0025              LoRa_send_data@battery 0024  
             AT_command@at_command 0078                          _WDT_setup 06AD  
                      ___flmul@grs 0034                    _I2C_setup_slave 05A1  
                ??_Analog_read_raw 0073                 __end_of_LoRa_setup 04CD  
                        _RX_buffer 00A0                       _EUSART_setup 0627  
                     _EUSART_print 0557                       _EUSART_write 068D  
              start_initialization 003A                        __end_of_ISR 0038  
              _EUSART_clear_buffer 05FE                         ?_WDT_setup 0070  
                        __Umul8_16 05C5               ?_EUSART_clear_buffer 0071  
             __end_of_remote_check 05FE                  AT_command_check@i 007B  
                        ___flmul@a 002A                          ___flmul@b 0026  
                      __pbssCOMMON 007C                          ___latbits 0002  
                    __pcstackBANK0 0020            __end_of_I2C_setup_slave 05C5  
              _Analog_read_percent 04CD                           ?___flmul 0026  
                         ?___fltol 0040                         ?__Umul8_16 0071  
            ??_EUSART_clear_buffer 0072               ?_Analog_read_percent 0070  
                   _LoRa_send_data 0504                      ??_SLEEP_start 0071  
           EUSART_print_hex@number 0073                        ??_WDT_setup 0071  
              EUSART_print_hex@ref 0531                          clear_ram0 06A7  
                         _PIE3bits 0099                           _PIR3bits 008F  
                         _SSP1CON2 0691             __end_of_LoRa_send_data 0531  
                         _SSP1STAT 068F              ??_Analog_read_percent 007C  
                       _ADCON0bits 1D26                      ?_Analog_setup 0070  
                 ?_I2C_setup_slave 0070                           _RX_index 007C  
              __end_of_SLEEP_start 06B9                    _Analog_read_raw 0660  
                  ?_LoRa_send_data 0020                        ??__Umul8_16 0073  
                   ??_Analog_setup 0071                   _AT_command_check 0422  
                         ___xxtofl 0282                 EUSART_print@string 0072  
                         __ptext10 0557                           __ptext11 068D  
                         __ptext20 0660                           __ptext12 05A1  
                         __ptext13 0627                           __ptext14 063B  
                         __ptext15 04CD                           __ptext16 0282  
                         __ptext17 03B1                           __ptext18 0047  
                         __ptext19 05C5                       _SSP1CON1bits 0690  
                     _SSP1CON2bits 0691                       _SSP1CON3bits 0692  
                     _remote_check 05E8                         _RC2STAbits 061A  
                         int$flags 007E                         _ODCONAbits 1E8E  
                     _SSP1STATbits 068F      AT_command_check@response_size 0024  
             EUSART_clear_buffer@i 0074                         _INTCONbits 000B  
                      _SLEEP_start 06B6                     __pstringtext10 0000  
                 _EUSART_print_hex 057D            __end_of_Analog_read_raw 066C  
                         intlevel1 0000                  EUSART_print_hex@a 0074  
                       _AT_command 0613                      __pstringtext1 0531  
                    __pstringtext2 0648                      __pstringtext3 0654  
                    __pstringtext4 066C                      __pstringtext5 0677  
                    __pstringtext6 0682                      __pstringtext7 0697  
                    __pstringtext8 069F                      __pstringtext9 06B3  
           __Umul8_16@multiplicand 0071                         _SSP1DATPPS 1E48  
                       _SSP1CLKPPS 1E47                         _WDTCONbits 018C  
                       _TX2STAbits 061B               __Umul8_16@multiplier 0079  
             __end_of_Analog_setup 0648        __end_of_EUSART_clear_buffer 0613  
        LoRa_send_data@temperature 0020                  __Umul8_16@product 0075  
