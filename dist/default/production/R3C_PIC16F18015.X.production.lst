

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 10 16:53:03 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18015
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Generated 19/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F18015 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     0012                     	;# 
    74     0018                     	;# 
    75     008C                     	;# 
    76     008D                     	;# 
    77     008E                     	;# 
    78     008F                     	;# 
    79     0090                     	;# 
    80     0096                     	;# 
    81     0097                     	;# 
    82     0098                     	;# 
    83     0099                     	;# 
    84     009A                     	;# 
    85     018C                     	;# 
    86     018D                     	;# 
    87     018E                     	;# 
    88     018F                     	;# 
    89     019C                     	;# 
    90     019C                     	;# 
    91     019D                     	;# 
    92     019D                     	;# 
    93     019E                     	;# 
    94     019F                     	;# 
    95     020E                     	;# 
    96     020F                     	;# 
    97     0210                     	;# 
    98     0211                     	;# 
    99     0212                     	;# 
   100     0213                     	;# 
   101     0214                     	;# 
   102     028C                     	;# 
   103     028C                     	;# 
   104     028D                     	;# 
   105     028E                     	;# 
   106     028F                     	;# 
   107     028F                     	;# 
   108     0290                     	;# 
   109     0290                     	;# 
   110     0291                     	;# 
   111     0291                     	;# 
   112     0292                     	;# 
   113     0292                     	;# 
   114     0293                     	;# 
   115     0294                     	;# 
   116     0295                     	;# 
   117     0295                     	;# 
   118     0296                     	;# 
   119     0296                     	;# 
   120     0297                     	;# 
   121     0297                     	;# 
   122     030C                     	;# 
   123     030C                     	;# 
   124     030D                     	;# 
   125     030D                     	;# 
   126     030E                     	;# 
   127     030F                     	;# 
   128     0310                     	;# 
   129     0310                     	;# 
   130     0311                     	;# 
   131     0312                     	;# 
   132     0312                     	;# 
   133     0313                     	;# 
   134     0313                     	;# 
   135     0314                     	;# 
   136     0315                     	;# 
   137     0316                     	;# 
   138     0316                     	;# 
   139     0317                     	;# 
   140     0318                     	;# 
   141     0318                     	;# 
   142     0319                     	;# 
   143     0319                     	;# 
   144     031A                     	;# 
   145     031B                     	;# 
   146     031C                     	;# 
   147     031C                     	;# 
   148     031D                     	;# 
   149     038C                     	;# 
   150     038C                     	;# 
   151     038D                     	;# 
   152     038E                     	;# 
   153     038F                     	;# 
   154     0390                     	;# 
   155     0390                     	;# 
   156     0391                     	;# 
   157     0392                     	;# 
   158     0393                     	;# 
   159     039F                     	;# 
   160     040C                     	;# 
   161     040C                     	;# 
   162     040D                     	;# 
   163     040E                     	;# 
   164     040F                     	;# 
   165     040F                     	;# 
   166     0410                     	;# 
   167     0411                     	;# 
   168     0412                     	;# 
   169     0412                     	;# 
   170     0413                     	;# 
   171     0414                     	;# 
   172     041F                     	;# 
   173     048C                     	;# 
   174     048C                     	;# 
   175     048D                     	;# 
   176     048E                     	;# 
   177     048F                     	;# 
   178     048F                     	;# 
   179     0490                     	;# 
   180     0491                     	;# 
   181     0492                     	;# 
   182     0493                     	;# 
   183     050C                     	;# 
   184     050C                     	;# 
   185     050D                     	;# 
   186     050D                     	;# 
   187     050E                     	;# 
   188     050F                     	;# 
   189     0510                     	;# 
   190     0511                     	;# 
   191     0512                     	;# 
   192     0513                     	;# 
   193     0514                     	;# 
   194     058C                     	;# 
   195     058D                     	;# 
   196     058E                     	;# 
   197     058F                     	;# 
   198     0590                     	;# 
   199     0591                     	;# 
   200     0592                     	;# 
   201     0593                     	;# 
   202     0594                     	;# 
   203     0595                     	;# 
   204     0596                     	;# 
   205     0597                     	;# 
   206     060C                     	;# 
   207     060D                     	;# 
   208     060E                     	;# 
   209     060E                     	;# 
   210     060F                     	;# 
   211     0610                     	;# 
   212     0611                     	;# 
   213     0612                     	;# 
   214     0616                     	;# 
   215     0617                     	;# 
   216     0618                     	;# 
   217     0618                     	;# 
   218     0619                     	;# 
   219     061A                     	;# 
   220     061B                     	;# 
   221     061C                     	;# 
   222     068C                     	;# 
   223     068D                     	;# 
   224     068E                     	;# 
   225     068F                     	;# 
   226     0690                     	;# 
   227     0691                     	;# 
   228     0692                     	;# 
   229     0696                     	;# 
   230     0697                     	;# 
   231     0698                     	;# 
   232     0699                     	;# 
   233     069A                     	;# 
   234     069B                     	;# 
   235     069C                     	;# 
   236     100C                     	;# 
   237     100D                     	;# 
   238     101F                     	;# 
   239     108C                     	;# 
   240     108D                     	;# 
   241     108E                     	;# 
   242     108F                     	;# 
   243     109F                     	;# 
   244     109F                     	;# 
   245     110C                     	;# 
   246     110D                     	;# 
   247     1C8C                     	;# 
   248     1C8C                     	;# 
   249     1C8D                     	;# 
   250     1C8E                     	;# 
   251     1C8E                     	;# 
   252     1C8F                     	;# 
   253     1C90                     	;# 
   254     1C91                     	;# 
   255     1D0C                     	;# 
   256     1D0C                     	;# 
   257     1D0D                     	;# 
   258     1D0E                     	;# 
   259     1D0E                     	;# 
   260     1D0F                     	;# 
   261     1D10                     	;# 
   262     1D10                     	;# 
   263     1D11                     	;# 
   264     1D12                     	;# 
   265     1D12                     	;# 
   266     1D13                     	;# 
   267     1D14                     	;# 
   268     1D14                     	;# 
   269     1D15                     	;# 
   270     1D16                     	;# 
   271     1D16                     	;# 
   272     1D17                     	;# 
   273     1D18                     	;# 
   274     1D19                     	;# 
   275     1D1A                     	;# 
   276     1D1B                     	;# 
   277     1D1B                     	;# 
   278     1D1C                     	;# 
   279     1D1D                     	;# 
   280     1D1D                     	;# 
   281     1D1E                     	;# 
   282     1D1F                     	;# 
   283     1D21                     	;# 
   284     1D21                     	;# 
   285     1D22                     	;# 
   286     1D23                     	;# 
   287     1D24                     	;# 
   288     1D24                     	;# 
   289     1D25                     	;# 
   290     1D26                     	;# 
   291     1D27                     	;# 
   292     1D28                     	;# 
   293     1D29                     	;# 
   294     1D2A                     	;# 
   295     1D2B                     	;# 
   296     1D2C                     	;# 
   297     1D2D                     	;# 
   298     1D2E                     	;# 
   299     1D8C                     	;# 
   300     1D8D                     	;# 
   301     1D8E                     	;# 
   302     1D90                     	;# 
   303     1D91                     	;# 
   304     1E0C                     	;# 
   305     1E0D                     	;# 
   306     1E0E                     	;# 
   307     1E0F                     	;# 
   308     1E10                     	;# 
   309     1E11                     	;# 
   310     1E12                     	;# 
   311     1E19                     	;# 
   312     1E1A                     	;# 
   313     1E1B                     	;# 
   314     1E1E                     	;# 
   315     1E1F                     	;# 
   316     1E39                     	;# 
   317     1E3D                     	;# 
   318     1E3E                     	;# 
   319     1E3F                     	;# 
   320     1E40                     	;# 
   321     1E41                     	;# 
   322     1E41                     	;# 
   323     1E42                     	;# 
   324     1E42                     	;# 
   325     1E43                     	;# 
   326     1E43                     	;# 
   327     1E44                     	;# 
   328     1E44                     	;# 
   329     1E47                     	;# 
   330     1E48                     	;# 
   331     1E49                     	;# 
   332     1E4A                     	;# 
   333     1E4B                     	;# 
   334     1E4C                     	;# 
   335     1E50                     	;# 
   336     1E8C                     	;# 
   337     1E8D                     	;# 
   338     1E8E                     	;# 
   339     1E8F                     	;# 
   340     1E90                     	;# 
   341     1E91                     	;# 
   342     1E92                     	;# 
   343     1E93                     	;# 
   344     1EE1                     	;# 
   345     1EE2                     	;# 
   346     1F0C                     	;# 
   347     1F0D                     	;# 
   348     1F0E                     	;# 
   349     1FE4                     	;# 
   350     1FE5                     	;# 
   351     1FE6                     	;# 
   352     1FE7                     	;# 
   353     1FE8                     	;# 
   354     1FE8                     	;# 
   355     1FE9                     	;# 
   356     1FEA                     	;# 
   357     1FEA                     	;# 
   358     1FEB                     	;# 
   359     1FED                     	;# 
   360     1FEE                     	;# 
   361     1FEF                     	;# 
   362     0000                     	;# 
   363     0001                     	;# 
   364     0002                     	;# 
   365     0003                     	;# 
   366     0004                     	;# 
   367     0005                     	;# 
   368     0006                     	;# 
   369     0007                     	;# 
   370     0008                     	;# 
   371     0009                     	;# 
   372     000A                     	;# 
   373     000B                     	;# 
   374     000C                     	;# 
   375     0012                     	;# 
   376     0018                     	;# 
   377     008C                     	;# 
   378     008D                     	;# 
   379     008E                     	;# 
   380     008F                     	;# 
   381     0090                     	;# 
   382     0096                     	;# 
   383     0097                     	;# 
   384     0098                     	;# 
   385     0099                     	;# 
   386     009A                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     018E                     	;# 
   390     018F                     	;# 
   391     019C                     	;# 
   392     019C                     	;# 
   393     019D                     	;# 
   394     019D                     	;# 
   395     019E                     	;# 
   396     019F                     	;# 
   397     020E                     	;# 
   398     020F                     	;# 
   399     0210                     	;# 
   400     0211                     	;# 
   401     0212                     	;# 
   402     0213                     	;# 
   403     0214                     	;# 
   404     028C                     	;# 
   405     028C                     	;# 
   406     028D                     	;# 
   407     028E                     	;# 
   408     028F                     	;# 
   409     028F                     	;# 
   410     0290                     	;# 
   411     0290                     	;# 
   412     0291                     	;# 
   413     0291                     	;# 
   414     0292                     	;# 
   415     0292                     	;# 
   416     0293                     	;# 
   417     0294                     	;# 
   418     0295                     	;# 
   419     0295                     	;# 
   420     0296                     	;# 
   421     0296                     	;# 
   422     0297                     	;# 
   423     0297                     	;# 
   424     030C                     	;# 
   425     030C                     	;# 
   426     030D                     	;# 
   427     030D                     	;# 
   428     030E                     	;# 
   429     030F                     	;# 
   430     0310                     	;# 
   431     0310                     	;# 
   432     0311                     	;# 
   433     0312                     	;# 
   434     0312                     	;# 
   435     0313                     	;# 
   436     0313                     	;# 
   437     0314                     	;# 
   438     0315                     	;# 
   439     0316                     	;# 
   440     0316                     	;# 
   441     0317                     	;# 
   442     0318                     	;# 
   443     0318                     	;# 
   444     0319                     	;# 
   445     0319                     	;# 
   446     031A                     	;# 
   447     031B                     	;# 
   448     031C                     	;# 
   449     031C                     	;# 
   450     031D                     	;# 
   451     038C                     	;# 
   452     038C                     	;# 
   453     038D                     	;# 
   454     038E                     	;# 
   455     038F                     	;# 
   456     0390                     	;# 
   457     0390                     	;# 
   458     0391                     	;# 
   459     0392                     	;# 
   460     0393                     	;# 
   461     039F                     	;# 
   462     040C                     	;# 
   463     040C                     	;# 
   464     040D                     	;# 
   465     040E                     	;# 
   466     040F                     	;# 
   467     040F                     	;# 
   468     0410                     	;# 
   469     0411                     	;# 
   470     0412                     	;# 
   471     0412                     	;# 
   472     0413                     	;# 
   473     0414                     	;# 
   474     041F                     	;# 
   475     048C                     	;# 
   476     048C                     	;# 
   477     048D                     	;# 
   478     048E                     	;# 
   479     048F                     	;# 
   480     048F                     	;# 
   481     0490                     	;# 
   482     0491                     	;# 
   483     0492                     	;# 
   484     0493                     	;# 
   485     050C                     	;# 
   486     050C                     	;# 
   487     050D                     	;# 
   488     050D                     	;# 
   489     050E                     	;# 
   490     050F                     	;# 
   491     0510                     	;# 
   492     0511                     	;# 
   493     0512                     	;# 
   494     0513                     	;# 
   495     0514                     	;# 
   496     058C                     	;# 
   497     058D                     	;# 
   498     058E                     	;# 
   499     058F                     	;# 
   500     0590                     	;# 
   501     0591                     	;# 
   502     0592                     	;# 
   503     0593                     	;# 
   504     0594                     	;# 
   505     0595                     	;# 
   506     0596                     	;# 
   507     0597                     	;# 
   508     060C                     	;# 
   509     060D                     	;# 
   510     060E                     	;# 
   511     060E                     	;# 
   512     060F                     	;# 
   513     0610                     	;# 
   514     0611                     	;# 
   515     0612                     	;# 
   516     0616                     	;# 
   517     0617                     	;# 
   518     0618                     	;# 
   519     0618                     	;# 
   520     0619                     	;# 
   521     061A                     	;# 
   522     061B                     	;# 
   523     061C                     	;# 
   524     068C                     	;# 
   525     068D                     	;# 
   526     068E                     	;# 
   527     068F                     	;# 
   528     0690                     	;# 
   529     0691                     	;# 
   530     0692                     	;# 
   531     0696                     	;# 
   532     0697                     	;# 
   533     0698                     	;# 
   534     0699                     	;# 
   535     069A                     	;# 
   536     069B                     	;# 
   537     069C                     	;# 
   538     100C                     	;# 
   539     100D                     	;# 
   540     101F                     	;# 
   541     108C                     	;# 
   542     108D                     	;# 
   543     108E                     	;# 
   544     108F                     	;# 
   545     109F                     	;# 
   546     109F                     	;# 
   547     110C                     	;# 
   548     110D                     	;# 
   549     1C8C                     	;# 
   550     1C8C                     	;# 
   551     1C8D                     	;# 
   552     1C8E                     	;# 
   553     1C8E                     	;# 
   554     1C8F                     	;# 
   555     1C90                     	;# 
   556     1C91                     	;# 
   557     1D0C                     	;# 
   558     1D0C                     	;# 
   559     1D0D                     	;# 
   560     1D0E                     	;# 
   561     1D0E                     	;# 
   562     1D0F                     	;# 
   563     1D10                     	;# 
   564     1D10                     	;# 
   565     1D11                     	;# 
   566     1D12                     	;# 
   567     1D12                     	;# 
   568     1D13                     	;# 
   569     1D14                     	;# 
   570     1D14                     	;# 
   571     1D15                     	;# 
   572     1D16                     	;# 
   573     1D16                     	;# 
   574     1D17                     	;# 
   575     1D18                     	;# 
   576     1D19                     	;# 
   577     1D1A                     	;# 
   578     1D1B                     	;# 
   579     1D1B                     	;# 
   580     1D1C                     	;# 
   581     1D1D                     	;# 
   582     1D1D                     	;# 
   583     1D1E                     	;# 
   584     1D1F                     	;# 
   585     1D21                     	;# 
   586     1D21                     	;# 
   587     1D22                     	;# 
   588     1D23                     	;# 
   589     1D24                     	;# 
   590     1D24                     	;# 
   591     1D25                     	;# 
   592     1D26                     	;# 
   593     1D27                     	;# 
   594     1D28                     	;# 
   595     1D29                     	;# 
   596     1D2A                     	;# 
   597     1D2B                     	;# 
   598     1D2C                     	;# 
   599     1D2D                     	;# 
   600     1D2E                     	;# 
   601     1D8C                     	;# 
   602     1D8D                     	;# 
   603     1D8E                     	;# 
   604     1D90                     	;# 
   605     1D91                     	;# 
   606     1E0C                     	;# 
   607     1E0D                     	;# 
   608     1E0E                     	;# 
   609     1E0F                     	;# 
   610     1E10                     	;# 
   611     1E11                     	;# 
   612     1E12                     	;# 
   613     1E19                     	;# 
   614     1E1A                     	;# 
   615     1E1B                     	;# 
   616     1E1E                     	;# 
   617     1E1F                     	;# 
   618     1E39                     	;# 
   619     1E3D                     	;# 
   620     1E3E                     	;# 
   621     1E3F                     	;# 
   622     1E40                     	;# 
   623     1E41                     	;# 
   624     1E41                     	;# 
   625     1E42                     	;# 
   626     1E42                     	;# 
   627     1E43                     	;# 
   628     1E43                     	;# 
   629     1E44                     	;# 
   630     1E44                     	;# 
   631     1E47                     	;# 
   632     1E48                     	;# 
   633     1E49                     	;# 
   634     1E4A                     	;# 
   635     1E4B                     	;# 
   636     1E4C                     	;# 
   637     1E50                     	;# 
   638     1E8C                     	;# 
   639     1E8D                     	;# 
   640     1E8E                     	;# 
   641     1E8F                     	;# 
   642     1E90                     	;# 
   643     1E91                     	;# 
   644     1E92                     	;# 
   645     1E93                     	;# 
   646     1EE1                     	;# 
   647     1EE2                     	;# 
   648     1F0C                     	;# 
   649     1F0D                     	;# 
   650     1F0E                     	;# 
   651     1FE4                     	;# 
   652     1FE5                     	;# 
   653     1FE6                     	;# 
   654     1FE7                     	;# 
   655     1FE8                     	;# 
   656     1FE8                     	;# 
   657     1FE9                     	;# 
   658     1FEA                     	;# 
   659     1FEA                     	;# 
   660     1FEB                     	;# 
   661     1FED                     	;# 
   662     1FEE                     	;# 
   663     1FEF                     	;# 
   664     0012                     _TRISAbits	set	18
   665     000C                     _PORTA	set	12
   666     0012                     _TRISA	set	18
   667     008F                     _PIR3bits	set	143
   668     018C                     _WDTCONbits	set	396
   669     0617                     _TX2REG	set	1559
   670     0619                     _SP2BRGH	set	1561
   671     0618                     _SP2BRGL	set	1560
   672     061A                     _RC2STAbits	set	1562
   673     061C                     _BAUD2CONbits	set	1564
   674     061B                     _TX2STAbits	set	1563
   675     068C                     _SSP1BUF	set	1676
   676     0691                     _SSP1CON2bits	set	1681
   677     068F                     _SSP1STAT	set	1679
   678     068D                     _SSP1ADD	set	1677
   679     0691                     _SSP1CON2	set	1681
   680     0690                     _SSP1CON1bits	set	1680
   681     068F                     _SSP1STATbits	set	1679
   682     1D91                     _RA5PPS	set	7569
   683     1D8E                     _RA2PPS	set	7566
   684     1D8D                     _RA1PPS	set	7565
   685     1E48                     _SSP1DATPPS	set	7752
   686     1E47                     _SSP1CLKPPS	set	7751
   687     1E8E                     _ODCONAbits	set	7822
   688     1E8C                     _ANSELA	set	7820
   689                           
   690                           	psect	stringtext1
   691     0800                     __pstringtext1:
   692     0800                     STR_1:
   693     0800  3448               	retlw	72	;'H'
   694     0801  3465               	retlw	101	;'e'
   695     0802  346C               	retlw	108	;'l'
   696     0803  346C               	retlw	108	;'l'
   697     0804  346F               	retlw	111	;'o'
   698     0805  3420               	retlw	32	;' '
   699     0806  3421               	retlw	33	;'!'
   700     0807  3420               	retlw	32	;' '
   701     0808  3449               	retlw	73	;'I'
   702     0809  3420               	retlw	32	;' '
   703     080A  3461               	retlw	97	;'a'
   704     080B  346D               	retlw	109	;'m'
   705     080C  3420               	retlw	32	;' '
   706     080D  3461               	retlw	97	;'a'
   707     080E  3420               	retlw	32	;' '
   708     080F  3450               	retlw	80	;'P'
   709     0810  3449               	retlw	73	;'I'
   710     0811  3443               	retlw	67	;'C'
   711     0812  3420               	retlw	32	;' '
   712     0813  3421               	retlw	33	;'!'
   713     0814  3420               	retlw	32	;' '
   714     0815  3400               	retlw	0
   715                           
   716                           	psect	stringtext2
   717     0000                     __pstringtext2:
   718                           
   719                           	psect	cinit
   720     07FD                     start_initialization:	
   721                           ; #config settings
   722                           
   723     07FD                     __initialization:
   724     07FD                     end_of_initialization:	
   725                           ;End of C runtime variable initialization code
   726                           
   727     07FD                     __end_of__initialization:
   728     07FD  0140               	movlb	0
   729     07FE  3187  2F85         	ljmp	_main	;jump to C main() function
   730                           
   731                           	psect	cstackCOMMON
   732     0070                     __pcstackCOMMON:
   733     0070                     ?_I2C_setup:
   734     0070                     ??_I2C_setup:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     ?_EUSART_setup:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0070                     ??_EUSART_setup:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ?_WDT_setup:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ??_WDT_setup:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ?_I2C_PCF8575_read:	
   750                           ; 1 bytes @ 0x0
   751                           
   752     0070                     ?_main:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     ?_I2C_wait:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ??_I2C_wait:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     ?_I2C_start:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ??_I2C_start:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ?_I2C_stop:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ??_I2C_stop:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ?_I2C_write:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ??_I2C_write:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0070                     ?_I2C_read:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0070                     ??_I2C_read:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0070                     ?_EUSART_write:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0070                     ??_EUSART_write:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0070                     I2C_write@data:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0070                     I2C_read@tmp:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0070                     EUSART_write@txData:	
   798                           ; 1 bytes @ 0x0
   799                           
   800                           
   801                           ; 1 bytes @ 0x0
   802     0070                     	ds	1
   803     0071                     ?_EUSART_print:
   804     0071                     ?_I2C_read_query:	
   805                           ; 1 bytes @ 0x1
   806                           
   807     0071                     I2C_read_query@data:	
   808                           ; 1 bytes @ 0x1
   809                           
   810     0071                     EUSART_print@string:	
   811                           ; 1 bytes @ 0x1
   812                           
   813                           
   814                           ; 2 bytes @ 0x1
   815     0071                     	ds	1
   816     0072                     I2C_read_query@number_of_bytes:
   817                           
   818                           ; 1 bytes @ 0x2
   819     0072                     	ds	1
   820     0073                     ??_EUSART_print:
   821     0073                     ??_I2C_read_query:	
   822                           ; 1 bytes @ 0x3
   823                           
   824                           
   825                           ; 1 bytes @ 0x3
   826     0073                     	ds	1
   827     0074                     I2C_read_query@i:
   828                           
   829                           ; 2 bytes @ 0x4
   830     0074                     	ds	2
   831     0076                     I2C_read_query@address:
   832     0076                     EUSART_print@c:	
   833                           ; 1 bytes @ 0x6
   834                           
   835                           
   836                           ; 1 bytes @ 0x6
   837     0076                     	ds	1
   838     0077                     ??_I2C_PCF8575_read:
   839     0077                     ??_main:	
   840                           ; 1 bytes @ 0x7
   841                           
   842                           
   843                           ; 1 bytes @ 0x7
   844     0077                     	ds	1
   845                           
   846                           	psect	cstackBANK0
   847     0020                     __pcstackBANK0:
   848     0020                     I2C_PCF8575_read@rx_data:
   849                           
   850                           ; 11 bytes @ 0x0
   851     0020                     	ds	11
   852                           
   853                           	psect	maintext
   854     0785                     __pmaintext:	
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 81 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  humidity        4    0        float 
   865 ;;  temp            4    0        float 
   866 ;;  sleep_counte    1    0        unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : B3F/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   879 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   880 ;;Total ram usage:        1 bytes
   881 ;; Hardware stack levels required when called: 4
   882 ;; This function calls:
   883 ;;		_EUSART_print
   884 ;;		_EUSART_setup
   885 ;;		_I2C_PCF8575_read
   886 ;;		_I2C_setup
   887 ;;		_WDT_setup
   888 ;; This function is called by:
   889 ;;		Startup code after reset
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893     0785                     _main:	
   894                           ;psect for function _main
   895                           
   896     0785                     l992:	
   897                           ;incstack = 0
   898                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   899                           
   900                           
   901                           ;main.c: 83:     TRISA &= !(1<<4);
   902     0785  0140               	movlb	0	; select bank0
   903     0786  0192               	clrf	18	;volatile
   904                           
   905                           ;main.c: 85:     ANSELA = 0x0;
   906     0787  017D               	movlb	61	; select bank61
   907     0788  018C               	clrf	12	;volatile
   908     0789                     l994:
   909                           
   910                           ;main.c: 88:     I2C_setup();
   911     0789  3187  276A  3187   	fcall	_I2C_setup
   912     078C                     l996:
   913                           
   914                           ;main.c: 91:     EUSART_setup();
   915     078C  3187  2745  3187   	fcall	_EUSART_setup
   916     078F                     l998:
   917                           
   918                           ;main.c: 94:     WDT_setup();
   919     078F  3187  2718  3187   	fcall	_WDT_setup
   920     0792                     l1000:
   921     0792                     l1002:
   922                           
   923                           ;main.c: 99:     PORTA |= (1<<4);
   924     0792  0140               	movlb	0	; select bank0
   925     0793  160C               	bsf	12,4	;volatile
   926     0794                     l1004:
   927                           
   928                           ;main.c: 115:             EUSART_print("Hello ! I am a PIC ! ");
   929     0794  3000               	movlw	low (STR_1| (0+32768))
   930     0795  00F1               	movwf	EUSART_print@string
   931     0796  3088               	movlw	high (STR_1| (0+32768))
   932     0797  00F2               	movwf	EUSART_print@string+1
   933     0798  3187  27A9  3187   	fcall	_EUSART_print
   934     079B                     l1006:
   935                           
   936                           ;main.c: 123:         I2C_PCF8575_read();
   937     079B  3187  2726  3187   	fcall	_I2C_PCF8575_read
   938     079E                     l1008:
   939                           
   940                           ;main.c: 124:         _delay((unsigned long)((500)*(1000000/4000.0)));
   941     079E  30A3               	movlw	163
   942     079F  00F7               	movwf	??_main
   943     07A0  3055               	movlw	85
   944     07A1                     u107:
   945     07A1  0B89               	decfsz	9,f
   946     07A2  2FA1               	goto	u107
   947     07A3  0BF7               	decfsz	??_main,f
   948     07A4  2FA1               	goto	u107
   949     07A5  0000               	nop
   950     07A6  2F94               	goto	l1004
   951     07A7  3180  2802         	ljmp	start
   952     07A9                     __end_of_main:
   953                           
   954                           	psect	text1
   955     0718                     __ptext1:	
   956 ;; *************** function _WDT_setup *****************
   957 ;; Defined at:
   958 ;;		line 130 in file "main.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985     0718                     _WDT_setup:	
   986                           ;psect for function _WDT_setup
   987                           
   988     0718                     l838:	
   989                           ;incstack = 0
   990                           ; Regs used in _WDT_setup: [wreg+status,2+status,0]
   991                           
   992                           
   993                           ;main.c: 133:     WDTCONbits.PS = 0b10000;
   994     0718  0143               	movlb	3	; select bank3
   995     0719  080C               	movf	12,w	;volatile
   996     071A  39C1               	andlw	-63
   997     071B  3820               	iorlw	32
   998     071C  008C               	movwf	12	;volatile
   999     071D                     l73:
  1000     071D  0008               	return
  1001     071E                     __end_of_WDT_setup:
  1002                           
  1003                           	psect	text2
  1004     076A                     __ptext2:	
  1005 ;; *************** function _I2C_setup *****************
  1006 ;; Defined at:
  1007 ;;		line 143 in file "main.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  i2c_freq        1    0        unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1025 ;;Total ram usage:        0 bytes
  1026 ;; Hardware stack levels used: 1
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034     076A                     _I2C_setup:	
  1035                           ;psect for function _I2C_setup
  1036                           
  1037     076A                     l808:	
  1038                           ;incstack = 0
  1039                           ; Regs used in _I2C_setup: [wreg+status,2+status,0]
  1040                           
  1041     076A                     l810:
  1042                           
  1043                           ;main.c: 148:     TRISAbits.TRISA1 = 1;
  1044     076A  0140               	movlb	0	; select bank0
  1045     076B  1492               	bsf	18,1	;volatile
  1046     076C                     l812:
  1047                           
  1048                           ;main.c: 149:     TRISAbits.TRISA2 = 1;
  1049     076C  1512               	bsf	18,2	;volatile
  1050     076D                     l814:
  1051                           
  1052                           ;main.c: 150:     ODCONAbits.ODCA1 = 1;
  1053     076D  017D               	movlb	61	; select bank61
  1054     076E  148E               	bsf	14,1	;volatile
  1055     076F                     l816:
  1056                           
  1057                           ;main.c: 151:     ODCONAbits.ODCA2 = 1;
  1058     076F  150E               	bsf	14,2	;volatile
  1059                           
  1060                           ;main.c: 152:     RA1PPS = 0x15;
  1061     0770  3015               	movlw	21
  1062     0771  017B               	movlb	59	; select bank59
  1063     0772  008D               	movwf	13	;volatile
  1064                           
  1065                           ;main.c: 153:     RA2PPS = 0x16;
  1066     0773  3016               	movlw	22
  1067     0774  008E               	movwf	14	;volatile
  1068                           
  1069                           ;main.c: 154:     SSP1CLKPPS = 0x1;
  1070     0775  3001               	movlw	1
  1071     0776  017C               	movlb	60	; select bank60
  1072     0777  00C7               	movwf	71	;volatile
  1073                           
  1074                           ;main.c: 155:     SSP1DATPPS = 0x2;
  1075     0778  3002               	movlw	2
  1076     0779  00C8               	movwf	72	;volatile
  1077     077A                     l818:
  1078                           
  1079                           ;main.c: 157:     SSP1STATbits.SMP = 1;
  1080     077A  014D               	movlb	13	; select bank13
  1081     077B  178F               	bsf	15,7	;volatile
  1082     077C                     l820:
  1083                           
  1084                           ;main.c: 159:     SSP1CON1bits.SSPM = 0b1000;
  1085     077C  0810               	movf	16,w	;volatile
  1086     077D  39F0               	andlw	-16
  1087     077E  3808               	iorlw	8
  1088     077F  0090               	movwf	16	;volatile
  1089     0780                     l822:
  1090                           
  1091                           ;main.c: 161:     SSP1CON2 = 0;
  1092     0780  0191               	clrf	17	;volatile
  1093     0781                     l824:
  1094                           
  1095                           ;main.c: 163:     SSP1ADD = 3;
  1096     0781  3003               	movlw	3
  1097     0782  008D               	movwf	13	;volatile
  1098     0783                     l826:
  1099                           
  1100                           ;main.c: 165:     SSP1CON1bits.SSPEN = 1;
  1101     0783  1690               	bsf	16,5	;volatile
  1102     0784                     l79:
  1103     0784  0008               	return
  1104     0785                     __end_of_I2C_setup:
  1105                           
  1106                           	psect	text3
  1107     0726                     __ptext3:	
  1108 ;; *************** function _I2C_PCF8575_read *****************
  1109 ;; Defined at:
  1110 ;;		line 254 in file "main.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  rx_data        11    0[BANK0 ] unsigned char [11]
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1125 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1127 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1128 ;;Total ram usage:       11 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 3
  1131 ;; This function calls:
  1132 ;;		_I2C_read_query
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138     0726                     _I2C_PCF8575_read:	
  1139                           ;psect for function _I2C_PCF8575_read
  1140                           
  1141     0726                     l978:	
  1142                           ;incstack = 0
  1143                           ; Regs used in _I2C_PCF8575_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1144                           
  1145                           
  1146                           ;main.c: 255:     uint8_t rx_data[11];;main.c: 258:     I2C_read_query(0x27, rx_data, 11
      +                          );
  1147     0726  3020               	movlw	(low (I2C_PCF8575_read@rx_data| 0))& (0+255)
  1148     0727  00F1               	movwf	I2C_read_query@data
  1149     0728  300B               	movlw	11
  1150     0729  00F2               	movwf	I2C_read_query@number_of_bytes
  1151     072A  3027               	movlw	39
  1152     072B  3187  27CF  3187   	fcall	_I2C_read_query
  1153     072E                     l120:
  1154     072E  0008               	return
  1155     072F                     __end_of_I2C_PCF8575_read:
  1156                           
  1157                           	psect	text4
  1158     07CF                     __ptext4:	
  1159 ;; *************** function _I2C_read_query *****************
  1160 ;; Defined at:
  1161 ;;		line 219 in file "main.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  address         1    wreg     unsigned char 
  1164 ;;  data            1    1[COMMON] PTR unsigned char 
  1165 ;;		 -> I2C_PCF8575_read@rx_data(11), I2C_SHT4x_read@rx_data(6), 
  1166 ;;  number_of_by    1    2[COMMON] unsigned char 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  address         1    6[COMMON] unsigned char 
  1169 ;;  i               2    4[COMMON] int 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      unsigned char 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1180 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1182 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1183 ;;Total ram usage:        6 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 2
  1186 ;; This function calls:
  1187 ;;		_I2C_read
  1188 ;;		_I2C_start
  1189 ;;		_I2C_stop
  1190 ;;		_I2C_write
  1191 ;; This function is called by:
  1192 ;;		_I2C_PCF8575_read
  1193 ;;		_I2C_SHT4x_read
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197     07CF                     _I2C_read_query:	
  1198                           ;psect for function _I2C_read_query
  1199                           
  1200                           
  1201                           ;incstack = 0
  1202                           ; Regs used in _I2C_read_query: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1203                           ;I2C_read_query@address stored from wreg
  1204     07CF  00F6               	movwf	I2C_read_query@address
  1205     07D0                     l952:
  1206                           
  1207                           ;main.c: 220:     I2C_start();
  1208     07D0  3187  270C  3187   	fcall	_I2C_start
  1209     07D3                     l954:
  1210                           
  1211                           ;main.c: 221:     address = (address << 1)&0b11111110;
  1212     07D3  3576               	lslf	I2C_read_query@address,w
  1213     07D4  39FE               	andlw	254
  1214     07D5  00F6               	movwf	I2C_read_query@address
  1215     07D6                     l956:
  1216                           
  1217                           ;main.c: 222:     I2C_write(address | 0b00000001);
  1218     07D6  0876               	movf	I2C_read_query@address,w
  1219     07D7  3801               	iorlw	1
  1220     07D8  3187  271E  3187   	fcall	_I2C_write
  1221     07DB                     l958:
  1222                           
  1223                           ;main.c: 223:     for(int i=0; i<number_of_bytes; i++){
  1224     07DB  01F4               	clrf	I2C_read_query@i
  1225     07DC  01F5               	clrf	I2C_read_query@i+1
  1226     07DD  2FEC               	goto	l964
  1227     07DE                     l960:
  1228                           
  1229                           ;main.c: 224:         data[i] = I2C_read();
  1230     07DE  0874               	movf	I2C_read_query@i,w
  1231     07DF  0771               	addwf	I2C_read_query@data,w
  1232     07E0  00F3               	movwf	??_I2C_read_query
  1233     07E1  0873               	movf	??_I2C_read_query,w
  1234     07E2  0086               	movwf	6
  1235     07E3  0187               	clrf	7
  1236     07E4  3187  2753  3187   	fcall	_I2C_read
  1237     07E7  0081               	movwf	1
  1238     07E8                     l962:
  1239                           
  1240                           ;main.c: 225:     }
  1241     07E8  3001               	movlw	1
  1242     07E9  07F4               	addwf	I2C_read_query@i,f
  1243     07EA  3000               	movlw	0
  1244     07EB  3DF5               	addwfc	I2C_read_query@i+1,f
  1245     07EC                     l964:
  1246     07EC  0875               	movf	I2C_read_query@i+1,w
  1247     07ED  3A80               	xorlw	128
  1248     07EE  00F3               	movwf	??_I2C_read_query
  1249     07EF  3080               	movlw	128
  1250     07F0  0273               	subwf	??_I2C_read_query,w
  1251     07F1  1D03               	skipz
  1252     07F2  2FF5               	goto	u85
  1253     07F3  0872               	movf	I2C_read_query@number_of_bytes,w
  1254     07F4  0274               	subwf	I2C_read_query@i,w
  1255     07F5                     u85:
  1256     07F5  1C03               	skipc
  1257     07F6  2FF8               	goto	u81
  1258     07F7  2FF9               	goto	u80
  1259     07F8                     u81:
  1260     07F8  2FDE               	goto	l960
  1261     07F9                     u80:
  1262     07F9                     l966:
  1263                           
  1264                           ;main.c: 226:     I2C_stop();
  1265     07F9  3187  2712  3187   	fcall	_I2C_stop
  1266     07FC                     l109:
  1267     07FC  0008               	return
  1268     07FD                     __end_of_I2C_read_query:
  1269                           
  1270                           	psect	text5
  1271     071E                     __ptext5:	
  1272 ;; *************** function _I2C_write *****************
  1273 ;; Defined at:
  1274 ;;		line 188 in file "main.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  data            1    wreg     unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  data            1    0[COMMON] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1292 ;;Total ram usage:        1 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; Hardware stack levels required when called: 1
  1295 ;; This function calls:
  1296 ;;		_I2C_wait
  1297 ;; This function is called by:
  1298 ;;		_I2C_read_query
  1299 ;;		_I2C_write_query
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303     071E                     _I2C_write:	
  1304                           ;psect for function _I2C_write
  1305                           
  1306                           
  1307                           ;incstack = 0
  1308                           ; Regs used in _I2C_write: [wreg+status,2+status,0+pclath+cstack]
  1309                           ;I2C_write@data stored from wreg
  1310     071E  00F0               	movwf	I2C_write@data
  1311     071F                     l926:
  1312                           
  1313                           ;main.c: 189:   I2C_wait();
  1314     071F  3187  2739  3187   	fcall	_I2C_wait
  1315     0722                     l928:
  1316                           
  1317                           ;main.c: 190:   SSP1BUF = data;
  1318     0722  0870               	movf	I2C_write@data,w
  1319     0723  014D               	movlb	13	; select bank13
  1320     0724  008C               	movwf	12	;volatile
  1321     0725                     l97:
  1322     0725  0008               	return
  1323     0726                     __end_of_I2C_write:
  1324                           
  1325                           	psect	text6
  1326     0712                     __ptext6:	
  1327 ;; *************** function _I2C_stop *****************
  1328 ;; Defined at:
  1329 ;;		line 183 in file "main.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0, pclath, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 1
  1350 ;; This function calls:
  1351 ;;		_I2C_wait
  1352 ;; This function is called by:
  1353 ;;		_I2C_read_query
  1354 ;;		_I2C_write_query
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358     0712                     _I2C_stop:	
  1359                           ;psect for function _I2C_stop
  1360                           
  1361     0712                     l922:	
  1362                           ;incstack = 0
  1363                           ; Regs used in _I2C_stop: [wreg+status,2+status,0+pclath+cstack]
  1364                           
  1365                           
  1366                           ;main.c: 184:   I2C_wait();
  1367     0712  3187  2739  3187   	fcall	_I2C_wait
  1368     0715                     l924:
  1369                           
  1370                           ;main.c: 185:   SSP1CON2bits.PEN = 1;
  1371     0715  014D               	movlb	13	; select bank13
  1372     0716  1511               	bsf	17,2	;volatile
  1373     0717                     l94:
  1374     0717  0008               	return
  1375     0718                     __end_of_I2C_stop:
  1376                           
  1377                           	psect	text7
  1378     070C                     __ptext7:	
  1379 ;; *************** function _I2C_start *****************
  1380 ;; Defined at:
  1381 ;;		line 173 in file "main.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 1
  1402 ;; This function calls:
  1403 ;;		_I2C_wait
  1404 ;; This function is called by:
  1405 ;;		_I2C_read_query
  1406 ;;		_I2C_write_query
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410     070C                     _I2C_start:	
  1411                           ;psect for function _I2C_start
  1412                           
  1413     070C                     l918:	
  1414                           ;incstack = 0
  1415                           ; Regs used in _I2C_start: [wreg+status,2+status,0+pclath+cstack]
  1416                           
  1417                           
  1418                           ;main.c: 174:   I2C_wait();
  1419     070C  3187  2739  3187   	fcall	_I2C_wait
  1420     070F                     l920:
  1421                           
  1422                           ;main.c: 175:   SSP1CON2bits.SEN = 1;
  1423     070F  014D               	movlb	13	; select bank13
  1424     0710  1411               	bsf	17,0	;volatile
  1425     0711                     l88:
  1426     0711  0008               	return
  1427     0712                     __end_of_I2C_start:
  1428                           
  1429                           	psect	text8
  1430     0753                     __ptext8:	
  1431 ;; *************** function _I2C_read *****************
  1432 ;; Defined at:
  1433 ;;		line 193 in file "main.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  tmp             1    0[COMMON] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      unsigned char 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;Total ram usage:        1 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 1
  1454 ;; This function calls:
  1455 ;;		_I2C_wait
  1456 ;; This function is called by:
  1457 ;;		_I2C_read_query
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461     0753                     _I2C_read:	
  1462                           ;psect for function _I2C_read
  1463                           
  1464     0753                     l930:	
  1465                           ;incstack = 0
  1466                           ; Regs used in _I2C_read: [wreg+status,2+status,0+pclath+cstack]
  1467                           
  1468                           
  1469                           ;main.c: 195:   uint8_t tmp;;main.c: 196:   I2C_wait();
  1470     0753  3187  2739  3187   	fcall	_I2C_wait
  1471     0756                     l932:
  1472                           
  1473                           ;main.c: 197:   SSP1CON2bits.RCEN = 1;
  1474     0756  014D               	movlb	13	; select bank13
  1475     0757  1591               	bsf	17,3	;volatile
  1476     0758                     l934:
  1477                           
  1478                           ;main.c: 198:   PORTA &= !(1<<4);
  1479     0758  0140               	movlb	0	; select bank0
  1480     0759  018C               	clrf	12	;volatile
  1481     075A                     l936:
  1482                           
  1483                           ;main.c: 199:   I2C_wait();
  1484     075A  3187  2739  3187   	fcall	_I2C_wait
  1485     075D                     l938:
  1486                           
  1487                           ;main.c: 202:   PORTA |= (1<<4);
  1488     075D  0140               	movlb	0	; select bank0
  1489     075E  160C               	bsf	12,4	;volatile
  1490     075F                     l940:
  1491                           
  1492                           ;main.c: 203:   tmp = SSP1BUF;
  1493     075F  014D               	movlb	13	; select bank13
  1494     0760  080C               	movf	12,w	;volatile
  1495     0761  00F0               	movwf	I2C_read@tmp
  1496     0762                     l942:
  1497                           
  1498                           ;main.c: 204:   I2C_wait();
  1499     0762  3187  2739  3187   	fcall	_I2C_wait
  1500     0765                     l944:
  1501                           
  1502                           ;main.c: 205:   SSP1CON2bits.ACKDT = 0;
  1503     0765  014D               	movlb	13	; select bank13
  1504     0766  1291               	bcf	17,5	;volatile
  1505     0767                     l946:
  1506                           
  1507                           ;main.c: 206:   SSP1CON2bits.ACKEN = 1;
  1508     0767  1611               	bsf	17,4	;volatile
  1509     0768                     l948:
  1510                           
  1511                           ;main.c: 207:   return tmp;
  1512     0768  0870               	movf	I2C_read@tmp,w
  1513     0769                     l100:
  1514     0769  0008               	return
  1515     076A                     __end_of_I2C_read:
  1516                           
  1517                           	psect	text9
  1518     0739                     __ptext9:	
  1519 ;; *************** function _I2C_wait *****************
  1520 ;; Defined at:
  1521 ;;		line 169 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_I2C_start
  1545 ;;		_I2C_stop
  1546 ;;		_I2C_write
  1547 ;;		_I2C_read
  1548 ;;		_I2C_RepeatedStart
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552     0739                     _I2C_wait:	
  1553                           ;psect for function _I2C_wait
  1554                           
  1555     0739                     l914:	
  1556                           ;incstack = 0
  1557                           ; Regs used in _I2C_wait: [wreg+status,2]
  1558                           
  1559     0739                     l82:	
  1560                           ;main.c: 170:    while ((SSP1STAT & 0b00000100) || (SSP1CON2 & 0x00011111));
  1561                           
  1562     0739  014D               	movlb	13	; select bank13
  1563     073A  190F               	btfsc	15,2	;volatile
  1564     073B  2F3D               	goto	u61
  1565     073C  2F3E               	goto	u60
  1566     073D                     u61:
  1567     073D  2F39               	goto	l82
  1568     073E                     u60:
  1569     073E                     l916:
  1570     073E  0811               	movf	17,w	;volatile
  1571     073F  3911               	andlw	17
  1572     0740  1D03               	btfss	3,2
  1573     0741  2F43               	goto	u71
  1574     0742  2F44               	goto	u70
  1575     0743                     u71:
  1576     0743  2F39               	goto	l82
  1577     0744                     u70:
  1578     0744                     l85:
  1579     0744  0008               	return
  1580     0745                     __end_of_I2C_wait:
  1581                           
  1582                           	psect	text10
  1583     0745                     __ptext10:	
  1584 ;; *************** function _EUSART_setup *****************
  1585 ;; Defined at:
  1586 ;;		line 261 in file "main.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613     0745                     _EUSART_setup:	
  1614                           ;psect for function _EUSART_setup
  1615                           
  1616     0745                     l828:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _EUSART_setup: [wreg+status,2]
  1619                           
  1620                           
  1621                           ;main.c: 263:     TX2STAbits.TXEN = 1;
  1622     0745  014C               	movlb	12	; select bank12
  1623     0746  169B               	bsf	27,5	;volatile
  1624                           
  1625                           ;main.c: 265:     TX2STAbits.BRGH = 1;
  1626     0747  151B               	bsf	27,2	;volatile
  1627                           
  1628                           ;main.c: 267:     BAUD2CONbits.BRG16 = 1;
  1629     0748  159C               	bsf	28,3	;volatile
  1630                           
  1631                           ;main.c: 269:     RC2STAbits.SPEN = 1;
  1632     0749  179A               	bsf	26,7	;volatile
  1633     074A                     l830:
  1634                           
  1635                           ;main.c: 271:     SP2BRGL = 25;
  1636     074A  3019               	movlw	25
  1637     074B  0098               	movwf	24	;volatile
  1638     074C                     l832:
  1639                           
  1640                           ;main.c: 272:     SP2BRGH = 0;
  1641     074C  0199               	clrf	25	;volatile
  1642     074D                     l834:
  1643                           
  1644                           ;main.c: 274:     RA5PPS = 0x11;
  1645     074D  3011               	movlw	17
  1646     074E  017B               	movlb	59	; select bank59
  1647     074F  0091               	movwf	17	;volatile
  1648     0750                     l836:
  1649                           
  1650                           ;main.c: 276:     TRISAbits.TRISA5 = 0;
  1651     0750  0140               	movlb	0	; select bank0
  1652     0751  1292               	bcf	18,5	;volatile
  1653     0752                     l123:
  1654     0752  0008               	return
  1655     0753                     __end_of_EUSART_setup:
  1656                           
  1657                           	psect	text11
  1658     07A9                     __ptext11:	
  1659 ;; *************** function _EUSART_print *****************
  1660 ;; Defined at:
  1661 ;;		line 284 in file "main.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  string          2    1[COMMON] PTR const unsigned char 
  1664 ;;		 -> STR_1(22), 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  c               1    6[COMMON] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1680 ;;Total ram usage:        6 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 1
  1683 ;; This function calls:
  1684 ;;		_EUSART_write
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690     07A9                     _EUSART_print:	
  1691                           ;psect for function _EUSART_print
  1692                           
  1693     07A9                     l970:	
  1694                           ;incstack = 0
  1695                           ; Regs used in _EUSART_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1696                           
  1697                           
  1698                           ;main.c: 285:     uint8_t c=0;
  1699     07A9  01F6               	clrf	EUSART_print@c
  1700                           
  1701                           ;main.c: 286:     while(string[c]!=0){
  1702     07AA  2FBE               	goto	l976
  1703     07AB                     l972:
  1704                           
  1705                           ;main.c: 287:         EUSART_write(string[c]);
  1706     07AB  0872               	movf	EUSART_print@string+1,w
  1707     07AC  00F4               	movwf	??_EUSART_print+1
  1708     07AD  0871               	movf	EUSART_print@string,w
  1709     07AE  00F3               	movwf	??_EUSART_print
  1710     07AF  0876               	movf	EUSART_print@c,w
  1711     07B0  0773               	addwf	??_EUSART_print,w
  1712     07B1  0084               	movwf	4
  1713     07B2  0874               	movf	??_EUSART_print+1,w
  1714     07B3  1803               	skipnc
  1715     07B4  0A74               	incf	??_EUSART_print+1,w
  1716     07B5  0085               	movwf	5
  1717     07B6  0800               	movf	0,w	;code access
  1718     07B7  3187  272F  3187   	fcall	_EUSART_write
  1719     07BA                     l974:
  1720                           
  1721                           ;main.c: 288:         c++;
  1722     07BA  3001               	movlw	1
  1723     07BB  00F3               	movwf	??_EUSART_print
  1724     07BC  0873               	movf	??_EUSART_print,w
  1725     07BD  07F6               	addwf	EUSART_print@c,f
  1726     07BE                     l976:
  1727                           
  1728                           ;main.c: 286:     while(string[c]!=0){
  1729     07BE  0872               	movf	EUSART_print@string+1,w
  1730     07BF  00F4               	movwf	??_EUSART_print+1
  1731     07C0  0871               	movf	EUSART_print@string,w
  1732     07C1  00F3               	movwf	??_EUSART_print
  1733     07C2  0876               	movf	EUSART_print@c,w
  1734     07C3  0773               	addwf	??_EUSART_print,w
  1735     07C4  0084               	movwf	4
  1736     07C5  0874               	movf	??_EUSART_print+1,w
  1737     07C6  1803               	skipnc
  1738     07C7  0A74               	incf	??_EUSART_print+1,w
  1739     07C8  0085               	movwf	5
  1740     07C9  0012               	moviw fsr0++
  1741     07CA  1D03               	btfss	3,2
  1742     07CB  2FCD               	goto	u91
  1743     07CC  2FCE               	goto	u90
  1744     07CD                     u91:
  1745     07CD  2FAB               	goto	l972
  1746     07CE                     u90:
  1747     07CE                     l135:
  1748     07CE  0008               	return
  1749     07CF                     __end_of_EUSART_print:
  1750                           
  1751                           	psect	text12
  1752     072F                     __ptext12:	
  1753 ;; *************** function _EUSART_write *****************
  1754 ;; Defined at:
  1755 ;;		line 279 in file "main.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  txData          1    wreg     unsigned char 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  txData          1    0[COMMON] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;Total ram usage:        1 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_EUSART_print
  1779 ;;		_EUSART_print_num
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783     072F                     _EUSART_write:	
  1784                           ;psect for function _EUSART_write
  1785                           
  1786                           
  1787                           ;incstack = 0
  1788                           ; Regs used in _EUSART_write: [wreg]
  1789                           ;EUSART_write@txData stored from wreg
  1790     072F  00F0               	movwf	EUSART_write@txData
  1791     0730                     l804:
  1792     0730                     l126:	
  1793                           ;main.c: 280:     while(PIR3bits.TX2IF == 0){}
  1794                           
  1795     0730  0141               	movlb	1	; select bank1
  1796     0731  1E0F               	btfss	15,4	;volatile
  1797     0732  2F34               	goto	u41
  1798     0733  2F35               	goto	u40
  1799     0734                     u41:
  1800     0734  2F30               	goto	l126
  1801     0735                     u40:
  1802     0735                     l806:
  1803                           
  1804                           ;main.c: 281:     TX2REG = txData;
  1805     0735  0870               	movf	EUSART_write@txData,w
  1806     0736  014C               	movlb	12	; select bank12
  1807     0737  0097               	movwf	23	;volatile
  1808     0738                     l129:
  1809     0738  0008               	return
  1810     0739                     __end_of_EUSART_write:
  1811     007E                     btemp	set	126	;btemp
  1812     007E                     wtemp0	set	126
  1813                           
  1814                           	psect	idloc
  1815                           
  1816                           ;Config register IDLOC0 @ 0x8000
  1817                           ;	unspecified, using default values
  1818     8000                     	org	32768
  1819     8000  3FFF               	dw	16383
  1820                           
  1821                           ;Config register IDLOC1 @ 0x8001
  1822                           ;	unspecified, using default values
  1823     8001                     	org	32769
  1824     8001  3FFF               	dw	16383
  1825                           
  1826                           ;Config register IDLOC2 @ 0x8002
  1827                           ;	unspecified, using default values
  1828     8002                     	org	32770
  1829     8002  3FFF               	dw	16383
  1830                           
  1831                           ;Config register IDLOC3 @ 0x8003
  1832                           ;	unspecified, using default values
  1833     8003                     	org	32771
  1834     8003  3FFF               	dw	16383
  1835                           
  1836                           	psect	config
  1837                           
  1838                           ;Config register CONFIG1 @ 0x8007
  1839                           ;	External Oscillator Selection bits
  1840                           ;	FEXTOSC = OFF, Oscillator not enabled
  1841                           ;	Reset Oscillator Selection bits
  1842                           ;	RSTOSC = HFINTOSC_1MHz, HFINTOSC (1MHz)
  1843                           ;	Clock Out Enable bit
  1844                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  1845                           ;	VDD Range Analog Calibration Selection bit
  1846                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3 - 5
      +                          .5V
  1847     8007                     	org	32775
  1848     8007  3FEC               	dw	16364
  1849                           
  1850                           ;Config register CONFIG2 @ 0x8008
  1851                           ;	Master Clear Enable bit
  1852                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  1853                           ;	Power-up Timer Selection bits
  1854                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1855                           ;	WDT Operating Mode bits
  1856                           ;	WDTE = ON, WDT enabled regardless of Sleep; SEN bit is ignored
  1857                           ;	Brown-out Reset Enable bits
  1858                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit is ignored
  1859                           ;	DAC Buffer Automatic Range Select Enable bit
  1860                           ;	DACAUTOEN = OFF, DAC Buffer reference range is determined by the REFRNG bit
  1861                           ;	Brown-out Reset Voltage Selection bit
  1862                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  1863                           ;	ZCD Disable bit
  1864                           ;	ZCD = OFF, ZCD module is disabled; ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1865                           ;	PPSLOCKED One-Way Set Enable bit
  1866                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once after an unlocking se
      +                          quence is executed; once PPSLOCKED is set, all future changes to PPS registers are preve
      +                          nted
  1867                           ;	Stack Overflow/Underflow Reset Enable bit
  1868                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  1869     8008                     	org	32776
  1870     8008  3FFF               	dw	16383
  1871                           
  1872                           ;Config register CONFIG3 @ 0x8009
  1873                           ;	unspecified, using default values
  1874     8009                     	org	32777
  1875     8009  3FFF               	dw	16383
  1876                           
  1877                           ;Config register CONFIG4 @ 0x800A
  1878                           ;	Boot Block Size Selection bits
  1879                           ;	BBSIZE = BB512, 512 words boot block size
  1880                           ;	Boot Block Enable bit
  1881                           ;	BBEN = OFF, Boot Block disabled
  1882                           ;	Storage Area Flash (SAF) Enable bit
  1883                           ;	SAFEN = OFF, SAF disabled
  1884                           ;	Application Block Write Protection bit
  1885                           ;	WRTAPP = OFF, Application Block is NOT write protected
  1886                           ;	Boot Block Write Protection bit
  1887                           ;	WRTB = OFF, Boot Block is NOT write protected
  1888                           ;	Configuration Register Write Protection bit
  1889                           ;	WRTC = OFF, Configuration Register is NOT write protected
  1890                           ;	Data EEPROM Write-Protection bit
  1891                           ;	WRTD = OFF, Data EEPROM is NOT write-protected
  1892                           ;	Storage Area Flash (SAF) Write Protection bit
  1893                           ;	WRTSAF = OFF, SAF is NOT write protected
  1894                           ;	Low Voltage Programming Enable bit
  1895                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored
  1896     800A                     	org	32778
  1897     800A  3FFF               	dw	16383
  1898                           
  1899                           ;Config register CONFIG5 @ 0x800B
  1900                           ;	Program Flash Memory Code Protection bit
  1901                           ;	CP = OFF, Program Flash Memory code protection is disabled
  1902                           ;	Data EEPROM Code Protection bit
  1903                           ;	CPD = OFF, EEPROM code protection is disabled
  1904     800B                     	org	32779
  1905     800B  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     11      11
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART_print@string	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    I2C_read_query@data	PTR unsigned char  size(1) Largest target is 11
		 -> I2C_PCF8575_read@rx_data(BANK0[11]), I2C_SHT4x_read@rx_data(COMMON[6]), 


Critical Paths under _main in COMMON

    _main->_EUSART_print
    _I2C_PCF8575_read->_I2C_read_query
    _I2C_read_query->_I2C_read
    _I2C_read_query->_I2C_write
    _EUSART_print->_EUSART_write

Critical Paths under _main in BANK0

    _main->_I2C_PCF8575_read

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     690
                                              7 COMMON     1     1      0
                       _EUSART_print
                       _EUSART_setup
                   _I2C_PCF8575_read
                          _I2C_setup
                          _WDT_setup
 ---------------------------------------------------------------------------------
 (1) _WDT_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_setup                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_PCF8575_read                                    11    11      0     508
                                              0 BANK0     11    11      0
                     _I2C_read_query
 ---------------------------------------------------------------------------------
 (2) _I2C_read_query                                       6     4      2     484
                                              1 COMMON     6     4      2
                           _I2C_read
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (3) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_read                                             1     1      0      23
                                              0 COMMON     1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (4) _I2C_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_print                                         6     4      2     181
                                              1 COMMON     6     4      2
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_write                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_print
     _EUSART_write
   _EUSART_setup
   _I2C_PCF8575_read
     _I2C_read_query
       _I2C_read
         _I2C_wait
       _I2C_start
         _I2C_wait
       _I2C_stop
         _I2C_wait
       _I2C_write
         _I2C_wait
   _I2C_setup
   _WDT_setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      B       B       6       13.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 10 16:53:03 2024

                           l73 071D                             l82 0739                             l85 0744  
                           l94 0717                             l79 0784                             l88 0711  
                           l97 0725                             u40 0735                             u41 0734  
                           u60 073E                             u61 073D                             u70 0744  
                           u71 0743                             u80 07F9                             u81 07F8  
                           u90 07CE                             u91 07CD                             u85 07F5  
                          l100 0769                            l120 072E                            l123 0752  
                          l109 07FC                            l126 0730                            l135 07CE  
                          l129 0738                            l810 076A                            l804 0730  
                          l820 077C                            l812 076C                            l806 0735  
                          l830 074A                            l822 0780                            l814 076D  
                          l832 074C                            l920 070F                            l824 0781  
                          l816 076F                            l808 076A                            l834 074D  
                          l914 0739                            l930 0753                            l922 0712  
                          l826 0783                            l818 077A                            l836 0750  
                          l828 0745                            l916 073E                            l940 075F  
                          l932 0756                            l924 0715                            l942 0762  
                          l934 0758                            l918 070C                            l926 071F  
                          l838 0718                            l944 0765                            l936 075A  
                          l928 0722                            l960 07DE                            l952 07D0  
                          l970 07A9                            l946 0767                            l938 075D  
                          l962 07E8                            l954 07D3                            l972 07AB  
                          l948 0768                            l964 07EC                            l956 07D6  
                          l974 07BA                            l966 07F9                            l958 07DB  
                          l976 07BE                            l992 0785                            l978 0726  
                          l994 0789                            l996 078C                            l998 078F  
                          u107 07A1                            wreg 0009                   _BAUD2CONbits 061C  
                         l1000 0792                           l1002 0792                           l1004 0794  
                         l1006 079B                           l1008 079E                           STR_1 0800  
                         _main 0785                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           btemp 007E               __end_of_I2C_read 076A  
             __end_of_I2C_wait 0745                           start 0002               __end_of_I2C_stop 0718  
           EUSART_write@txData 0070               ??_I2C_read_query 0073                  I2C_write@data 0070  
                        ?_main 0070                  ?_EUSART_setup 0070                  ?_EUSART_print 0071  
                ?_EUSART_write 0070                          _PORTA 000C                          _TRISA 0012  
            __end_of_I2C_setup 0785                          status 0003              __end_of_I2C_start 0712  
                        wtemp0 007E              __end_of_I2C_write 0726                __initialization 07FD  
                 __end_of_main 07A9                 ??_EUSART_setup 0070                 ??_EUSART_print 0073  
               ??_EUSART_write 0070                         ??_main 0077                         _ANSELA 1E8C  
                       _RA1PPS 1D8D                         _RA2PPS 1D8E                         _RA5PPS 1D91  
                       _TX2REG 0617                      ?_I2C_read 0070                      ?_I2C_wait 0070  
                    ?_I2C_stop 0070              __end_of_WDT_setup 071E        __end_of__initialization 07FD  
               __pcstackCOMMON 0070                     ??_I2C_read 0070                     ??_I2C_wait 0070  
                   ??_I2C_stop 0070           __end_of_EUSART_setup 0753           __end_of_EUSART_print 07CF  
         __end_of_EUSART_write 0739                     __pmaintext 0785                        _SP2BRGH 0619  
                      _SP2BRGL 0618                        _SSP1ADD 068D                        _SSP1BUF 068C  
                    _I2C_setup 076A                      _I2C_start 070C                      _I2C_write 071E  
                      __ptext1 0718                        __ptext2 076A                        __ptext3 0726  
                      __ptext4 07CF                        __ptext5 071E                        __ptext6 0712  
                      __ptext7 070C                        __ptext8 0753                        __ptext9 0739  
             _I2C_PCF8575_read 0726           end_of_initialization 07FD                     ?_I2C_setup 0070  
                   ?_I2C_start 0070                     ?_I2C_write 0070                  EUSART_print@c 0076  
                    _TRISAbits 0012                      _WDT_setup 0718                   _EUSART_setup 0745  
                 _EUSART_print 07A9                   _EUSART_write 072F            start_initialization 07FD  
                   ?_WDT_setup 0070                    ??_I2C_setup 0070                    ??_I2C_start 0070  
                  ??_I2C_write 0070        I2C_PCF8575_read@rx_data 0020                      ___latbits 0002  
                __pcstackBANK0 0020       __end_of_I2C_PCF8575_read 072F                 _I2C_read_query 07CF  
                     _I2C_read 0753                       _I2C_wait 0739                       _I2C_stop 0712  
                  ??_WDT_setup 0070                       _PIR3bits 008F             I2C_read_query@data 0071  
                  I2C_read@tmp 0070                       _SSP1CON2 0691                       _SSP1STAT 068F  
       __end_of_I2C_read_query 07FD                ?_I2C_read_query 0071             EUSART_print@string 0071  
                     __ptext10 0745                       __ptext11 07A9                       __ptext12 072F  
                 _SSP1CON1bits 0690                   _SSP1CON2bits 0691                I2C_read_query@i 0074  
        I2C_read_query@address 0076                     _RC2STAbits 061A                     _ODCONAbits 1E8E  
                 _SSP1STATbits 068F              ?_I2C_PCF8575_read 0070             ??_I2C_PCF8575_read 0077  
                __pstringtext1 0800                  __pstringtext2 0000                     _SSP1DATPPS 1E48  
                   _SSP1CLKPPS 1E47                     _WDTCONbits 018C                     _TX2STAbits 061B  
I2C_read_query@number_of_bytes 0072  
