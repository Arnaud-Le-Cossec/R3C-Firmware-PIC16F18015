

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jan 19 14:32:58 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18015
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 19/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F18015 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     0012                     	;# 
    76     0018                     	;# 
    77     008C                     	;# 
    78     008D                     	;# 
    79     008E                     	;# 
    80     008F                     	;# 
    81     0090                     	;# 
    82     0096                     	;# 
    83     0097                     	;# 
    84     0098                     	;# 
    85     0099                     	;# 
    86     009A                     	;# 
    87     018C                     	;# 
    88     018D                     	;# 
    89     018E                     	;# 
    90     018F                     	;# 
    91     019C                     	;# 
    92     019C                     	;# 
    93     019D                     	;# 
    94     019D                     	;# 
    95     019E                     	;# 
    96     019F                     	;# 
    97     020E                     	;# 
    98     020F                     	;# 
    99     0210                     	;# 
   100     0211                     	;# 
   101     0212                     	;# 
   102     0213                     	;# 
   103     0214                     	;# 
   104     028C                     	;# 
   105     028C                     	;# 
   106     028D                     	;# 
   107     028E                     	;# 
   108     028F                     	;# 
   109     028F                     	;# 
   110     0290                     	;# 
   111     0290                     	;# 
   112     0291                     	;# 
   113     0291                     	;# 
   114     0292                     	;# 
   115     0292                     	;# 
   116     0293                     	;# 
   117     0294                     	;# 
   118     0295                     	;# 
   119     0295                     	;# 
   120     0296                     	;# 
   121     0296                     	;# 
   122     0297                     	;# 
   123     0297                     	;# 
   124     030C                     	;# 
   125     030C                     	;# 
   126     030D                     	;# 
   127     030D                     	;# 
   128     030E                     	;# 
   129     030F                     	;# 
   130     0310                     	;# 
   131     0310                     	;# 
   132     0311                     	;# 
   133     0312                     	;# 
   134     0312                     	;# 
   135     0313                     	;# 
   136     0313                     	;# 
   137     0314                     	;# 
   138     0315                     	;# 
   139     0316                     	;# 
   140     0316                     	;# 
   141     0317                     	;# 
   142     0318                     	;# 
   143     0318                     	;# 
   144     0319                     	;# 
   145     0319                     	;# 
   146     031A                     	;# 
   147     031B                     	;# 
   148     031C                     	;# 
   149     031C                     	;# 
   150     031D                     	;# 
   151     038C                     	;# 
   152     038C                     	;# 
   153     038D                     	;# 
   154     038E                     	;# 
   155     038F                     	;# 
   156     0390                     	;# 
   157     0390                     	;# 
   158     0391                     	;# 
   159     0392                     	;# 
   160     0393                     	;# 
   161     039F                     	;# 
   162     040C                     	;# 
   163     040C                     	;# 
   164     040D                     	;# 
   165     040E                     	;# 
   166     040F                     	;# 
   167     040F                     	;# 
   168     0410                     	;# 
   169     0411                     	;# 
   170     0412                     	;# 
   171     0412                     	;# 
   172     0413                     	;# 
   173     0414                     	;# 
   174     041F                     	;# 
   175     048C                     	;# 
   176     048C                     	;# 
   177     048D                     	;# 
   178     048E                     	;# 
   179     048F                     	;# 
   180     048F                     	;# 
   181     0490                     	;# 
   182     0491                     	;# 
   183     0492                     	;# 
   184     0493                     	;# 
   185     050C                     	;# 
   186     050C                     	;# 
   187     050D                     	;# 
   188     050D                     	;# 
   189     050E                     	;# 
   190     050F                     	;# 
   191     0510                     	;# 
   192     0511                     	;# 
   193     0512                     	;# 
   194     0513                     	;# 
   195     0514                     	;# 
   196     058C                     	;# 
   197     058D                     	;# 
   198     058E                     	;# 
   199     058F                     	;# 
   200     0590                     	;# 
   201     0591                     	;# 
   202     0592                     	;# 
   203     0593                     	;# 
   204     0594                     	;# 
   205     0595                     	;# 
   206     0596                     	;# 
   207     0597                     	;# 
   208     060C                     	;# 
   209     060D                     	;# 
   210     060E                     	;# 
   211     060E                     	;# 
   212     060F                     	;# 
   213     0610                     	;# 
   214     0611                     	;# 
   215     0612                     	;# 
   216     0616                     	;# 
   217     0617                     	;# 
   218     0618                     	;# 
   219     0618                     	;# 
   220     0619                     	;# 
   221     061A                     	;# 
   222     061B                     	;# 
   223     061C                     	;# 
   224     068C                     	;# 
   225     068D                     	;# 
   226     068E                     	;# 
   227     068F                     	;# 
   228     0690                     	;# 
   229     0691                     	;# 
   230     0692                     	;# 
   231     0696                     	;# 
   232     0697                     	;# 
   233     0698                     	;# 
   234     0699                     	;# 
   235     069A                     	;# 
   236     069B                     	;# 
   237     069C                     	;# 
   238     100C                     	;# 
   239     100D                     	;# 
   240     101F                     	;# 
   241     108C                     	;# 
   242     108D                     	;# 
   243     108E                     	;# 
   244     108F                     	;# 
   245     109F                     	;# 
   246     109F                     	;# 
   247     110C                     	;# 
   248     110D                     	;# 
   249     1C8C                     	;# 
   250     1C8C                     	;# 
   251     1C8D                     	;# 
   252     1C8E                     	;# 
   253     1C8E                     	;# 
   254     1C8F                     	;# 
   255     1C90                     	;# 
   256     1C91                     	;# 
   257     1D0C                     	;# 
   258     1D0C                     	;# 
   259     1D0D                     	;# 
   260     1D0E                     	;# 
   261     1D0E                     	;# 
   262     1D0F                     	;# 
   263     1D10                     	;# 
   264     1D10                     	;# 
   265     1D11                     	;# 
   266     1D12                     	;# 
   267     1D12                     	;# 
   268     1D13                     	;# 
   269     1D14                     	;# 
   270     1D14                     	;# 
   271     1D15                     	;# 
   272     1D16                     	;# 
   273     1D16                     	;# 
   274     1D17                     	;# 
   275     1D18                     	;# 
   276     1D19                     	;# 
   277     1D1A                     	;# 
   278     1D1B                     	;# 
   279     1D1B                     	;# 
   280     1D1C                     	;# 
   281     1D1D                     	;# 
   282     1D1D                     	;# 
   283     1D1E                     	;# 
   284     1D1F                     	;# 
   285     1D21                     	;# 
   286     1D21                     	;# 
   287     1D22                     	;# 
   288     1D23                     	;# 
   289     1D24                     	;# 
   290     1D24                     	;# 
   291     1D25                     	;# 
   292     1D26                     	;# 
   293     1D27                     	;# 
   294     1D28                     	;# 
   295     1D29                     	;# 
   296     1D2A                     	;# 
   297     1D2B                     	;# 
   298     1D2C                     	;# 
   299     1D2D                     	;# 
   300     1D2E                     	;# 
   301     1D8C                     	;# 
   302     1D8D                     	;# 
   303     1D8E                     	;# 
   304     1D90                     	;# 
   305     1D91                     	;# 
   306     1E0C                     	;# 
   307     1E0D                     	;# 
   308     1E0E                     	;# 
   309     1E0F                     	;# 
   310     1E10                     	;# 
   311     1E11                     	;# 
   312     1E12                     	;# 
   313     1E19                     	;# 
   314     1E1A                     	;# 
   315     1E1B                     	;# 
   316     1E1E                     	;# 
   317     1E1F                     	;# 
   318     1E39                     	;# 
   319     1E3D                     	;# 
   320     1E3E                     	;# 
   321     1E3F                     	;# 
   322     1E40                     	;# 
   323     1E41                     	;# 
   324     1E41                     	;# 
   325     1E42                     	;# 
   326     1E42                     	;# 
   327     1E43                     	;# 
   328     1E43                     	;# 
   329     1E44                     	;# 
   330     1E44                     	;# 
   331     1E47                     	;# 
   332     1E48                     	;# 
   333     1E49                     	;# 
   334     1E4A                     	;# 
   335     1E4B                     	;# 
   336     1E4C                     	;# 
   337     1E50                     	;# 
   338     1E8C                     	;# 
   339     1E8D                     	;# 
   340     1E8E                     	;# 
   341     1E8F                     	;# 
   342     1E90                     	;# 
   343     1E91                     	;# 
   344     1E92                     	;# 
   345     1E93                     	;# 
   346     1EE1                     	;# 
   347     1EE2                     	;# 
   348     1F0C                     	;# 
   349     1F0D                     	;# 
   350     1F0E                     	;# 
   351     1FE4                     	;# 
   352     1FE5                     	;# 
   353     1FE6                     	;# 
   354     1FE7                     	;# 
   355     1FE8                     	;# 
   356     1FE8                     	;# 
   357     1FE9                     	;# 
   358     1FEA                     	;# 
   359     1FEA                     	;# 
   360     1FEB                     	;# 
   361     1FED                     	;# 
   362     1FEE                     	;# 
   363     1FEF                     	;# 
   364     0000                     	;# 
   365     0001                     	;# 
   366     0002                     	;# 
   367     0003                     	;# 
   368     0004                     	;# 
   369     0005                     	;# 
   370     0006                     	;# 
   371     0007                     	;# 
   372     0008                     	;# 
   373     0009                     	;# 
   374     000A                     	;# 
   375     000B                     	;# 
   376     000C                     	;# 
   377     0012                     	;# 
   378     0018                     	;# 
   379     008C                     	;# 
   380     008D                     	;# 
   381     008E                     	;# 
   382     008F                     	;# 
   383     0090                     	;# 
   384     0096                     	;# 
   385     0097                     	;# 
   386     0098                     	;# 
   387     0099                     	;# 
   388     009A                     	;# 
   389     018C                     	;# 
   390     018D                     	;# 
   391     018E                     	;# 
   392     018F                     	;# 
   393     019C                     	;# 
   394     019C                     	;# 
   395     019D                     	;# 
   396     019D                     	;# 
   397     019E                     	;# 
   398     019F                     	;# 
   399     020E                     	;# 
   400     020F                     	;# 
   401     0210                     	;# 
   402     0211                     	;# 
   403     0212                     	;# 
   404     0213                     	;# 
   405     0214                     	;# 
   406     028C                     	;# 
   407     028C                     	;# 
   408     028D                     	;# 
   409     028E                     	;# 
   410     028F                     	;# 
   411     028F                     	;# 
   412     0290                     	;# 
   413     0290                     	;# 
   414     0291                     	;# 
   415     0291                     	;# 
   416     0292                     	;# 
   417     0292                     	;# 
   418     0293                     	;# 
   419     0294                     	;# 
   420     0295                     	;# 
   421     0295                     	;# 
   422     0296                     	;# 
   423     0296                     	;# 
   424     0297                     	;# 
   425     0297                     	;# 
   426     030C                     	;# 
   427     030C                     	;# 
   428     030D                     	;# 
   429     030D                     	;# 
   430     030E                     	;# 
   431     030F                     	;# 
   432     0310                     	;# 
   433     0310                     	;# 
   434     0311                     	;# 
   435     0312                     	;# 
   436     0312                     	;# 
   437     0313                     	;# 
   438     0313                     	;# 
   439     0314                     	;# 
   440     0315                     	;# 
   441     0316                     	;# 
   442     0316                     	;# 
   443     0317                     	;# 
   444     0318                     	;# 
   445     0318                     	;# 
   446     0319                     	;# 
   447     0319                     	;# 
   448     031A                     	;# 
   449     031B                     	;# 
   450     031C                     	;# 
   451     031C                     	;# 
   452     031D                     	;# 
   453     038C                     	;# 
   454     038C                     	;# 
   455     038D                     	;# 
   456     038E                     	;# 
   457     038F                     	;# 
   458     0390                     	;# 
   459     0390                     	;# 
   460     0391                     	;# 
   461     0392                     	;# 
   462     0393                     	;# 
   463     039F                     	;# 
   464     040C                     	;# 
   465     040C                     	;# 
   466     040D                     	;# 
   467     040E                     	;# 
   468     040F                     	;# 
   469     040F                     	;# 
   470     0410                     	;# 
   471     0411                     	;# 
   472     0412                     	;# 
   473     0412                     	;# 
   474     0413                     	;# 
   475     0414                     	;# 
   476     041F                     	;# 
   477     048C                     	;# 
   478     048C                     	;# 
   479     048D                     	;# 
   480     048E                     	;# 
   481     048F                     	;# 
   482     048F                     	;# 
   483     0490                     	;# 
   484     0491                     	;# 
   485     0492                     	;# 
   486     0493                     	;# 
   487     050C                     	;# 
   488     050C                     	;# 
   489     050D                     	;# 
   490     050D                     	;# 
   491     050E                     	;# 
   492     050F                     	;# 
   493     0510                     	;# 
   494     0511                     	;# 
   495     0512                     	;# 
   496     0513                     	;# 
   497     0514                     	;# 
   498     058C                     	;# 
   499     058D                     	;# 
   500     058E                     	;# 
   501     058F                     	;# 
   502     0590                     	;# 
   503     0591                     	;# 
   504     0592                     	;# 
   505     0593                     	;# 
   506     0594                     	;# 
   507     0595                     	;# 
   508     0596                     	;# 
   509     0597                     	;# 
   510     060C                     	;# 
   511     060D                     	;# 
   512     060E                     	;# 
   513     060E                     	;# 
   514     060F                     	;# 
   515     0610                     	;# 
   516     0611                     	;# 
   517     0612                     	;# 
   518     0616                     	;# 
   519     0617                     	;# 
   520     0618                     	;# 
   521     0618                     	;# 
   522     0619                     	;# 
   523     061A                     	;# 
   524     061B                     	;# 
   525     061C                     	;# 
   526     068C                     	;# 
   527     068D                     	;# 
   528     068E                     	;# 
   529     068F                     	;# 
   530     0690                     	;# 
   531     0691                     	;# 
   532     0692                     	;# 
   533     0696                     	;# 
   534     0697                     	;# 
   535     0698                     	;# 
   536     0699                     	;# 
   537     069A                     	;# 
   538     069B                     	;# 
   539     069C                     	;# 
   540     100C                     	;# 
   541     100D                     	;# 
   542     101F                     	;# 
   543     108C                     	;# 
   544     108D                     	;# 
   545     108E                     	;# 
   546     108F                     	;# 
   547     109F                     	;# 
   548     109F                     	;# 
   549     110C                     	;# 
   550     110D                     	;# 
   551     1C8C                     	;# 
   552     1C8C                     	;# 
   553     1C8D                     	;# 
   554     1C8E                     	;# 
   555     1C8E                     	;# 
   556     1C8F                     	;# 
   557     1C90                     	;# 
   558     1C91                     	;# 
   559     1D0C                     	;# 
   560     1D0C                     	;# 
   561     1D0D                     	;# 
   562     1D0E                     	;# 
   563     1D0E                     	;# 
   564     1D0F                     	;# 
   565     1D10                     	;# 
   566     1D10                     	;# 
   567     1D11                     	;# 
   568     1D12                     	;# 
   569     1D12                     	;# 
   570     1D13                     	;# 
   571     1D14                     	;# 
   572     1D14                     	;# 
   573     1D15                     	;# 
   574     1D16                     	;# 
   575     1D16                     	;# 
   576     1D17                     	;# 
   577     1D18                     	;# 
   578     1D19                     	;# 
   579     1D1A                     	;# 
   580     1D1B                     	;# 
   581     1D1B                     	;# 
   582     1D1C                     	;# 
   583     1D1D                     	;# 
   584     1D1D                     	;# 
   585     1D1E                     	;# 
   586     1D1F                     	;# 
   587     1D21                     	;# 
   588     1D21                     	;# 
   589     1D22                     	;# 
   590     1D23                     	;# 
   591     1D24                     	;# 
   592     1D24                     	;# 
   593     1D25                     	;# 
   594     1D26                     	;# 
   595     1D27                     	;# 
   596     1D28                     	;# 
   597     1D29                     	;# 
   598     1D2A                     	;# 
   599     1D2B                     	;# 
   600     1D2C                     	;# 
   601     1D2D                     	;# 
   602     1D2E                     	;# 
   603     1D8C                     	;# 
   604     1D8D                     	;# 
   605     1D8E                     	;# 
   606     1D90                     	;# 
   607     1D91                     	;# 
   608     1E0C                     	;# 
   609     1E0D                     	;# 
   610     1E0E                     	;# 
   611     1E0F                     	;# 
   612     1E10                     	;# 
   613     1E11                     	;# 
   614     1E12                     	;# 
   615     1E19                     	;# 
   616     1E1A                     	;# 
   617     1E1B                     	;# 
   618     1E1E                     	;# 
   619     1E1F                     	;# 
   620     1E39                     	;# 
   621     1E3D                     	;# 
   622     1E3E                     	;# 
   623     1E3F                     	;# 
   624     1E40                     	;# 
   625     1E41                     	;# 
   626     1E41                     	;# 
   627     1E42                     	;# 
   628     1E42                     	;# 
   629     1E43                     	;# 
   630     1E43                     	;# 
   631     1E44                     	;# 
   632     1E44                     	;# 
   633     1E47                     	;# 
   634     1E48                     	;# 
   635     1E49                     	;# 
   636     1E4A                     	;# 
   637     1E4B                     	;# 
   638     1E4C                     	;# 
   639     1E50                     	;# 
   640     1E8C                     	;# 
   641     1E8D                     	;# 
   642     1E8E                     	;# 
   643     1E8F                     	;# 
   644     1E90                     	;# 
   645     1E91                     	;# 
   646     1E92                     	;# 
   647     1E93                     	;# 
   648     1EE1                     	;# 
   649     1EE2                     	;# 
   650     1F0C                     	;# 
   651     1F0D                     	;# 
   652     1F0E                     	;# 
   653     1FE4                     	;# 
   654     1FE5                     	;# 
   655     1FE6                     	;# 
   656     1FE7                     	;# 
   657     1FE8                     	;# 
   658     1FE8                     	;# 
   659     1FE9                     	;# 
   660     1FEA                     	;# 
   661     1FEA                     	;# 
   662     1FEB                     	;# 
   663     1FED                     	;# 
   664     1FEE                     	;# 
   665     1FEF                     	;# 
   666     0012                     _TRISA	set	18
   667     0012                     _TRISAbits	set	18
   668     008F                     _PIR3bits	set	143
   669     018C                     _WDTCONbits	set	396
   670     0616                     _RC2REG	set	1558
   671     0617                     _TX2REG	set	1559
   672     0619                     _SP2BRGH	set	1561
   673     0618                     _SP2BRGL	set	1560
   674     061A                     _RC2STAbits	set	1562
   675     061B                     _TX2STAbits	set	1563
   676     061C                     _BAUD2CONbits	set	1564
   677     068C                     _SSP1BUF	set	1676
   678     0691                     _SSP1CON2bits	set	1681
   679     068F                     _SSP1STAT	set	1679
   680     068D                     _SSP1ADD	set	1677
   681     0691                     _SSP1CON2	set	1681
   682     0690                     _SSP1CON1bits	set	1680
   683     068F                     _SSP1STATbits	set	1679
   684     1D1D                     _ADRES	set	7453
   685     1D26                     _ADCON0bits	set	7462
   686     1D2B                     _ADREF	set	7467
   687     1D1F                     _ADPCH	set	7455
   688     1D8E                     _RA2PPS	set	7566
   689     1D8D                     _RA1PPS	set	7565
   690     1D91                     _RA5PPS	set	7569
   691     1E48                     _SSP1DATPPS	set	7752
   692     1E47                     _SSP1CLKPPS	set	7751
   693     1E43                     _RX2PPS	set	7747
   694     1E8C                     _ANSELA	set	7820
   695     1E8E                     _ODCONAbits	set	7822
   696                           
   697                           	psect	stringtext1
   698     0800                     __pstringtext1:
   699     0800                     STR_1:
   700     0800  3448               	retlw	72	;'H'
   701     0801  3465               	retlw	101	;'e'
   702     0802  346C               	retlw	108	;'l'
   703     0803  346C               	retlw	108	;'l'
   704     0804  346F               	retlw	111	;'o'
   705     0805  3420               	retlw	32	;' '
   706     0806  3421               	retlw	33	;'!'
   707     0807  3420               	retlw	32	;' '
   708     0808  3449               	retlw	73	;'I'
   709     0809  3420               	retlw	32	;' '
   710     080A  3461               	retlw	97	;'a'
   711     080B  346D               	retlw	109	;'m'
   712     080C  3420               	retlw	32	;' '
   713     080D  3461               	retlw	97	;'a'
   714     080E  3420               	retlw	32	;' '
   715     080F  3450               	retlw	80	;'P'
   716     0810  3449               	retlw	73	;'I'
   717     0811  3443               	retlw	67	;'C'
   718     0812  3420               	retlw	32	;' '
   719     0813  3421               	retlw	33	;'!'
   720     0814  3420               	retlw	32	;' '
   721     0815  3400               	retlw	0
   722                           
   723                           	psect	stringtext2
   724     0000                     __pstringtext2:
   725                           
   726                           	psect	cinit
   727     07FD                     start_initialization:	
   728                           ; #config settings
   729                           
   730     07FD                     __initialization:
   731     07FD                     end_of_initialization:	
   732                           ;End of C runtime variable initialization code
   733                           
   734     07FD                     __end_of__initialization:
   735     07FD  0140               	movlb	0
   736     07FE  3187  2FA4         	ljmp	_main	;jump to C main() function
   737                           
   738                           	psect	cstackCOMMON
   739     0070                     __pcstackCOMMON:
   740     0070                     ?_WDT_setup:
   741     0070                     ??_WDT_setup:	
   742                           ; 1 bytes @ 0x0
   743                           
   744     0070                     ?_EUSART_setup:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0070                     ??_EUSART_setup:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0070                     ?_EUSART_write:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ??_EUSART_write:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ?_I2C_setup:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ??_I2C_setup:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ?_I2C_wait:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ??_I2C_wait:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     ?_I2C_start:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ??_I2C_start:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_I2C_stop:	
   775                           ; 1 bytes @ 0x0
   776                           
   777     0070                     ??_I2C_stop:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0070                     ?_I2C_write:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ??_I2C_write:	
   784                           ; 1 bytes @ 0x0
   785                           
   786     0070                     ?_I2C_read:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0070                     ??_I2C_read:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ?_I2C_MCP23008_read:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_Analog_setup:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ??_Analog_setup:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_LoRa_setup:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ??_LoRa_setup:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_main:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     EUSART_write@txData:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     I2C_write@data:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     I2C_read@tmp:	
   817                           ; 1 bytes @ 0x0
   818                           
   819                           
   820                           ; 1 bytes @ 0x0
   821     0070                     	ds	1
   822     0071                     ?_EUSART_print:
   823     0071                     ?_I2C_read_query:	
   824                           ; 1 bytes @ 0x1
   825                           
   826     0071                     I2C_read_query@data:	
   827                           ; 1 bytes @ 0x1
   828                           
   829     0071                     EUSART_print@string:	
   830                           ; 1 bytes @ 0x1
   831                           
   832                           
   833                           ; 2 bytes @ 0x1
   834     0071                     	ds	1
   835     0072                     I2C_read_query@number_of_bytes:
   836                           
   837                           ; 1 bytes @ 0x2
   838     0072                     	ds	1
   839     0073                     ??_EUSART_print:
   840     0073                     ??_I2C_read_query:	
   841                           ; 1 bytes @ 0x3
   842                           
   843                           
   844                           ; 1 bytes @ 0x3
   845     0073                     	ds	1
   846     0074                     I2C_read_query@i:
   847                           
   848                           ; 2 bytes @ 0x4
   849     0074                     	ds	2
   850     0076                     EUSART_print@c:
   851     0076                     I2C_read_query@address:	
   852                           ; 1 bytes @ 0x6
   853                           
   854                           
   855                           ; 1 bytes @ 0x6
   856     0076                     	ds	1
   857     0077                     ??_I2C_MCP23008_read:
   858     0077                     ??_main:	
   859                           ; 1 bytes @ 0x7
   860                           
   861                           
   862                           ; 1 bytes @ 0x7
   863     0077                     	ds	2
   864                           
   865                           	psect	cstackBANK0
   866     0020                     __pcstackBANK0:
   867     0020                     I2C_MCP23008_read@rx_data:
   868                           
   869                           ; 11 bytes @ 0x0
   870     0020                     	ds	11
   871                           
   872                           	psect	maintext
   873     07A4                     __pmaintext:	
   874 ;;
   875 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   876 ;;
   877 ;; *************** function _main *****************
   878 ;; Defined at:
   879 ;;		line 68 in file "main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  humidity        4    0        float 
   884 ;;  temp            4    0        float 
   885 ;;  sleep_counte    1    0        unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : B3F/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   898 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   899 ;;Total ram usage:        2 bytes
   900 ;; Hardware stack levels required when called: 4
   901 ;; This function calls:
   902 ;;		_Analog_setup
   903 ;;		_EUSART_print
   904 ;;		_EUSART_setup
   905 ;;		_I2C_MCP23008_read
   906 ;;		_I2C_setup
   907 ;;		_LoRa_setup
   908 ;;		_WDT_setup
   909 ;; This function is called by:
   910 ;;		Startup code after reset
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914     07A4                     _main:	
   915                           ;psect for function _main
   916                           
   917     07A4                     l1073:	
   918                           ;incstack = 0
   919                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   920                           
   921                           
   922                           ;main.c: 70:     TRISA &= !(1<<4);
   923     07A4  0140               	movlb	0	; select bank0
   924     07A5  0192               	clrf	18	;volatile
   925                           
   926                           ;main.c: 72:     ANSELA = 0x0;
   927     07A6  017D               	movlb	61	; select bank61
   928     07A7  018C               	clrf	12	;volatile
   929     07A8                     l1075:
   930                           
   931                           ;main.c: 75:     I2C_setup();
   932     07A8  3187  2763  3187   	fcall	_I2C_setup
   933     07AB                     l1077:
   934                           
   935                           ;main.c: 78:     EUSART_setup();
   936     07AB  3187  274F  3187   	fcall	_EUSART_setup
   937     07AE                     l1079:
   938                           
   939                           ;main.c: 81:     Analog_setup();
   940     07AE  3187  272F  3187   	fcall	_Analog_setup
   941     07B1                     l1081:
   942                           
   943                           ;main.c: 84:     WDT_setup();
   944     07B1  3187  2702  3187   	fcall	_WDT_setup
   945     07B4                     l1083:
   946                           
   947                           ;main.c: 105:         EUSART_print("Hello ! I am a PIC ! ");
   948     07B4  3000               	movlw	low (STR_1| (0+32768))
   949     07B5  00F1               	movwf	EUSART_print@string
   950     07B6  3088               	movlw	high (STR_1| (0+32768))
   951     07B7  00F2               	movwf	EUSART_print@string+1
   952     07B8  3187  277E  3187   	fcall	_EUSART_print
   953     07BB                     l1085:
   954                           
   955                           ;main.c: 118:         I2C_MCP23008_read();
   956     07BB  3187  2710  3187   	fcall	_I2C_MCP23008_read
   957     07BE                     l1087:
   958                           
   959                           ;main.c: 119:         LoRa_setup();
   960     07BE  3186  26F5  3187   	fcall	_LoRa_setup
   961     07C1                     l1089:
   962                           
   963                           ;main.c: 120:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   964     07C1  3002               	movlw	2
   965     07C2  00F8               	movwf	??_main+1
   966     07C3  3045               	movlw	69
   967     07C4  00F7               	movwf	??_main
   968     07C5  30AA               	movlw	170
   969     07C6                     u127:
   970     07C6  0B89               	decfsz	9,f
   971     07C7  2FC6               	goto	u127
   972     07C8  0BF7               	decfsz	??_main,f
   973     07C9  2FC6               	goto	u127
   974     07CA  0BF8               	decfsz	??_main+1,f
   975     07CB  2FC6               	goto	u127
   976     07CC  2FB4               	goto	l1083
   977     07CD  3180  2802         	ljmp	start
   978     07CF                     __end_of_main:
   979                           
   980                           	psect	text1
   981     0702                     __ptext1:	
   982 ;; *************** function _WDT_setup *****************
   983 ;; Defined at:
   984 ;;		line 4 in file "./watchdog_driver.h"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1002 ;;Total ram usage:        0 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011     0702                     _WDT_setup:	
  1012                           ;psect for function _WDT_setup
  1013                           
  1014     0702                     l823:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _WDT_setup: [wreg+status,2+status,0]
  1017                           
  1018                           
  1019                           ;./watchdog_driver.h: 7:     WDTCONbits.PS = 0b10000;
  1020     0702  0143               	movlb	3	; select bank3
  1021     0703  080C               	movf	12,w	;volatile
  1022     0704  39C1               	andlw	-63
  1023     0705  3820               	iorlw	32
  1024     0706  008C               	movwf	12	;volatile
  1025     0707                     l67:
  1026     0707  0008               	return
  1027     0708                     __end_of_WDT_setup:
  1028                           
  1029                           	psect	text2
  1030     06F5                     __ptext2:	
  1031 ;; *************** function _LoRa_setup *****************
  1032 ;; Defined at:
  1033 ;;		line 3 in file "./lora_driver.h"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		None
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1051 ;;Total ram usage:        0 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060     06F5                     _LoRa_setup:	
  1061                           ;psect for function _LoRa_setup
  1062                           
  1063     06F5                     l153:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _LoRa_setup: []
  1066                           
  1067     06F5  0008               	return
  1068     06F6                     __end_of_LoRa_setup:
  1069                           
  1070                           	psect	text3
  1071     0763                     __ptext3:	
  1072 ;; *************** function _I2C_setup *****************
  1073 ;; Defined at:
  1074 ;;		line 15 in file "./i2c_driver.h"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  i2c_freq        1    0        unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1092 ;;Total ram usage:        0 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101     0763                     _I2C_setup:	
  1102                           ;psect for function _I2C_setup
  1103                           
  1104     0763                     l847:	
  1105                           ;incstack = 0
  1106                           ; Regs used in _I2C_setup: [wreg+status,2+status,0]
  1107                           
  1108     0763                     l849:
  1109                           
  1110                           ;./i2c_driver.h: 20:     TRISAbits.TRISA1 = 1;
  1111     0763  0140               	movlb	0	; select bank0
  1112     0764  1492               	bsf	18,1	;volatile
  1113     0765                     l851:
  1114                           
  1115                           ;./i2c_driver.h: 21:     TRISAbits.TRISA2 = 1;
  1116     0765  1512               	bsf	18,2	;volatile
  1117     0766                     l853:
  1118                           
  1119                           ;./i2c_driver.h: 22:     ODCONAbits.ODCA1 = 1;
  1120     0766  017D               	movlb	61	; select bank61
  1121     0767  148E               	bsf	14,1	;volatile
  1122     0768                     l855:
  1123                           
  1124                           ;./i2c_driver.h: 23:     ODCONAbits.ODCA2 = 1;
  1125     0768  150E               	bsf	14,2	;volatile
  1126                           
  1127                           ;./i2c_driver.h: 24:     RA1PPS = 0x15;
  1128     0769  3015               	movlw	21
  1129     076A  017B               	movlb	59	; select bank59
  1130     076B  008D               	movwf	13	;volatile
  1131                           
  1132                           ;./i2c_driver.h: 25:     RA2PPS = 0x16;
  1133     076C  3016               	movlw	22
  1134     076D  008E               	movwf	14	;volatile
  1135                           
  1136                           ;./i2c_driver.h: 26:     SSP1CLKPPS = 0x1;
  1137     076E  3001               	movlw	1
  1138     076F  017C               	movlb	60	; select bank60
  1139     0770  00C7               	movwf	71	;volatile
  1140                           
  1141                           ;./i2c_driver.h: 27:     SSP1DATPPS = 0x2;
  1142     0771  3002               	movlw	2
  1143     0772  00C8               	movwf	72	;volatile
  1144     0773                     l857:
  1145                           
  1146                           ;./i2c_driver.h: 29:     SSP1STATbits.SMP = 1;
  1147     0773  014D               	movlb	13	; select bank13
  1148     0774  178F               	bsf	15,7	;volatile
  1149     0775                     l859:
  1150                           
  1151                           ;./i2c_driver.h: 31:     SSP1CON1bits.SSPM = 0b1000;
  1152     0775  0810               	movf	16,w	;volatile
  1153     0776  39F0               	andlw	-16
  1154     0777  3808               	iorlw	8
  1155     0778  0090               	movwf	16	;volatile
  1156     0779                     l861:
  1157                           
  1158                           ;./i2c_driver.h: 33:     SSP1CON2 = 0;
  1159     0779  0191               	clrf	17	;volatile
  1160     077A                     l863:
  1161                           
  1162                           ;./i2c_driver.h: 35:     SSP1ADD = 3;
  1163     077A  3003               	movlw	3
  1164     077B  008D               	movwf	13	;volatile
  1165     077C                     l865:
  1166                           
  1167                           ;./i2c_driver.h: 37:     SSP1CON1bits.SSPEN = 1;
  1168     077C  1690               	bsf	16,5	;volatile
  1169     077D                     l97:
  1170     077D  0008               	return
  1171     077E                     __end_of_I2C_setup:
  1172                           
  1173                           	psect	text4
  1174     0710                     __ptext4:	
  1175 ;; *************** function _I2C_MCP23008_read *****************
  1176 ;; Defined at:
  1177 ;;		line 126 in file "./i2c_driver.h"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  rx_data        11    0[BANK0 ] unsigned char [11]
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1192 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1194 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;Total ram usage:       11 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 3
  1198 ;; This function calls:
  1199 ;;		_I2C_read_query
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205     0710                     _I2C_MCP23008_read:	
  1206                           ;psect for function _I2C_MCP23008_read
  1207                           
  1208     0710                     l1037:	
  1209                           ;incstack = 0
  1210                           ; Regs used in _I2C_MCP23008_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1211                           
  1212                           
  1213                           ;./i2c_driver.h: 127:     uint8_t rx_data[11];;./i2c_driver.h: 128:     I2C_read_query(0
      +                          x27, rx_data, 11);
  1214     0710  3020               	movlw	(low (I2C_MCP23008_read@rx_data| 0))& (0+255)
  1215     0711  00F1               	movwf	I2C_read_query@data
  1216     0712  300B               	movlw	11
  1217     0713  00F2               	movwf	I2C_read_query@number_of_bytes
  1218     0714  3027               	movlw	39
  1219     0715  3187  27CF  3187   	fcall	_I2C_read_query
  1220     0718                     l138:
  1221     0718  0008               	return
  1222     0719                     __end_of_I2C_MCP23008_read:
  1223                           
  1224                           	psect	text5
  1225     07CF                     __ptext5:	
  1226 ;; *************** function _I2C_read_query *****************
  1227 ;; Defined at:
  1228 ;;		line 86 in file "./i2c_driver.h"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  address         1    wreg     unsigned char 
  1231 ;;  data            1    1[COMMON] PTR unsigned char 
  1232 ;;		 -> I2C_MCP23008_read@rx_data(11), I2C_SHT4x_read@rx_data(6), 
  1233 ;;  number_of_by    1    2[COMMON] unsigned char 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  address         1    6[COMMON] unsigned char 
  1236 ;;  i               2    4[COMMON] int 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      unsigned char 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1247 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1249 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1250 ;;Total ram usage:        6 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 2
  1253 ;; This function calls:
  1254 ;;		_I2C_read
  1255 ;;		_I2C_start
  1256 ;;		_I2C_stop
  1257 ;;		_I2C_write
  1258 ;; This function is called by:
  1259 ;;		_I2C_MCP23008_read
  1260 ;;		_I2C_SHT4x_read
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264     07CF                     _I2C_read_query:	
  1265                           ;psect for function _I2C_read_query
  1266                           
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _I2C_read_query: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1270                           ;I2C_read_query@address stored from wreg
  1271     07CF  00F6               	movwf	I2C_read_query@address
  1272     07D0                     l999:
  1273                           
  1274                           ;./i2c_driver.h: 87:     I2C_start();
  1275     07D0  3186  26F6  3187   	fcall	_I2C_start
  1276     07D3                     l1001:
  1277                           
  1278                           ;./i2c_driver.h: 88:     address = (address << 1)&0b11111110;
  1279     07D3  3576               	lslf	I2C_read_query@address,w
  1280     07D4  39FE               	andlw	254
  1281     07D5  00F6               	movwf	I2C_read_query@address
  1282     07D6                     l1003:
  1283                           
  1284                           ;./i2c_driver.h: 89:     I2C_write(address | 0b00000001);
  1285     07D6  0876               	movf	I2C_read_query@address,w
  1286     07D7  3801               	iorlw	1
  1287     07D8  3187  2708  3187   	fcall	_I2C_write
  1288     07DB                     l1005:
  1289                           
  1290                           ;./i2c_driver.h: 90:     for(int i=0; i<number_of_bytes; i++){
  1291     07DB  01F4               	clrf	I2C_read_query@i
  1292     07DC  01F5               	clrf	I2C_read_query@i+1
  1293     07DD  2FEC               	goto	l1011
  1294     07DE                     l1007:
  1295                           
  1296                           ;./i2c_driver.h: 91:         data[i] = I2C_read();
  1297     07DE  0874               	movf	I2C_read_query@i,w
  1298     07DF  0771               	addwf	I2C_read_query@data,w
  1299     07E0  00F3               	movwf	??_I2C_read_query
  1300     07E1  0873               	movf	??_I2C_read_query,w
  1301     07E2  0086               	movwf	6
  1302     07E3  0187               	clrf	7
  1303     07E4  3187  273C  3187   	fcall	_I2C_read
  1304     07E7  0081               	movwf	1
  1305     07E8                     l1009:
  1306                           
  1307                           ;./i2c_driver.h: 92:     }
  1308     07E8  3001               	movlw	1
  1309     07E9  07F4               	addwf	I2C_read_query@i,f
  1310     07EA  3000               	movlw	0
  1311     07EB  3DF5               	addwfc	I2C_read_query@i+1,f
  1312     07EC                     l1011:
  1313     07EC  0875               	movf	I2C_read_query@i+1,w
  1314     07ED  3A80               	xorlw	128
  1315     07EE  00F3               	movwf	??_I2C_read_query
  1316     07EF  3080               	movlw	128
  1317     07F0  0273               	subwf	??_I2C_read_query,w
  1318     07F1  1D03               	skipz
  1319     07F2  2FF5               	goto	u105
  1320     07F3  0872               	movf	I2C_read_query@number_of_bytes,w
  1321     07F4  0274               	subwf	I2C_read_query@i,w
  1322     07F5                     u105:
  1323     07F5  1C03               	skipc
  1324     07F6  2FF8               	goto	u101
  1325     07F7  2FF9               	goto	u100
  1326     07F8                     u101:
  1327     07F8  2FDE               	goto	l1007
  1328     07F9                     u100:
  1329     07F9                     l1013:
  1330                           
  1331                           ;./i2c_driver.h: 93:     I2C_stop();
  1332     07F9  3186  26FC  3187   	fcall	_I2C_stop
  1333     07FC                     l127:
  1334     07FC  0008               	return
  1335     07FD                     __end_of_I2C_read_query:
  1336                           
  1337                           	psect	text6
  1338     0708                     __ptext6:	
  1339 ;; *************** function _I2C_write *****************
  1340 ;; Defined at:
  1341 ;;		line 60 in file "./i2c_driver.h"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  data            1    wreg     unsigned char 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  data            1    0[COMMON] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1359 ;;Total ram usage:        1 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 1
  1362 ;; This function calls:
  1363 ;;		_I2C_wait
  1364 ;; This function is called by:
  1365 ;;		_I2C_read_query
  1366 ;;		_I2C_write_query
  1367 ;;		_I2C_MCP23008_write
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371     0708                     _I2C_write:	
  1372                           ;psect for function _I2C_write
  1373                           
  1374                           
  1375                           ;incstack = 0
  1376                           ; Regs used in _I2C_write: [wreg+status,2+status,0+pclath+cstack]
  1377                           ;I2C_write@data stored from wreg
  1378     0708  00F0               	movwf	I2C_write@data
  1379     0709                     l981:
  1380                           
  1381                           ;./i2c_driver.h: 61:   I2C_wait();
  1382     0709  3187  2723  3187   	fcall	_I2C_wait
  1383     070C                     l983:
  1384                           
  1385                           ;./i2c_driver.h: 62:   SSP1BUF = data;
  1386     070C  0870               	movf	I2C_write@data,w
  1387     070D  014D               	movlb	13	; select bank13
  1388     070E  008C               	movwf	12	;volatile
  1389     070F                     l115:
  1390     070F  0008               	return
  1391     0710                     __end_of_I2C_write:
  1392                           
  1393                           	psect	text7
  1394     06FC                     __ptext7:	
  1395 ;; *************** function _I2C_stop *****************
  1396 ;; Defined at:
  1397 ;;		line 55 in file "./i2c_driver.h"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, pclath, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 1
  1418 ;; This function calls:
  1419 ;;		_I2C_wait
  1420 ;; This function is called by:
  1421 ;;		_I2C_read_query
  1422 ;;		_I2C_write_query
  1423 ;;		_I2C_MCP23008_write
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427     06FC                     _I2C_stop:	
  1428                           ;psect for function _I2C_stop
  1429                           
  1430     06FC                     l977:	
  1431                           ;incstack = 0
  1432                           ; Regs used in _I2C_stop: [wreg+status,2+status,0+pclath+cstack]
  1433                           
  1434                           
  1435                           ;./i2c_driver.h: 56:   I2C_wait();
  1436     06FC  3187  2723  3186   	fcall	_I2C_wait
  1437     06FF                     l979:
  1438                           
  1439                           ;./i2c_driver.h: 57:   SSP1CON2bits.PEN = 1;
  1440     06FF  014D               	movlb	13	; select bank13
  1441     0700  1511               	bsf	17,2	;volatile
  1442     0701                     l112:
  1443     0701  0008               	return
  1444     0702                     __end_of_I2C_stop:
  1445                           
  1446                           	psect	text8
  1447     06F6                     __ptext8:	
  1448 ;; *************** function _I2C_start *****************
  1449 ;; Defined at:
  1450 ;;		line 45 in file "./i2c_driver.h"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, pclath, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1468 ;;Total ram usage:        0 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 1
  1471 ;; This function calls:
  1472 ;;		_I2C_wait
  1473 ;; This function is called by:
  1474 ;;		_I2C_read_query
  1475 ;;		_I2C_write_query
  1476 ;;		_I2C_MCP23008_write
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480     06F6                     _I2C_start:	
  1481                           ;psect for function _I2C_start
  1482                           
  1483     06F6                     l973:	
  1484                           ;incstack = 0
  1485                           ; Regs used in _I2C_start: [wreg+status,2+status,0+pclath+cstack]
  1486                           
  1487                           
  1488                           ;./i2c_driver.h: 46:   I2C_wait();
  1489     06F6  3187  2723  3186   	fcall	_I2C_wait
  1490     06F9                     l975:
  1491                           
  1492                           ;./i2c_driver.h: 47:   SSP1CON2bits.SEN = 1;
  1493     06F9  014D               	movlb	13	; select bank13
  1494     06FA  1411               	bsf	17,0	;volatile
  1495     06FB                     l106:
  1496     06FB  0008               	return
  1497     06FC                     __end_of_I2C_start:
  1498                           
  1499                           	psect	text9
  1500     073C                     __ptext9:	
  1501 ;; *************** function _I2C_read *****************
  1502 ;; Defined at:
  1503 ;;		line 65 in file "./i2c_driver.h"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  tmp             1    0[COMMON] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      unsigned char 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;Total ram usage:        1 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 1
  1524 ;; This function calls:
  1525 ;;		_I2C_wait
  1526 ;; This function is called by:
  1527 ;;		_I2C_read_query
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531     073C                     _I2C_read:	
  1532                           ;psect for function _I2C_read
  1533                           
  1534     073C                     l985:	
  1535                           ;incstack = 0
  1536                           ; Regs used in _I2C_read: [wreg+status,2+status,0+pclath+cstack]
  1537                           
  1538                           
  1539                           ;./i2c_driver.h: 66:   uint8_t tmp;;./i2c_driver.h: 67:   I2C_wait();
  1540     073C  3187  2723  3187   	fcall	_I2C_wait
  1541     073F                     l987:
  1542                           
  1543                           ;./i2c_driver.h: 68:   SSP1CON2bits.RCEN = 1;
  1544     073F  014D               	movlb	13	; select bank13
  1545     0740  1591               	bsf	17,3	;volatile
  1546                           
  1547                           ;./i2c_driver.h: 69:   I2C_wait();
  1548     0741  3187  2723  3187   	fcall	_I2C_wait
  1549     0744                     l989:
  1550                           
  1551                           ;./i2c_driver.h: 70:   tmp = SSP1BUF;
  1552     0744  014D               	movlb	13	; select bank13
  1553     0745  080C               	movf	12,w	;volatile
  1554     0746  00F0               	movwf	I2C_read@tmp
  1555     0747                     l991:
  1556                           
  1557                           ;./i2c_driver.h: 71:   I2C_wait();
  1558     0747  3187  2723  3187   	fcall	_I2C_wait
  1559     074A                     l993:
  1560                           
  1561                           ;./i2c_driver.h: 72:   SSP1CON2bits.ACKDT = 0;
  1562     074A  014D               	movlb	13	; select bank13
  1563     074B  1291               	bcf	17,5	;volatile
  1564     074C                     l995:
  1565                           
  1566                           ;./i2c_driver.h: 73:   SSP1CON2bits.ACKEN = 1;
  1567     074C  1611               	bsf	17,4	;volatile
  1568                           
  1569                           ;./i2c_driver.h: 74:   return tmp;
  1570     074D  0870               	movf	I2C_read@tmp,w
  1571     074E                     l118:
  1572     074E  0008               	return
  1573     074F                     __end_of_I2C_read:
  1574                           
  1575                           	psect	text10
  1576     0723                     __ptext10:	
  1577 ;; *************** function _I2C_wait *****************
  1578 ;; Defined at:
  1579 ;;		line 41 in file "./i2c_driver.h"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_I2C_start
  1603 ;;		_I2C_stop
  1604 ;;		_I2C_write
  1605 ;;		_I2C_read
  1606 ;;		_I2C_RepeatedStart
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610     0723                     _I2C_wait:	
  1611                           ;psect for function _I2C_wait
  1612                           
  1613     0723                     l969:	
  1614                           ;incstack = 0
  1615                           ; Regs used in _I2C_wait: [wreg+status,2]
  1616                           
  1617     0723                     l100:	
  1618                           ;./i2c_driver.h: 42:    while ((SSP1STAT & 0b00000100) || (SSP1CON2 & 0x00011111));
  1619                           
  1620     0723  014D               	movlb	13	; select bank13
  1621     0724  190F               	btfsc	15,2	;volatile
  1622     0725  2F27               	goto	u81
  1623     0726  2F28               	goto	u80
  1624     0727                     u81:
  1625     0727  2F23               	goto	l100
  1626     0728                     u80:
  1627     0728                     l971:
  1628     0728  0811               	movf	17,w	;volatile
  1629     0729  3911               	andlw	17
  1630     072A  1D03               	btfss	3,2
  1631     072B  2F2D               	goto	u91
  1632     072C  2F2E               	goto	u90
  1633     072D                     u91:
  1634     072D  2F23               	goto	l100
  1635     072E                     u90:
  1636     072E                     l103:
  1637     072E  0008               	return
  1638     072F                     __end_of_I2C_wait:
  1639                           
  1640                           	psect	text11
  1641     074F                     __ptext11:	
  1642 ;; *************** function _EUSART_setup *****************
  1643 ;; Defined at:
  1644 ;;		line 6 in file "./eusart_driver.h"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671     074F                     _EUSART_setup:	
  1672                           ;psect for function _EUSART_setup
  1673                           
  1674     074F                     l825:	
  1675                           ;incstack = 0
  1676                           ; Regs used in _EUSART_setup: [wreg+status,2]
  1677                           
  1678                           
  1679                           ;./eusart_driver.h: 8:     BAUD2CONbits.BRG16 = 1;
  1680     074F  014C               	movlb	12	; select bank12
  1681     0750  159C               	bsf	28,3	;volatile
  1682                           
  1683                           ;./eusart_driver.h: 10:     TX2STAbits.SYNC = 0;
  1684     0751  121B               	bcf	27,4	;volatile
  1685                           
  1686                           ;./eusart_driver.h: 12:     TX2STAbits.TXEN = 1;
  1687     0752  169B               	bsf	27,5	;volatile
  1688                           
  1689                           ;./eusart_driver.h: 14:     TX2STAbits.BRGH = 1;
  1690     0753  151B               	bsf	27,2	;volatile
  1691                           
  1692                           ;./eusart_driver.h: 16:     RC2STAbits.CREN = 1;
  1693     0754  161A               	bsf	26,4	;volatile
  1694                           
  1695                           ;./eusart_driver.h: 18:     RC2STAbits.SPEN = 1;
  1696     0755  179A               	bsf	26,7	;volatile
  1697     0756                     l827:
  1698                           
  1699                           ;./eusart_driver.h: 20:     SP2BRGL = 25;
  1700     0756  3019               	movlw	25
  1701     0757  0098               	movwf	24	;volatile
  1702     0758                     l829:
  1703                           
  1704                           ;./eusart_driver.h: 21:     SP2BRGH = 0;
  1705     0758  0199               	clrf	25	;volatile
  1706     0759                     l831:
  1707                           
  1708                           ;./eusart_driver.h: 23:     RA5PPS = 0x11;
  1709     0759  3011               	movlw	17
  1710     075A  017B               	movlb	59	; select bank59
  1711     075B  0091               	movwf	17	;volatile
  1712     075C                     l833:
  1713                           
  1714                           ;./eusart_driver.h: 25:     RX2PPS = 0x4;
  1715     075C  3004               	movlw	4
  1716     075D  017C               	movlb	60	; select bank60
  1717     075E  00C3               	movwf	67	;volatile
  1718     075F                     l835:
  1719                           
  1720                           ;./eusart_driver.h: 27:     TRISAbits.TRISA5 = 0;
  1721     075F  0140               	movlb	0	; select bank0
  1722     0760  1292               	bcf	18,5	;volatile
  1723     0761                     l837:
  1724                           
  1725                           ;./eusart_driver.h: 29:     TRISAbits.TRISA4 = 1;
  1726     0761  1612               	bsf	18,4	;volatile
  1727     0762                     l73:
  1728     0762  0008               	return
  1729     0763                     __end_of_EUSART_setup:
  1730                           
  1731                           	psect	text12
  1732     077E                     __ptext12:	
  1733 ;; *************** function _EUSART_print *****************
  1734 ;; Defined at:
  1735 ;;		line 42 in file "./eusart_driver.h"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  string          2    1[COMMON] PTR const unsigned char 
  1738 ;;		 -> STR_1(22), 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  c               1    6[COMMON] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1754 ;;Total ram usage:        6 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 1
  1757 ;; This function calls:
  1758 ;;		_EUSART_write
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764     077E                     _EUSART_print:	
  1765                           ;psect for function _EUSART_print
  1766                           
  1767     077E                     l1017:	
  1768                           ;incstack = 0
  1769                           ; Regs used in _EUSART_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1770                           
  1771                           
  1772                           ;./eusart_driver.h: 43:     uint8_t c=0;
  1773     077E  01F6               	clrf	EUSART_print@c
  1774                           
  1775                           ;./eusart_driver.h: 44:     while(string[c]!=0){
  1776     077F  2F93               	goto	l1023
  1777     0780                     l1019:
  1778                           
  1779                           ;./eusart_driver.h: 45:         EUSART_write(string[c]);
  1780     0780  0872               	movf	EUSART_print@string+1,w
  1781     0781  00F4               	movwf	??_EUSART_print+1
  1782     0782  0871               	movf	EUSART_print@string,w
  1783     0783  00F3               	movwf	??_EUSART_print
  1784     0784  0876               	movf	EUSART_print@c,w
  1785     0785  0773               	addwf	??_EUSART_print,w
  1786     0786  0084               	movwf	4
  1787     0787  0874               	movf	??_EUSART_print+1,w
  1788     0788  1803               	skipnc
  1789     0789  0A74               	incf	??_EUSART_print+1,w
  1790     078A  0085               	movwf	5
  1791     078B  0800               	movf	0,w	;code access
  1792     078C  3187  2719  3187   	fcall	_EUSART_write
  1793     078F                     l1021:
  1794                           
  1795                           ;./eusart_driver.h: 46:         c++;
  1796     078F  3001               	movlw	1
  1797     0790  00F3               	movwf	??_EUSART_print
  1798     0791  0873               	movf	??_EUSART_print,w
  1799     0792  07F6               	addwf	EUSART_print@c,f
  1800     0793                     l1023:
  1801                           
  1802                           ;./eusart_driver.h: 44:     while(string[c]!=0){
  1803     0793  0872               	movf	EUSART_print@string+1,w
  1804     0794  00F4               	movwf	??_EUSART_print+1
  1805     0795  0871               	movf	EUSART_print@string,w
  1806     0796  00F3               	movwf	??_EUSART_print
  1807     0797  0876               	movf	EUSART_print@c,w
  1808     0798  0773               	addwf	??_EUSART_print,w
  1809     0799  0084               	movwf	4
  1810     079A  0874               	movf	??_EUSART_print+1,w
  1811     079B  1803               	skipnc
  1812     079C  0A74               	incf	??_EUSART_print+1,w
  1813     079D  0085               	movwf	5
  1814     079E  0012               	moviw fsr0++
  1815     079F  1D03               	btfss	3,2
  1816     07A0  2FA2               	goto	u111
  1817     07A1  2FA3               	goto	u110
  1818     07A2                     u111:
  1819     07A2  2F80               	goto	l1019
  1820     07A3                     u110:
  1821     07A3                     l91:
  1822     07A3  0008               	return
  1823     07A4                     __end_of_EUSART_print:
  1824                           
  1825                           	psect	text13
  1826     0719                     __ptext13:	
  1827 ;; *************** function _EUSART_write *****************
  1828 ;; Defined at:
  1829 ;;		line 32 in file "./eusart_driver.h"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  txData          1    wreg     unsigned char 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  txData          1    0[COMMON] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1847 ;;Total ram usage:        1 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_EUSART_print
  1853 ;;		_EUSART_print_num
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857     0719                     _EUSART_write:	
  1858                           ;psect for function _EUSART_write
  1859                           
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in _EUSART_write: [wreg]
  1863                           ;EUSART_write@txData stored from wreg
  1864     0719  00F0               	movwf	EUSART_write@txData
  1865     071A                     l801:
  1866     071A                     l76:	
  1867                           ;./eusart_driver.h: 33:     while(PIR3bits.TX2IF == 0){}
  1868                           
  1869     071A  0141               	movlb	1	; select bank1
  1870     071B  1E0F               	btfss	15,4	;volatile
  1871     071C  2F1E               	goto	u31
  1872     071D  2F1F               	goto	u30
  1873     071E                     u31:
  1874     071E  2F1A               	goto	l76
  1875     071F                     u30:
  1876     071F                     l803:
  1877                           
  1878                           ;./eusart_driver.h: 34:     TX2REG = txData;
  1879     071F  0870               	movf	EUSART_write@txData,w
  1880     0720  014C               	movlb	12	; select bank12
  1881     0721  0097               	movwf	23	;volatile
  1882     0722                     l79:
  1883     0722  0008               	return
  1884     0723                     __end_of_EUSART_write:
  1885                           
  1886                           	psect	text14
  1887     072F                     __ptext14:	
  1888 ;; *************** function _Analog_setup *****************
  1889 ;; Defined at:
  1890 ;;		line 7 in file "./analog_driver.h"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;Total ram usage:        0 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917     072F                     _Analog_setup:	
  1918                           ;psect for function _Analog_setup
  1919                           
  1920     072F                     l881:	
  1921                           ;incstack = 0
  1922                           ; Regs used in _Analog_setup: [wreg+status,2+status,0]
  1923                           
  1924                           
  1925                           ;./analog_driver.h: 9:     TRISA |= (1<<0);
  1926     072F  0140               	movlb	0	; select bank0
  1927     0730  1412               	bsf	18,0	;volatile
  1928                           
  1929                           ;./analog_driver.h: 10:     ANSELA |= (1<<0);
  1930     0731  017D               	movlb	61	; select bank61
  1931     0732  140C               	bsf	12,0	;volatile
  1932     0733                     l883:
  1933                           
  1934                           ;./analog_driver.h: 11:     ADPCH = 0 & 0b00111111;
  1935     0733  017A               	movlb	58	; select bank58
  1936     0734  019F               	clrf	31	;volatile
  1937                           
  1938                           ;./analog_driver.h: 12:     ADREF = 0x0;
  1939     0735  01AB               	clrf	43	;volatile
  1940     0736                     l885:
  1941                           
  1942                           ;./analog_driver.h: 13:     ADCON0bits.CS = 1;
  1943     0736  1626               	bsf	38,4	;volatile
  1944     0737                     l887:
  1945                           
  1946                           ;./analog_driver.h: 14:     ADCON0bits.FM = 1;
  1947     0737  0826               	movf	38,w	;volatile
  1948     0738  39F3               	andlw	-13
  1949     0739  3804               	iorlw	4
  1950     073A  00A6               	movwf	38	;volatile
  1951     073B                     l141:
  1952     073B  0008               	return
  1953     073C                     __end_of_Analog_setup:
  1954     007E                     btemp	set	126	;btemp
  1955     007E                     wtemp0	set	126
  1956                           
  1957                           	psect	idloc
  1958                           
  1959                           ;Config register IDLOC0 @ 0x8000
  1960                           ;	unspecified, using default values
  1961     8000                     	org	32768
  1962     8000  3FFF               	dw	16383
  1963                           
  1964                           ;Config register IDLOC1 @ 0x8001
  1965                           ;	unspecified, using default values
  1966     8001                     	org	32769
  1967     8001  3FFF               	dw	16383
  1968                           
  1969                           ;Config register IDLOC2 @ 0x8002
  1970                           ;	unspecified, using default values
  1971     8002                     	org	32770
  1972     8002  3FFF               	dw	16383
  1973                           
  1974                           ;Config register IDLOC3 @ 0x8003
  1975                           ;	unspecified, using default values
  1976     8003                     	org	32771
  1977     8003  3FFF               	dw	16383
  1978                           
  1979                           	psect	config
  1980                           
  1981                           ;Config register CONFIG1 @ 0x8007
  1982                           ;	External Oscillator Selection bits
  1983                           ;	FEXTOSC = OFF, Oscillator not enabled
  1984                           ;	Reset Oscillator Selection bits
  1985                           ;	RSTOSC = HFINTOSC_1MHz, HFINTOSC (1MHz)
  1986                           ;	Clock Out Enable bit
  1987                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  1988                           ;	VDD Range Analog Calibration Selection bit
  1989                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3 - 5
      +                          .5V
  1990     8007                     	org	32775
  1991     8007  3FEC               	dw	16364
  1992                           
  1993                           ;Config register CONFIG2 @ 0x8008
  1994                           ;	Master Clear Enable bit
  1995                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  1996                           ;	Power-up Timer Selection bits
  1997                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1998                           ;	WDT Operating Mode bits
  1999                           ;	WDTE = ON, WDT enabled regardless of Sleep; SEN bit is ignored
  2000                           ;	Brown-out Reset Enable bits
  2001                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit is ignored
  2002                           ;	DAC Buffer Automatic Range Select Enable bit
  2003                           ;	DACAUTOEN = OFF, DAC Buffer reference range is determined by the REFRNG bit
  2004                           ;	Brown-out Reset Voltage Selection bit
  2005                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  2006                           ;	ZCD Disable bit
  2007                           ;	ZCD = OFF, ZCD module is disabled; ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2008                           ;	PPSLOCKED One-Way Set Enable bit
  2009                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once after an unlocking se
      +                          quence is executed; once PPSLOCKED is set, all future changes to PPS registers are preve
      +                          nted
  2010                           ;	Stack Overflow/Underflow Reset Enable bit
  2011                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  2012     8008                     	org	32776
  2013     8008  3FFF               	dw	16383
  2014                           
  2015                           ;Config register CONFIG3 @ 0x8009
  2016                           ;	unspecified, using default values
  2017     8009                     	org	32777
  2018     8009  3FFF               	dw	16383
  2019                           
  2020                           ;Config register CONFIG4 @ 0x800A
  2021                           ;	Boot Block Size Selection bits
  2022                           ;	BBSIZE = BB512, 512 words boot block size
  2023                           ;	Boot Block Enable bit
  2024                           ;	BBEN = OFF, Boot Block disabled
  2025                           ;	Storage Area Flash (SAF) Enable bit
  2026                           ;	SAFEN = OFF, SAF disabled
  2027                           ;	Application Block Write Protection bit
  2028                           ;	WRTAPP = OFF, Application Block is NOT write protected
  2029                           ;	Boot Block Write Protection bit
  2030                           ;	WRTB = OFF, Boot Block is NOT write protected
  2031                           ;	Configuration Register Write Protection bit
  2032                           ;	WRTC = OFF, Configuration Register is NOT write protected
  2033                           ;	Data EEPROM Write-Protection bit
  2034                           ;	WRTD = OFF, Data EEPROM is NOT write-protected
  2035                           ;	Storage Area Flash (SAF) Write Protection bit
  2036                           ;	WRTSAF = OFF, SAF is NOT write protected
  2037                           ;	Low Voltage Programming Enable bit
  2038                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored
  2039     800A                     	org	32778
  2040     800A  3FFF               	dw	16383
  2041                           
  2042                           ;Config register CONFIG5 @ 0x800B
  2043                           ;	Program Flash Memory Code Protection bit
  2044                           ;	CP = OFF, Program Flash Memory code protection is disabled
  2045                           ;	Data EEPROM Code Protection bit
  2046                           ;	CPD = OFF, EEPROM code protection is disabled
  2047     800B                     	org	32779
  2048     800B  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     11      11
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_read_query@data	PTR unsigned char  size(1) Largest target is 11
		 -> I2C_MCP23008_read@rx_data(BANK0[11]), I2C_SHT4x_read@rx_data(COMMON[6]), 

    EUSART_print@string	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 


Critical Paths under _main in COMMON

    _main->_EUSART_print
    _I2C_MCP23008_read->_I2C_read_query
    _I2C_read_query->_I2C_read
    _I2C_read_query->_I2C_write
    _EUSART_print->_EUSART_write

Critical Paths under _main in BANK0

    _main->_I2C_MCP23008_read

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     690
                                              7 COMMON     2     2      0
                       _Analog_setup
                       _EUSART_print
                       _EUSART_setup
                  _I2C_MCP23008_read
                          _I2C_setup
                         _LoRa_setup
                          _WDT_setup
 ---------------------------------------------------------------------------------
 (1) _WDT_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRa_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_setup                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_MCP23008_read                                   11    11      0     508
                                              0 BANK0     11    11      0
                     _I2C_read_query
 ---------------------------------------------------------------------------------
 (2) _I2C_read_query                                       6     4      2     484
                                              1 COMMON     6     4      2
                           _I2C_read
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (3) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_read                                             1     1      0      23
                                              0 COMMON     1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (4) _I2C_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_print                                         6     4      2     181
                                              1 COMMON     6     4      2
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_write                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Analog_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Analog_setup
   _EUSART_print
     _EUSART_write
   _EUSART_setup
   _I2C_MCP23008_read
     _I2C_read_query
       _I2C_read
         _I2C_wait
       _I2C_start
         _I2C_wait
       _I2C_stop
         _I2C_wait
       _I2C_write
         _I2C_wait
   _I2C_setup
   _LoRa_setup
   _WDT_setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      B       B       6       13.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jan 19 14:32:58 2024

                           l73 0762                             l91 07A3                             l67 0707  
                           l76 071A                             l79 0722                             l97 077D  
                           u30 071F                             u31 071E                             u80 0728  
                           u81 0727                             u90 072E                             u91 072D  
                          l100 0723                            l103 072E                            l112 0701  
                          l106 06FB                            l115 070F                            l141 073B  
                          l118 074E                            l127 07FC                            l153 06F5  
                          l138 0718                            l801 071A                            l803 071F  
                          l831 0759                            l823 0702                            l833 075C  
                          l825 074F                            l835 075F                            l827 0756  
                          l851 0765                            l837 0761                            l829 0758  
                          l861 0779                            l853 0766                            l863 077A  
                          l855 0768                            l847 0763                            l881 072F  
                          l865 077C                            l857 0773                            l849 0763  
                          l883 0733                            l971 0728                            l859 0775  
                          l885 0736                            l973 06F6                            l981 0709  
                          l887 0737                            l991 0747                            l975 06F9  
                          l983 070C                            l969 0723                            l993 074A  
                          l985 073C                            l977 06FC                            l995 074C  
                          l987 073F                            l979 06FF                            l989 0744  
                          l999 07D0                            u100 07F9                            u101 07F8  
                          u110 07A3                            u111 07A2                            u105 07F5  
                          u127 07C6                            wreg 0009                   _BAUD2CONbits 061C  
                         l1001 07D3                           l1011 07EC                           l1003 07D6  
                         l1021 078F                           l1013 07F9                           l1005 07DB  
                         l1023 0793                           l1007 07DE                           l1017 077E  
                         l1009 07E8                           l1019 0780                           l1037 0710  
                         l1081 07B1                           l1073 07A4                           l1083 07B4  
                         l1075 07A8                           l1085 07BB                           l1077 07AB  
                         l1087 07BE                           l1079 07AE                           l1089 07C1  
                         STR_1 0800                           _main 07A4                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
             __end_of_I2C_read 074F               __end_of_I2C_wait 072F                           start 0002  
             __end_of_I2C_stop 0702             EUSART_write@txData 0070               ??_I2C_read_query 0073  
                I2C_write@data 0070                          ?_main 0070                          _ADPCH 1D1F  
                        _ADREF 1D2B                          _ADRES 1D1D                  ?_EUSART_setup 0070  
                ?_EUSART_print 0071                  ?_EUSART_write 0070                          _TRISA 0012  
                   _LoRa_setup 06F5              __end_of_I2C_setup 077E                          status 0003  
            __end_of_I2C_start 06FC                          wtemp0 007E              __end_of_I2C_write 0710  
              __initialization 07FD                   __end_of_main 07CF                 ??_EUSART_setup 0070  
               ??_EUSART_print 0073                 ??_EUSART_write 0070                         ??_main 0077  
                       _ANSELA 1E8C                         _RA1PPS 1D8D                         _RA2PPS 1D8E  
                       _RC2REG 0616                         _RA5PPS 1D91                         _RX2PPS 1E43  
                       _TX2REG 0617       I2C_MCP23008_read@rx_data 0020                   _Analog_setup 072F  
                    ?_I2C_read 0070                      ?_I2C_wait 0070                      ?_I2C_stop 0070  
            __end_of_WDT_setup 0708                    ?_LoRa_setup 0070        __end_of__initialization 07FD  
               __pcstackCOMMON 0070                     ??_I2C_read 0070                     ??_I2C_wait 0070  
                   ??_I2C_stop 0070           __end_of_EUSART_setup 0763           __end_of_EUSART_print 07A4  
         __end_of_EUSART_write 0723                     __pmaintext 07A4                        _SP2BRGH 0619  
                      _SP2BRGL 0618                        _SSP1ADD 068D                        _SSP1BUF 068C  
                    _I2C_setup 0763                      _I2C_start 06F6                      _I2C_write 0708  
                      __ptext1 0702                        __ptext2 06F5                        __ptext3 0763  
                      __ptext4 0710                        __ptext5 07CF                        __ptext6 0708  
                      __ptext7 06FC                        __ptext8 06F6                        __ptext9 073C  
         end_of_initialization 07FD                     ?_I2C_setup 0070                     ?_I2C_start 0070  
                   ?_I2C_write 0070                  EUSART_print@c 0076                      _TRISAbits 0012  
                 ??_LoRa_setup 0070                      _WDT_setup 0702             __end_of_LoRa_setup 06F6  
                 _EUSART_setup 074F                   _EUSART_print 077E                   _EUSART_write 0719  
          start_initialization 07FD                     ?_WDT_setup 0070                    ??_I2C_setup 0070  
                  ??_I2C_start 0070                    ??_I2C_write 0070                      ___latbits 0002  
                __pcstackBANK0 0020                 _I2C_read_query 07CF                       _I2C_read 073C  
                     _I2C_wait 0723                       _I2C_stop 06FC                    ??_WDT_setup 0070  
            _I2C_MCP23008_read 0710                       _PIR3bits 008F             I2C_read_query@data 0071  
                  I2C_read@tmp 0070             ?_I2C_MCP23008_read 0070                       _SSP1CON2 0691  
                     _SSP1STAT 068F         __end_of_I2C_read_query 07FD                     _ADCON0bits 1D26  
          ??_I2C_MCP23008_read 0077                  ?_Analog_setup 0070      __end_of_I2C_MCP23008_read 0719  
              ?_I2C_read_query 0071                 ??_Analog_setup 0070             EUSART_print@string 0071  
                     __ptext10 0723                       __ptext11 074F                       __ptext12 077E  
                     __ptext13 0719                       __ptext14 072F                   _SSP1CON1bits 0690  
                 _SSP1CON2bits 0691                I2C_read_query@i 0074          I2C_read_query@address 0076  
                   _RC2STAbits 061A                     _ODCONAbits 1E8E                   _SSP1STATbits 068F  
                __pstringtext1 0800                  __pstringtext2 0000                     _SSP1DATPPS 1E48  
                   _SSP1CLKPPS 1E47                     _WDTCONbits 018C                     _TX2STAbits 061B  
I2C_read_query@number_of_bytes 0072           __end_of_Analog_setup 073C  
