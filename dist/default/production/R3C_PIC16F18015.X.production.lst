

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 24 16:03:47 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18015
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Generated 19/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F18015 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     0012                     	;# 
    83     0018                     	;# 
    84     008C                     	;# 
    85     008D                     	;# 
    86     008E                     	;# 
    87     008F                     	;# 
    88     0090                     	;# 
    89     0096                     	;# 
    90     0097                     	;# 
    91     0098                     	;# 
    92     0099                     	;# 
    93     009A                     	;# 
    94     018C                     	;# 
    95     018D                     	;# 
    96     018E                     	;# 
    97     018F                     	;# 
    98     019C                     	;# 
    99     019C                     	;# 
   100     019D                     	;# 
   101     019D                     	;# 
   102     019E                     	;# 
   103     019F                     	;# 
   104     020E                     	;# 
   105     020F                     	;# 
   106     0210                     	;# 
   107     0211                     	;# 
   108     0212                     	;# 
   109     0213                     	;# 
   110     0214                     	;# 
   111     028C                     	;# 
   112     028C                     	;# 
   113     028D                     	;# 
   114     028E                     	;# 
   115     028F                     	;# 
   116     028F                     	;# 
   117     0290                     	;# 
   118     0290                     	;# 
   119     0291                     	;# 
   120     0291                     	;# 
   121     0292                     	;# 
   122     0292                     	;# 
   123     0293                     	;# 
   124     0294                     	;# 
   125     0295                     	;# 
   126     0295                     	;# 
   127     0296                     	;# 
   128     0296                     	;# 
   129     0297                     	;# 
   130     0297                     	;# 
   131     030C                     	;# 
   132     030C                     	;# 
   133     030D                     	;# 
   134     030D                     	;# 
   135     030E                     	;# 
   136     030F                     	;# 
   137     0310                     	;# 
   138     0310                     	;# 
   139     0311                     	;# 
   140     0312                     	;# 
   141     0312                     	;# 
   142     0313                     	;# 
   143     0313                     	;# 
   144     0314                     	;# 
   145     0315                     	;# 
   146     0316                     	;# 
   147     0316                     	;# 
   148     0317                     	;# 
   149     0318                     	;# 
   150     0318                     	;# 
   151     0319                     	;# 
   152     0319                     	;# 
   153     031A                     	;# 
   154     031B                     	;# 
   155     031C                     	;# 
   156     031C                     	;# 
   157     031D                     	;# 
   158     038C                     	;# 
   159     038C                     	;# 
   160     038D                     	;# 
   161     038E                     	;# 
   162     038F                     	;# 
   163     0390                     	;# 
   164     0390                     	;# 
   165     0391                     	;# 
   166     0392                     	;# 
   167     0393                     	;# 
   168     039F                     	;# 
   169     040C                     	;# 
   170     040C                     	;# 
   171     040D                     	;# 
   172     040E                     	;# 
   173     040F                     	;# 
   174     040F                     	;# 
   175     0410                     	;# 
   176     0411                     	;# 
   177     0412                     	;# 
   178     0412                     	;# 
   179     0413                     	;# 
   180     0414                     	;# 
   181     041F                     	;# 
   182     048C                     	;# 
   183     048C                     	;# 
   184     048D                     	;# 
   185     048E                     	;# 
   186     048F                     	;# 
   187     048F                     	;# 
   188     0490                     	;# 
   189     0491                     	;# 
   190     0492                     	;# 
   191     0493                     	;# 
   192     050C                     	;# 
   193     050C                     	;# 
   194     050D                     	;# 
   195     050D                     	;# 
   196     050E                     	;# 
   197     050F                     	;# 
   198     0510                     	;# 
   199     0511                     	;# 
   200     0512                     	;# 
   201     0513                     	;# 
   202     0514                     	;# 
   203     058C                     	;# 
   204     058D                     	;# 
   205     058E                     	;# 
   206     058F                     	;# 
   207     0590                     	;# 
   208     0591                     	;# 
   209     0592                     	;# 
   210     0593                     	;# 
   211     0594                     	;# 
   212     0595                     	;# 
   213     0596                     	;# 
   214     0597                     	;# 
   215     060C                     	;# 
   216     060D                     	;# 
   217     060E                     	;# 
   218     060E                     	;# 
   219     060F                     	;# 
   220     0610                     	;# 
   221     0611                     	;# 
   222     0612                     	;# 
   223     0616                     	;# 
   224     0617                     	;# 
   225     0618                     	;# 
   226     0618                     	;# 
   227     0619                     	;# 
   228     061A                     	;# 
   229     061B                     	;# 
   230     061C                     	;# 
   231     068C                     	;# 
   232     068D                     	;# 
   233     068E                     	;# 
   234     068F                     	;# 
   235     0690                     	;# 
   236     0691                     	;# 
   237     0692                     	;# 
   238     0696                     	;# 
   239     0697                     	;# 
   240     0698                     	;# 
   241     0699                     	;# 
   242     069A                     	;# 
   243     069B                     	;# 
   244     069C                     	;# 
   245     100C                     	;# 
   246     100D                     	;# 
   247     101F                     	;# 
   248     108C                     	;# 
   249     108D                     	;# 
   250     108E                     	;# 
   251     108F                     	;# 
   252     109F                     	;# 
   253     109F                     	;# 
   254     110C                     	;# 
   255     110D                     	;# 
   256     1C8C                     	;# 
   257     1C8C                     	;# 
   258     1C8D                     	;# 
   259     1C8E                     	;# 
   260     1C8E                     	;# 
   261     1C8F                     	;# 
   262     1C90                     	;# 
   263     1C91                     	;# 
   264     1D0C                     	;# 
   265     1D0C                     	;# 
   266     1D0D                     	;# 
   267     1D0E                     	;# 
   268     1D0E                     	;# 
   269     1D0F                     	;# 
   270     1D10                     	;# 
   271     1D10                     	;# 
   272     1D11                     	;# 
   273     1D12                     	;# 
   274     1D12                     	;# 
   275     1D13                     	;# 
   276     1D14                     	;# 
   277     1D14                     	;# 
   278     1D15                     	;# 
   279     1D16                     	;# 
   280     1D16                     	;# 
   281     1D17                     	;# 
   282     1D18                     	;# 
   283     1D19                     	;# 
   284     1D1A                     	;# 
   285     1D1B                     	;# 
   286     1D1B                     	;# 
   287     1D1C                     	;# 
   288     1D1D                     	;# 
   289     1D1D                     	;# 
   290     1D1E                     	;# 
   291     1D1F                     	;# 
   292     1D21                     	;# 
   293     1D21                     	;# 
   294     1D22                     	;# 
   295     1D23                     	;# 
   296     1D24                     	;# 
   297     1D24                     	;# 
   298     1D25                     	;# 
   299     1D26                     	;# 
   300     1D27                     	;# 
   301     1D28                     	;# 
   302     1D29                     	;# 
   303     1D2A                     	;# 
   304     1D2B                     	;# 
   305     1D2C                     	;# 
   306     1D2D                     	;# 
   307     1D2E                     	;# 
   308     1D8C                     	;# 
   309     1D8D                     	;# 
   310     1D8E                     	;# 
   311     1D90                     	;# 
   312     1D91                     	;# 
   313     1E0C                     	;# 
   314     1E0D                     	;# 
   315     1E0E                     	;# 
   316     1E0F                     	;# 
   317     1E10                     	;# 
   318     1E11                     	;# 
   319     1E12                     	;# 
   320     1E19                     	;# 
   321     1E1A                     	;# 
   322     1E1B                     	;# 
   323     1E1E                     	;# 
   324     1E1F                     	;# 
   325     1E39                     	;# 
   326     1E3D                     	;# 
   327     1E3E                     	;# 
   328     1E3F                     	;# 
   329     1E40                     	;# 
   330     1E41                     	;# 
   331     1E41                     	;# 
   332     1E42                     	;# 
   333     1E42                     	;# 
   334     1E43                     	;# 
   335     1E43                     	;# 
   336     1E44                     	;# 
   337     1E44                     	;# 
   338     1E47                     	;# 
   339     1E48                     	;# 
   340     1E49                     	;# 
   341     1E4A                     	;# 
   342     1E4B                     	;# 
   343     1E4C                     	;# 
   344     1E50                     	;# 
   345     1E8C                     	;# 
   346     1E8D                     	;# 
   347     1E8E                     	;# 
   348     1E8F                     	;# 
   349     1E90                     	;# 
   350     1E91                     	;# 
   351     1E92                     	;# 
   352     1E93                     	;# 
   353     1EE1                     	;# 
   354     1EE2                     	;# 
   355     1F0C                     	;# 
   356     1F0D                     	;# 
   357     1F0E                     	;# 
   358     1FE4                     	;# 
   359     1FE5                     	;# 
   360     1FE6                     	;# 
   361     1FE7                     	;# 
   362     1FE8                     	;# 
   363     1FE8                     	;# 
   364     1FE9                     	;# 
   365     1FEA                     	;# 
   366     1FEA                     	;# 
   367     1FEB                     	;# 
   368     1FED                     	;# 
   369     1FEE                     	;# 
   370     1FEF                     	;# 
   371     0000                     	;# 
   372     0001                     	;# 
   373     0002                     	;# 
   374     0003                     	;# 
   375     0004                     	;# 
   376     0005                     	;# 
   377     0006                     	;# 
   378     0007                     	;# 
   379     0008                     	;# 
   380     0009                     	;# 
   381     000A                     	;# 
   382     000B                     	;# 
   383     000C                     	;# 
   384     0012                     	;# 
   385     0018                     	;# 
   386     008C                     	;# 
   387     008D                     	;# 
   388     008E                     	;# 
   389     008F                     	;# 
   390     0090                     	;# 
   391     0096                     	;# 
   392     0097                     	;# 
   393     0098                     	;# 
   394     0099                     	;# 
   395     009A                     	;# 
   396     018C                     	;# 
   397     018D                     	;# 
   398     018E                     	;# 
   399     018F                     	;# 
   400     019C                     	;# 
   401     019C                     	;# 
   402     019D                     	;# 
   403     019D                     	;# 
   404     019E                     	;# 
   405     019F                     	;# 
   406     020E                     	;# 
   407     020F                     	;# 
   408     0210                     	;# 
   409     0211                     	;# 
   410     0212                     	;# 
   411     0213                     	;# 
   412     0214                     	;# 
   413     028C                     	;# 
   414     028C                     	;# 
   415     028D                     	;# 
   416     028E                     	;# 
   417     028F                     	;# 
   418     028F                     	;# 
   419     0290                     	;# 
   420     0290                     	;# 
   421     0291                     	;# 
   422     0291                     	;# 
   423     0292                     	;# 
   424     0292                     	;# 
   425     0293                     	;# 
   426     0294                     	;# 
   427     0295                     	;# 
   428     0295                     	;# 
   429     0296                     	;# 
   430     0296                     	;# 
   431     0297                     	;# 
   432     0297                     	;# 
   433     030C                     	;# 
   434     030C                     	;# 
   435     030D                     	;# 
   436     030D                     	;# 
   437     030E                     	;# 
   438     030F                     	;# 
   439     0310                     	;# 
   440     0310                     	;# 
   441     0311                     	;# 
   442     0312                     	;# 
   443     0312                     	;# 
   444     0313                     	;# 
   445     0313                     	;# 
   446     0314                     	;# 
   447     0315                     	;# 
   448     0316                     	;# 
   449     0316                     	;# 
   450     0317                     	;# 
   451     0318                     	;# 
   452     0318                     	;# 
   453     0319                     	;# 
   454     0319                     	;# 
   455     031A                     	;# 
   456     031B                     	;# 
   457     031C                     	;# 
   458     031C                     	;# 
   459     031D                     	;# 
   460     038C                     	;# 
   461     038C                     	;# 
   462     038D                     	;# 
   463     038E                     	;# 
   464     038F                     	;# 
   465     0390                     	;# 
   466     0390                     	;# 
   467     0391                     	;# 
   468     0392                     	;# 
   469     0393                     	;# 
   470     039F                     	;# 
   471     040C                     	;# 
   472     040C                     	;# 
   473     040D                     	;# 
   474     040E                     	;# 
   475     040F                     	;# 
   476     040F                     	;# 
   477     0410                     	;# 
   478     0411                     	;# 
   479     0412                     	;# 
   480     0412                     	;# 
   481     0413                     	;# 
   482     0414                     	;# 
   483     041F                     	;# 
   484     048C                     	;# 
   485     048C                     	;# 
   486     048D                     	;# 
   487     048E                     	;# 
   488     048F                     	;# 
   489     048F                     	;# 
   490     0490                     	;# 
   491     0491                     	;# 
   492     0492                     	;# 
   493     0493                     	;# 
   494     050C                     	;# 
   495     050C                     	;# 
   496     050D                     	;# 
   497     050D                     	;# 
   498     050E                     	;# 
   499     050F                     	;# 
   500     0510                     	;# 
   501     0511                     	;# 
   502     0512                     	;# 
   503     0513                     	;# 
   504     0514                     	;# 
   505     058C                     	;# 
   506     058D                     	;# 
   507     058E                     	;# 
   508     058F                     	;# 
   509     0590                     	;# 
   510     0591                     	;# 
   511     0592                     	;# 
   512     0593                     	;# 
   513     0594                     	;# 
   514     0595                     	;# 
   515     0596                     	;# 
   516     0597                     	;# 
   517     060C                     	;# 
   518     060D                     	;# 
   519     060E                     	;# 
   520     060E                     	;# 
   521     060F                     	;# 
   522     0610                     	;# 
   523     0611                     	;# 
   524     0612                     	;# 
   525     0616                     	;# 
   526     0617                     	;# 
   527     0618                     	;# 
   528     0618                     	;# 
   529     0619                     	;# 
   530     061A                     	;# 
   531     061B                     	;# 
   532     061C                     	;# 
   533     068C                     	;# 
   534     068D                     	;# 
   535     068E                     	;# 
   536     068F                     	;# 
   537     0690                     	;# 
   538     0691                     	;# 
   539     0692                     	;# 
   540     0696                     	;# 
   541     0697                     	;# 
   542     0698                     	;# 
   543     0699                     	;# 
   544     069A                     	;# 
   545     069B                     	;# 
   546     069C                     	;# 
   547     100C                     	;# 
   548     100D                     	;# 
   549     101F                     	;# 
   550     108C                     	;# 
   551     108D                     	;# 
   552     108E                     	;# 
   553     108F                     	;# 
   554     109F                     	;# 
   555     109F                     	;# 
   556     110C                     	;# 
   557     110D                     	;# 
   558     1C8C                     	;# 
   559     1C8C                     	;# 
   560     1C8D                     	;# 
   561     1C8E                     	;# 
   562     1C8E                     	;# 
   563     1C8F                     	;# 
   564     1C90                     	;# 
   565     1C91                     	;# 
   566     1D0C                     	;# 
   567     1D0C                     	;# 
   568     1D0D                     	;# 
   569     1D0E                     	;# 
   570     1D0E                     	;# 
   571     1D0F                     	;# 
   572     1D10                     	;# 
   573     1D10                     	;# 
   574     1D11                     	;# 
   575     1D12                     	;# 
   576     1D12                     	;# 
   577     1D13                     	;# 
   578     1D14                     	;# 
   579     1D14                     	;# 
   580     1D15                     	;# 
   581     1D16                     	;# 
   582     1D16                     	;# 
   583     1D17                     	;# 
   584     1D18                     	;# 
   585     1D19                     	;# 
   586     1D1A                     	;# 
   587     1D1B                     	;# 
   588     1D1B                     	;# 
   589     1D1C                     	;# 
   590     1D1D                     	;# 
   591     1D1D                     	;# 
   592     1D1E                     	;# 
   593     1D1F                     	;# 
   594     1D21                     	;# 
   595     1D21                     	;# 
   596     1D22                     	;# 
   597     1D23                     	;# 
   598     1D24                     	;# 
   599     1D24                     	;# 
   600     1D25                     	;# 
   601     1D26                     	;# 
   602     1D27                     	;# 
   603     1D28                     	;# 
   604     1D29                     	;# 
   605     1D2A                     	;# 
   606     1D2B                     	;# 
   607     1D2C                     	;# 
   608     1D2D                     	;# 
   609     1D2E                     	;# 
   610     1D8C                     	;# 
   611     1D8D                     	;# 
   612     1D8E                     	;# 
   613     1D90                     	;# 
   614     1D91                     	;# 
   615     1E0C                     	;# 
   616     1E0D                     	;# 
   617     1E0E                     	;# 
   618     1E0F                     	;# 
   619     1E10                     	;# 
   620     1E11                     	;# 
   621     1E12                     	;# 
   622     1E19                     	;# 
   623     1E1A                     	;# 
   624     1E1B                     	;# 
   625     1E1E                     	;# 
   626     1E1F                     	;# 
   627     1E39                     	;# 
   628     1E3D                     	;# 
   629     1E3E                     	;# 
   630     1E3F                     	;# 
   631     1E40                     	;# 
   632     1E41                     	;# 
   633     1E41                     	;# 
   634     1E42                     	;# 
   635     1E42                     	;# 
   636     1E43                     	;# 
   637     1E43                     	;# 
   638     1E44                     	;# 
   639     1E44                     	;# 
   640     1E47                     	;# 
   641     1E48                     	;# 
   642     1E49                     	;# 
   643     1E4A                     	;# 
   644     1E4B                     	;# 
   645     1E4C                     	;# 
   646     1E50                     	;# 
   647     1E8C                     	;# 
   648     1E8D                     	;# 
   649     1E8E                     	;# 
   650     1E8F                     	;# 
   651     1E90                     	;# 
   652     1E91                     	;# 
   653     1E92                     	;# 
   654     1E93                     	;# 
   655     1EE1                     	;# 
   656     1EE2                     	;# 
   657     1F0C                     	;# 
   658     1F0D                     	;# 
   659     1F0E                     	;# 
   660     1FE4                     	;# 
   661     1FE5                     	;# 
   662     1FE6                     	;# 
   663     1FE7                     	;# 
   664     1FE8                     	;# 
   665     1FE8                     	;# 
   666     1FE9                     	;# 
   667     1FEA                     	;# 
   668     1FEA                     	;# 
   669     1FEB                     	;# 
   670     1FED                     	;# 
   671     1FEE                     	;# 
   672     1FEF                     	;# 
   673     000C                     _PORTA	set	12
   674     000B                     _INTCONbits	set	11
   675     0012                     _TRISA	set	18
   676     0012                     _TRISAbits	set	18
   677     0099                     _PIE3bits	set	153
   678     008F                     _PIR3bits	set	143
   679     018C                     _WDTCONbits	set	396
   680     0616                     _RC2REG	set	1558
   681     0617                     _TX2REG	set	1559
   682     0619                     _SP2BRGH	set	1561
   683     0618                     _SP2BRGL	set	1560
   684     061A                     _RC2STAbits	set	1562
   685     061B                     _TX2STAbits	set	1563
   686     061C                     _BAUD2CONbits	set	1564
   687     068C                     _SSP1BUF	set	1676
   688     0691                     _SSP1CON2bits	set	1681
   689     068F                     _SSP1STAT	set	1679
   690     068D                     _SSP1ADD	set	1677
   691     0691                     _SSP1CON2	set	1681
   692     0690                     _SSP1CON1bits	set	1680
   693     068F                     _SSP1STATbits	set	1679
   694     1D1D                     _ADRES	set	7453
   695     1D26                     _ADCON0bits	set	7462
   696     1D2B                     _ADREF	set	7467
   697     1D1F                     _ADPCH	set	7455
   698     1D8E                     _RA2PPS	set	7566
   699     1D8D                     _RA1PPS	set	7565
   700     1D91                     _RA5PPS	set	7569
   701     1E48                     _SSP1DATPPS	set	7752
   702     1E47                     _SSP1CLKPPS	set	7751
   703     1E43                     _RX2PPS	set	7747
   704     1E8C                     _ANSELA	set	7820
   705     1E8E                     _ODCONAbits	set	7822
   706                           
   707                           	psect	stringtext1
   708     0141                     __pstringtext1:
   709     0141                     STR_8:
   710     0141  342B               	retlw	43	;'+'
   711     0142  344A               	retlw	74	;'J'
   712     0143  344F               	retlw	79	;'O'
   713     0144  3449               	retlw	73	;'I'
   714     0145  344E               	retlw	78	;'N'
   715     0146  343A               	retlw	58	;':'
   716     0147  3420               	retlw	32	;' '
   717     0148  344A               	retlw	74	;'J'
   718     0149  346F               	retlw	111	;'o'
   719     014A  3469               	retlw	105	;'i'
   720     014B  346E               	retlw	110	;'n'
   721     014C  3465               	retlw	101	;'e'
   722     014D  3464               	retlw	100	;'d'
   723     014E  3420               	retlw	32	;' '
   724     014F  3461               	retlw	97	;'a'
   725     0150  346C               	retlw	108	;'l'
   726     0151  3472               	retlw	114	;'r'
   727     0152  3465               	retlw	101	;'e'
   728     0153  3461               	retlw	97	;'a'
   729     0154  3464               	retlw	100	;'d'
   730     0155  3479               	retlw	121	;'y'
   731     0156  3400               	retlw	0
   732                           
   733                           	psect	stringtext2
   734     0194                     __pstringtext2:
   735     0194                     STR_12:
   736     0194  3441               	retlw	65	;'A'
   737     0195  3454               	retlw	84	;'T'
   738     0196  342B               	retlw	43	;'+'
   739     0197  344D               	retlw	77	;'M'
   740     0198  3453               	retlw	83	;'S'
   741     0199  3447               	retlw	71	;'G'
   742     019A  343D               	retlw	61	;'='
   743     019B  3468               	retlw	104	;'h'
   744     019C  3465               	retlw	101	;'e'
   745     019D  346C               	retlw	108	;'l'
   746     019E  346C               	retlw	108	;'l'
   747     019F  346F               	retlw	111	;'o'
   748     01A0  3400               	retlw	0
   749                           
   750                           	psect	stringtext3
   751     01AE                     __pstringtext3:
   752     01AE                     STR_11:
   753     01AE  3443               	retlw	67	;'C'
   754     01AF  346F               	retlw	111	;'o'
   755     01B0  346E               	retlw	110	;'n'
   756     01B1  346E               	retlw	110	;'n'
   757     01B2  3465               	retlw	101	;'e'
   758     01B3  3463               	retlw	99	;'c'
   759     01B4  3474               	retlw	116	;'t'
   760     01B5  3465               	retlw	101	;'e'
   761     01B6  3464               	retlw	100	;'d'
   762     01B7  3420               	retlw	32	;' '
   763     01B8  3421               	retlw	33	;'!'
   764     01B9  3400               	retlw	0
   765                           
   766                           	psect	stringtext4
   767     01BA                     __pstringtext4:
   768     01BA                     STR_1:
   769     01BA  3457               	retlw	87	;'W'
   770     01BB  3461               	retlw	97	;'a'
   771     01BC  346B               	retlw	107	;'k'
   772     01BD  3465               	retlw	101	;'e'
   773     01BE  3420               	retlw	32	;' '
   774     01BF  3475               	retlw	117	;'u'
   775     01C0  3470               	retlw	112	;'p'
   776     01C1  3420               	retlw	32	;' '
   777     01C2  3421               	retlw	33	;'!'
   778     01C3  3421               	retlw	33	;'!'
   779     01C4  3400               	retlw	0
   780                           
   781                           	psect	stringtext5
   782     01C5                     __pstringtext5:
   783     01C5                     STR_6:
   784     01C5  3452               	retlw	82	;'R'
   785     01C6  3458               	retlw	88	;'X'
   786     01C7  342F               	retlw	47	;'/'
   787     01C8  3454               	retlw	84	;'T'
   788     01C9  3458               	retlw	88	;'X'
   789     01CA  3420               	retlw	32	;' '
   790     01CB  3446               	retlw	70	;'F'
   791     01CC  3461               	retlw	97	;'a'
   792     01CD  3469               	retlw	105	;'i'
   793     01CE  346C               	retlw	108	;'l'
   794     01CF  3400               	retlw	0
   795                           
   796                           	psect	stringtext6
   797     01DA                     __pstringtext6:
   798     01DA                     STR_3:
   799     01DA  342B               	retlw	43	;'+'
   800     01DB  3441               	retlw	65	;'A'
   801     01DC  3454               	retlw	84	;'T'
   802     01DD  343A               	retlw	58	;':'
   803     01DE  3420               	retlw	32	;' '
   804     01DF  344F               	retlw	79	;'O'
   805     01E0  344B               	retlw	75	;'K'
   806     01E1  3400               	retlw	0
   807                           
   808                           	psect	stringtext7
   809     01E2                     __pstringtext7:
   810     01E2                     STR_7:
   811     01E2  3441               	retlw	65	;'A'
   812     01E3  3454               	retlw	84	;'T'
   813     01E4  342B               	retlw	43	;'+'
   814     01E5  344A               	retlw	74	;'J'
   815     01E6  344F               	retlw	79	;'O'
   816     01E7  3449               	retlw	73	;'I'
   817     01E8  344E               	retlw	78	;'N'
   818     01E9  3400               	retlw	0
   819                           
   820                           	psect	stringtext8
   821     01F6                     __pstringtext8:
   822     01F6                     STR_2:
   823     01F6  3441               	retlw	65	;'A'
   824     01F7  3454               	retlw	84	;'T'
   825     01F8  3400               	retlw	0
   826                           
   827                           	psect	stringtext9
   828     0000                     __pstringtext9:
   829     01DA                     
   830                           	psect	cinit
   831     002D                     start_initialization:	
   832                           ; #config settings
   833                           
   834     002D                     __initialization:
   835                           
   836                           ; Clear objects allocated to COMMON
   837     002D  01FC               	clrf	__pbssCOMMON& (0+127)
   838                           
   839                           ; Clear objects allocated to BANK1
   840     002E  30A0               	movlw	low __pbssBANK1
   841     002F  0084               	movwf	4
   842     0030  3000               	movlw	high __pbssBANK1
   843     0031  0085               	movwf	5
   844     0032  3050               	movlw	80
   845     0033  3181  21EA  3180   	fcall	clear_ram0
   846     0036                     end_of_initialization:	
   847                           ;End of C runtime variable initialization code
   848                           
   849     0036                     __end_of__initialization:
   850     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   851     0037  0140               	movlb	0
   852     0038  3180  28E5         	ljmp	_main	;jump to C main() function
   853                           
   854                           	psect	bssCOMMON
   855     007C                     __pbssCOMMON:
   856     007C                     _RX_index:
   857     007C                     	ds	1
   858                           
   859                           	psect	bssBANK1
   860     00A0                     __pbssBANK1:
   861     00A0                     _RX_buffer:
   862     00A0                     	ds	80
   863                           
   864                           	psect	clrtext
   865     01EA                     clear_ram0:	
   866                           ;	Called with FSR0 containing the base address, and
   867                           ;	WREG with the size to clear
   868                           
   869     01EA  0064               	clrwdt	;clear the watchdog before getting into this loop
   870     01EB                     clrloop0:
   871     01EB  0180               	clrf	0	;clear RAM location pointed to by FSR
   872     01EC  3101               	addfsr 0,1
   873     01ED  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   874     01EE  29EB               	goto	clrloop0	;have we reached the end yet?
   875     01EF  3400               	retlw	0	;all done for this memory range, return
   876                           
   877                           	psect	cstackCOMMON
   878     0070                     __pcstackCOMMON:
   879     0070                     ?_WDT_setup:
   880     0070                     ?_SLEEP_start:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?_EUSART_setup:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_EUSART_write:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?_Analog_setup:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ?_LoRa_setup:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?_ISR:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ??_ISR:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0070                     ?_main:	
   902                           ; 1 bytes @ 0x0
   903                           
   904                           
   905                           ; 1 bytes @ 0x0
   906     0070                     	ds	1
   907     0071                     ??_WDT_setup:
   908     0071                     ??_SLEEP_start:	
   909                           ; 1 bytes @ 0x1
   910                           
   911     0071                     ??_EUSART_setup:	
   912                           ; 1 bytes @ 0x1
   913                           
   914     0071                     ??_EUSART_write:	
   915                           ; 1 bytes @ 0x1
   916                           
   917     0071                     ?_EUSART_clear_buffer:	
   918                           ; 1 bytes @ 0x1
   919                           
   920     0071                     ??_Analog_setup:	
   921                           ; 1 bytes @ 0x1
   922                           
   923     0071                     EUSART_write@txData:	
   924                           ; 1 bytes @ 0x1
   925                           
   926     0071                     EUSART_clear_buffer@size:	
   927                           ; 1 bytes @ 0x1
   928                           
   929                           
   930                           ; 1 bytes @ 0x1
   931     0071                     	ds	1
   932     0072                     ?_EUSART_print:
   933     0072                     ??_EUSART_clear_buffer:	
   934                           ; 1 bytes @ 0x2
   935                           
   936     0072                     EUSART_print@string:	
   937                           ; 1 bytes @ 0x2
   938                           
   939                           
   940                           ; 2 bytes @ 0x2
   941     0072                     	ds	1
   942     0073                     EUSART_clear_buffer@buffer:
   943                           
   944                           ; 1 bytes @ 0x3
   945     0073                     	ds	1
   946     0074                     ??_EUSART_print:
   947     0074                     EUSART_clear_buffer@i:	
   948                           ; 1 bytes @ 0x4
   949                           
   950                           
   951                           ; 1 bytes @ 0x4
   952     0074                     	ds	3
   953     0077                     EUSART_print@c:
   954                           
   955                           ; 1 bytes @ 0x7
   956     0077                     	ds	1
   957     0078                     ?_AT_command:
   958     0078                     ??_AT_command_check:	
   959                           ; 1 bytes @ 0x8
   960                           
   961     0078                     AT_command@at_command:	
   962                           ; 1 bytes @ 0x8
   963                           
   964                           
   965                           ; 2 bytes @ 0x8
   966     0078                     	ds	2
   967     007A                     ??_AT_command:
   968                           
   969                           ; 1 bytes @ 0xA
   970     007A                     	ds	1
   971     007B                     AT_command_check@i:
   972                           
   973                           ; 1 bytes @ 0xB
   974     007B                     	ds	1
   975                           
   976                           	psect	cstackBANK0
   977     0020                     __pcstackBANK0:
   978     0020                     ?_AT_command_check:
   979     0020                     AT_command_check@at_command:	
   980                           ; 1 bytes @ 0x0
   981                           
   982                           
   983                           ; 2 bytes @ 0x0
   984     0020                     	ds	2
   985     0022                     AT_command_check@expected_response:
   986                           
   987                           ; 2 bytes @ 0x2
   988     0022                     	ds	2
   989     0024                     AT_command_check@response_size:
   990                           
   991                           ; 1 bytes @ 0x4
   992     0024                     	ds	1
   993     0025                     ??_LoRa_setup:
   994                           
   995                           ; 1 bytes @ 0x5
   996     0025                     	ds	2
   997     0027                     ??_main:
   998                           
   999                           ; 1 bytes @ 0x7
  1000     0027                     	ds	2
  1001                           
  1002                           	psect	maintext
  1003     00E5                     __pmaintext:	
  1004 ;;
  1005 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1006 ;;
  1007 ;; *************** function _main *****************
  1008 ;; Defined at:
  1009 ;;		line 99 in file "main.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  humidity        4    0        float 
  1014 ;;  temp            4    0        float 
  1015 ;;  sleep_counte    1    0        unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : B3F/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1027 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1028 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1029 ;;Total ram usage:        2 bytes
  1030 ;; Hardware stack levels required when called: 5
  1031 ;; This function calls:
  1032 ;;		_AT_command
  1033 ;;		_Analog_setup
  1034 ;;		_EUSART_clear_buffer
  1035 ;;		_EUSART_setup
  1036 ;;		_LoRa_setup
  1037 ;;		_SLEEP_start
  1038 ;;		_WDT_setup
  1039 ;; This function is called by:
  1040 ;;		Startup code after reset
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044     00E5                     _main:	
  1045                           ;psect for function _main
  1046                           
  1047     00E5                     l1326:	
  1048                           ;incstack = 0
  1049                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1050                           
  1051                           
  1052                           ;main.c: 101:     INTCONbits.PEIE = 1;
  1053     00E5  170B               	bsf	11,6	;volatile
  1054                           
  1055                           ;main.c: 102:     INTCONbits.GIE = 1;
  1056     00E6  178B               	bsf	11,7	;volatile
  1057     00E7                     l1328:
  1058                           
  1059                           ;main.c: 105:     TRISA &= !(1<<2);
  1060     00E7  0140               	movlb	0	; select bank0
  1061     00E8  0192               	clrf	18	;volatile
  1062                           
  1063                           ;main.c: 107:     ANSELA = 0x0;
  1064     00E9  017D               	movlb	61	; select bank61
  1065     00EA  018C               	clrf	12	;volatile
  1066     00EB                     l1330:
  1067                           
  1068                           ;main.c: 113:     EUSART_setup();
  1069     00EB  3181  2180  3180   	fcall	_EUSART_setup
  1070     00EE                     l1332:
  1071                           
  1072                           ;main.c: 114:     EUSART_clear_buffer(RX_buffer, 80);
  1073     00EE  3050               	movlw	80
  1074     00EF  00F1               	movwf	EUSART_clear_buffer@size
  1075     00F0  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
  1076     00F1  3181  2157  3180   	fcall	_EUSART_clear_buffer
  1077     00F4                     l1334:
  1078                           
  1079                           ;main.c: 117:     Analog_setup();
  1080     00F4  3181  21A1  3180   	fcall	_Analog_setup
  1081     00F7                     l1336:
  1082                           
  1083                           ;main.c: 120:     PORTA |= (1<<2);
  1084     00F7  0140               	movlb	0	; select bank0
  1085     00F8  150C               	bsf	12,2	;volatile
  1086     00F9                     l1338:
  1087                           
  1088                           ;main.c: 121:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1089     00F9  3002               	movlw	2
  1090     00FA  0140               	movlb	0	; select bank0
  1091     00FB  00A8               	movwf	??_main+1
  1092     00FC  3045               	movlw	69
  1093     00FD  00A7               	movwf	??_main
  1094     00FE  30A9               	movlw	169
  1095     00FF                     u417:
  1096     00FF  0B89               	decfsz	9,f
  1097     0100  28FF               	goto	u417
  1098     0101  0BA7               	decfsz	??_main,f
  1099     0102  28FF               	goto	u417
  1100     0103  0BA8               	decfsz	??_main+1,f
  1101     0104  28FF               	goto	u417
  1102     0105  3200               	nop2
  1103     0106                     l1340:
  1104                           
  1105                           ;main.c: 122:     LoRa_setup();
  1106     0106  3180  209B  3180   	fcall	_LoRa_setup
  1107     0109                     l1342:
  1108                           
  1109                           ;main.c: 123:     PORTA &= !(1<<2);
  1110     0109  0140               	movlb	0	; select bank0
  1111     010A  018C               	clrf	12	;volatile
  1112     010B                     l1344:
  1113                           
  1114                           ;main.c: 126:     WDT_setup();
  1115     010B  3181  21F0  3180   	fcall	_WDT_setup
  1116     010E                     l1346:
  1117     010E                     l1348:
  1118                           
  1119                           ;main.c: 141:         SLEEP_start();
  1120     010E  3181  21F9  3180   	fcall	_SLEEP_start
  1121     0111                     l1350:
  1122                           
  1123                           ;main.c: 166:         AT_command("AT+MSG=hello");
  1124     0111  3094               	movlw	low (STR_12| (0+32768))
  1125     0112  00F8               	movwf	AT_command@at_command
  1126     0113  3081               	movlw	high (STR_12| (0+32768))
  1127     0114  00F9               	movwf	AT_command@at_command+1
  1128     0115  3181  216C  3180   	fcall	_AT_command
  1129     0118  290E               	goto	l1348
  1130     0119  3180  282B         	ljmp	start
  1131     011B                     __end_of_main:
  1132                           
  1133                           	psect	text1
  1134     01F0                     __ptext1:	
  1135 ;; *************** function _WDT_setup *****************
  1136 ;; Defined at:
  1137 ;;		line 4 in file "./watchdog_driver.h"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; Hardware stack levels required when called: 1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165     01F0                     _WDT_setup:	
  1166                           ;psect for function _WDT_setup
  1167                           
  1168     01F0                     l1160:	
  1169                           ;incstack = 0
  1170                           ; Regs used in _WDT_setup: [wreg+status,2+status,0]
  1171                           
  1172                           
  1173                           ;./watchdog_driver.h: 7:     WDTCONbits.PS = 0b10000;
  1174     01F0  0143               	movlb	3	; select bank3
  1175     01F1  080C               	movf	12,w	;volatile
  1176     01F2  39C1               	andlw	-63
  1177     01F3  3820               	iorlw	32
  1178     01F4  008C               	movwf	12	;volatile
  1179     01F5                     l81:
  1180     01F5  0008               	return
  1181     01F6                     __end_of_WDT_setup:
  1182                           
  1183                           	psect	text2
  1184     01F9                     __ptext2:	
  1185 ;; *************** function _SLEEP_start *****************
  1186 ;; Defined at:
  1187 ;;		line 10 in file "./watchdog_driver.h"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		None
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1205 ;;Total ram usage:        0 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215     01F9                     _SLEEP_start:	
  1216                           ;psect for function _SLEEP_start
  1217                           
  1218     01F9                     l1162:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _SLEEP_start: []
  1221                           
  1222     01F9  0064               	clrwdt	;# 
  1223     01FA  0063               	sleep	;# 
  1224     01FB                     l84:
  1225     01FB  0008               	return
  1226     01FC                     __end_of_SLEEP_start:
  1227                           
  1228                           	psect	text3
  1229     009B                     __ptext3:	
  1230 ;; *************** function _LoRa_setup *****************
  1231 ;; Defined at:
  1232 ;;		line 8 in file "./lora_driver.h"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1249 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1250 ;;Total ram usage:        2 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 4
  1253 ;; This function calls:
  1254 ;;		_AT_command
  1255 ;;		_AT_command_check
  1256 ;;		_EUSART_print
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262     009B                     _LoRa_setup:	
  1263                           ;psect for function _LoRa_setup
  1264                           
  1265     009B                     l1306:	
  1266                           ;incstack = 0
  1267                           ; Regs used in _LoRa_setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1268                           
  1269                           
  1270                           ;./lora_driver.h: 10:     AT_command("Wake up !!");
  1271     009B  30BA               	movlw	low (STR_1| (0+32768))
  1272     009C  00F8               	movwf	AT_command@at_command
  1273     009D  3081               	movlw	high (STR_1| (0+32768))
  1274     009E  00F9               	movwf	AT_command@at_command+1
  1275     009F  3181  216C  3180   	fcall	_AT_command
  1276     00A2                     l1308:
  1277                           
  1278                           ;./lora_driver.h: 12:     if(!AT_command_check("AT", "+AT: OK", 7)){
  1279     00A2  30F6               	movlw	low (STR_2| (0+32768))
  1280     00A3  0140               	movlb	0	; select bank0
  1281     00A4  00A0               	movwf	AT_command_check@at_command
  1282     00A5  3081               	movlw	high (STR_2| (0+32768))
  1283     00A6  00A1               	movwf	AT_command_check@at_command+1
  1284     00A7  30DA               	movlw	low (STR_3| (0+32768))
  1285     00A8  00A2               	movwf	AT_command_check@expected_response
  1286     00A9  3081               	movlw	high (STR_3| (0+32768))
  1287     00AA  00A3               	movwf	AT_command_check@expected_response+1
  1288     00AB  3007               	movlw	7
  1289     00AC  00A4               	movwf	AT_command_check@response_size
  1290     00AD  3180  203A  3180   	fcall	_AT_command_check
  1291     00B0  3A00               	xorlw	0
  1292     00B1  1D03               	skipz
  1293     00B2  28B4               	goto	u391
  1294     00B3  28B5               	goto	u390
  1295     00B4                     u391:
  1296     00B4  28CA               	goto	l1314
  1297     00B5                     u390:
  1298     00B5                     l1310:
  1299                           
  1300                           ;./lora_driver.h: 13:         EUSART_print("RX/TX Fail");
  1301     00B5  30C5               	movlw	low (STR_6| (0+32768))
  1302     00B6  00F2               	movwf	EUSART_print@string
  1303     00B7  3081               	movlw	high (STR_6| (0+32768))
  1304     00B8  00F3               	movwf	EUSART_print@string+1
  1305     00B9  3181  211B  3180   	fcall	_EUSART_print
  1306     00BC  28CA               	goto	l1314
  1307     00BD                     l1312:
  1308                           
  1309                           ;./lora_driver.h: 17:         _delay((unsigned long)((20000)*(1000000/4000.0)));
  1310     00BD  301A               	movlw	26
  1311     00BE  0140               	movlb	0	; select bank0
  1312     00BF  00A6               	movwf	??_LoRa_setup+1
  1313     00C0  305E               	movlw	94
  1314     00C1  00A5               	movwf	??_LoRa_setup
  1315     00C2  306E               	movlw	110
  1316     00C3                     u427:
  1317     00C3  0B89               	decfsz	9,f
  1318     00C4  28C3               	goto	u427
  1319     00C5  0BA5               	decfsz	??_LoRa_setup,f
  1320     00C6  28C3               	goto	u427
  1321     00C7  0BA6               	decfsz	??_LoRa_setup+1,f
  1322     00C8  28C3               	goto	u427
  1323     00C9  0000               	nop
  1324     00CA                     l1314:
  1325                           
  1326                           ;./lora_driver.h: 16:     while(!AT_command_check("AT+JOIN", "+JOIN: Joined already", 21
      +                          )){
  1327     00CA  30E2               	movlw	low (STR_7| (0+32768))
  1328     00CB  0140               	movlb	0	; select bank0
  1329     00CC  00A0               	movwf	AT_command_check@at_command
  1330     00CD  3081               	movlw	high (STR_7| (0+32768))
  1331     00CE  00A1               	movwf	AT_command_check@at_command+1
  1332     00CF  3041               	movlw	low (STR_8| (0+32768))
  1333     00D0  00A2               	movwf	AT_command_check@expected_response
  1334     00D1  3081               	movlw	high (STR_8| (0+32768))
  1335     00D2  00A3               	movwf	AT_command_check@expected_response+1
  1336     00D3  3015               	movlw	21
  1337     00D4  00A4               	movwf	AT_command_check@response_size
  1338     00D5  3180  203A  3180   	fcall	_AT_command_check
  1339     00D8  3A00               	xorlw	0
  1340     00D9  1903               	skipnz
  1341     00DA  28DC               	goto	u401
  1342     00DB  28DD               	goto	u400
  1343     00DC                     u401:
  1344     00DC  28BD               	goto	l1312
  1345     00DD                     u400:
  1346     00DD                     l1316:
  1347                           
  1348                           ;./lora_driver.h: 19:     EUSART_print("Connected !");
  1349     00DD  30AE               	movlw	low (STR_11| (0+32768))
  1350     00DE  00F2               	movwf	EUSART_print@string
  1351     00DF  3081               	movlw	high (STR_11| (0+32768))
  1352     00E0  00F3               	movwf	EUSART_print@string+1
  1353     00E1  3181  211B  3180   	fcall	_EUSART_print
  1354     00E4                     l177:
  1355     00E4  0008               	return
  1356     00E5                     __end_of_LoRa_setup:
  1357                           
  1358                           	psect	text4
  1359     003A                     __ptext4:	
  1360 ;; *************** function _AT_command_check *****************
  1361 ;; Defined at:
  1362 ;;		line 22 in file "./lora_driver.h"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  at_command      2    0[BANK0 ] PTR const unsigned char 
  1365 ;;		 -> STR_9(8), STR_4(3), 
  1366 ;;  expected_res    2    2[BANK0 ] PTR const unsigned char 
  1367 ;;		 -> STR_10(22), STR_5(8), 
  1368 ;;  response_siz    1    4[BANK0 ] unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  i               1   11[COMMON] unsigned char 
  1371 ;;  tmp             1    0        unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      unsigned char 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1381 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1384 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1385 ;;Total ram usage:        9 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 3
  1388 ;; This function calls:
  1389 ;;		_EUSART_clear_buffer
  1390 ;;		_EUSART_print
  1391 ;;		_EUSART_write
  1392 ;; This function is called by:
  1393 ;;		_LoRa_setup
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397     003A                     _AT_command_check:	
  1398                           ;psect for function _AT_command_check
  1399                           
  1400     003A                     l1272:	
  1401                           ;incstack = 0
  1402                           ; Regs used in _AT_command_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1403                           
  1404                           
  1405                           ;./lora_driver.h: 24:     EUSART_clear_buffer(RX_buffer, 80);
  1406     003A  3050               	movlw	80
  1407     003B  00F1               	movwf	EUSART_clear_buffer@size
  1408     003C  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
  1409     003D  3181  2157  3180   	fcall	_EUSART_clear_buffer
  1410     0040                     l1274:
  1411                           
  1412                           ;./lora_driver.h: 25:     RX_index = 0;
  1413     0040  01FC               	clrf	_RX_index
  1414                           
  1415                           ;./lora_driver.h: 27:     uint8_t tmp;;./lora_driver.h: 28:     while(PIR3bits.RC2IF){
  1416     0041  2844               	goto	l1278
  1417     0042                     l1276:
  1418     0042  014C               	movlb	12	; select bank12
  1419     0043  0816               	movf	22,w	;volatile
  1420     0044                     l1278:
  1421                           
  1422                           ;./lora_driver.h: 28:     while(PIR3bits.RC2IF){
  1423     0044  0141               	movlb	1	; select bank1
  1424     0045  1A8F               	btfsc	15,5	;volatile
  1425     0046  2848               	goto	u351
  1426     0047  2849               	goto	u350
  1427     0048                     u351:
  1428     0048  2842               	goto	l1276
  1429     0049                     u350:
  1430     0049                     l182:
  1431                           
  1432                           ;./lora_driver.h: 31:     RC2STAbits.CREN = 0;
  1433     0049  014C               	movlb	12	; select bank12
  1434     004A  121A               	bcf	26,4	;volatile
  1435                           
  1436                           ;./lora_driver.h: 32:     RC2STAbits.CREN = 1;
  1437     004B  161A               	bsf	26,4	;volatile
  1438                           
  1439                           ;./lora_driver.h: 34:     PIE3bits.RC2IE = 1;
  1440     004C  0141               	movlb	1	; select bank1
  1441     004D  1699               	bsf	25,5	;volatile
  1442     004E                     l1280:
  1443                           
  1444                           ;./lora_driver.h: 36:     EUSART_print(at_command);
  1445     004E  0140               	movlb	0	; select bank0
  1446     004F  0821               	movf	AT_command_check@at_command+1,w
  1447     0050  00F3               	movwf	EUSART_print@string+1
  1448     0051  0820               	movf	AT_command_check@at_command,w
  1449     0052  00F2               	movwf	EUSART_print@string
  1450     0053  3181  211B  3180   	fcall	_EUSART_print
  1451     0056                     l1282:
  1452                           
  1453                           ;./lora_driver.h: 37:     EUSART_write(0x0A);
  1454     0056  300A               	movlw	10
  1455     0057  3181  21D0  3180   	fcall	_EUSART_write
  1456     005A                     l1284:	
  1457                           ;./lora_driver.h: 40:     while(RX_index < response_size+2);
  1458                           
  1459     005A  0140               	movlb	0	; select bank0
  1460     005B  0824               	movf	AT_command_check@response_size,w
  1461     005C  3E02               	addlw	2
  1462     005D  00F8               	movwf	??_AT_command_check
  1463     005E  3000               	movlw	0
  1464     005F  1803               	skipnc
  1465     0060  3001               	movlw	1
  1466     0061  00F9               	movwf	??_AT_command_check+1
  1467     0062  0879               	movf	??_AT_command_check+1,w
  1468     0063  3A80               	xorlw	128
  1469     0064  3C80               	sublw	128
  1470     0065  1D03               	skipz
  1471     0066  2869               	goto	u365
  1472     0067  0878               	movf	??_AT_command_check,w
  1473     0068  027C               	subwf	_RX_index,w
  1474     0069                     u365:
  1475     0069  1C03               	skipc
  1476     006A  286C               	goto	u361
  1477     006B  286D               	goto	u360
  1478     006C                     u361:
  1479     006C  285A               	goto	l1284
  1480     006D                     u360:
  1481     006D                     l1286:
  1482                           
  1483                           ;./lora_driver.h: 41:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1484     006D  30FA               	movlw	250
  1485     006E                     u437:
  1486     006E  3200               	nop2
  1487     006F  0B89               	decfsz	9,f
  1488     0070  286E               	goto	u437
  1489     0071                     l1288:
  1490                           
  1491                           ;./lora_driver.h: 43:     PIE3bits.RC2IE = 0;
  1492     0071  0141               	movlb	1	; select bank1
  1493     0072  1299               	bcf	25,5	;volatile
  1494     0073                     l1290:
  1495                           
  1496                           ;./lora_driver.h: 44:     for(uint8_t i=0; i<response_size; i++){
  1497     0073  01FB               	clrf	AT_command_check@i
  1498     0074  2892               	goto	l1300
  1499     0075                     l1292:
  1500                           
  1501                           ;./lora_driver.h: 46:         if(RX_buffer[i] != expected_response[i]){
  1502     0075  0823               	movf	AT_command_check@expected_response+1,w
  1503     0076  00F9               	movwf	??_AT_command_check+1
  1504     0077  0822               	movf	AT_command_check@expected_response,w
  1505     0078  00F8               	movwf	??_AT_command_check
  1506     0079  087B               	movf	AT_command_check@i,w
  1507     007A  0778               	addwf	??_AT_command_check,w
  1508     007B  0084               	movwf	4
  1509     007C  0879               	movf	??_AT_command_check+1,w
  1510     007D  1803               	skipnc
  1511     007E  0A79               	incf	??_AT_command_check+1,w
  1512     007F  0085               	movwf	5
  1513     0080  0800               	movf	0,w	;code access
  1514     0081  00FA               	movwf	??_AT_command_check+2
  1515     0082  087B               	movf	AT_command_check@i,w
  1516     0083  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  1517     0084  0086               	movwf	6
  1518     0085  0187               	clrf	7
  1519     0086  0801               	movf	1,w
  1520     0087  067A               	xorwf	??_AT_command_check+2,w
  1521     0088  1903               	skipnz
  1522     0089  288B               	goto	u371
  1523     008A  288C               	goto	u370
  1524     008B                     u371:
  1525     008B  288E               	goto	l1298
  1526     008C                     u370:
  1527     008C                     l1294:
  1528                           
  1529                           ;./lora_driver.h: 47:             return 0;
  1530     008C  3000               	movlw	0
  1531     008D  289A               	goto	l189
  1532     008E                     l1298:
  1533                           
  1534                           ;./lora_driver.h: 49:     }
  1535     008E  3001               	movlw	1
  1536     008F  00F8               	movwf	??_AT_command_check
  1537     0090  0878               	movf	??_AT_command_check,w
  1538     0091  07FB               	addwf	AT_command_check@i,f
  1539     0092                     l1300:
  1540     0092  0140               	movlb	0	; select bank0
  1541     0093  0824               	movf	AT_command_check@response_size,w
  1542     0094  027B               	subwf	AT_command_check@i,w
  1543     0095  1C03               	skipc
  1544     0096  2898               	goto	u381
  1545     0097  2899               	goto	u380
  1546     0098                     u381:
  1547     0098  2875               	goto	l1292
  1548     0099                     u380:
  1549     0099                     l1302:
  1550                           
  1551                           ;./lora_driver.h: 50:     return 1;
  1552     0099  3001               	movlw	1
  1553     009A                     l189:
  1554     009A  0008               	return
  1555     009B                     __end_of_AT_command_check:
  1556                           
  1557                           	psect	text5
  1558     0157                     __ptext5:	
  1559 ;; *************** function _EUSART_clear_buffer *****************
  1560 ;; Defined at:
  1561 ;;		line 59 in file "./eusart_driver.h"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  buffer          1    wreg     PTR unsigned char 
  1564 ;;		 -> RX_buffer(80), 
  1565 ;;  size            1    1[COMMON] unsigned char 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  buffer          1    3[COMMON] PTR unsigned char 
  1568 ;;		 -> RX_buffer(80), 
  1569 ;;  i               1    4[COMMON] unsigned char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1579 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1580 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1582 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1583 ;;Total ram usage:        4 bytes
  1584 ;; Hardware stack levels used: 1
  1585 ;; Hardware stack levels required when called: 1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_AT_command_check
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594     0157                     _EUSART_clear_buffer:	
  1595                           ;psect for function _EUSART_clear_buffer
  1596                           
  1597                           
  1598                           ;incstack = 0
  1599                           ; Regs used in _EUSART_clear_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1600                           ;EUSART_clear_buffer@buffer stored from wreg
  1601     0157  00F3               	movwf	EUSART_clear_buffer@buffer
  1602     0158                     l1258:
  1603                           
  1604                           ;./eusart_driver.h: 60:     for(uint8_t i=0; i<size; i++){
  1605     0158  01F4               	clrf	EUSART_clear_buffer@i
  1606     0159  2965               	goto	l1264
  1607     015A                     l1260:
  1608                           
  1609                           ;./eusart_driver.h: 61:         buffer[i] = 0;
  1610     015A  0874               	movf	EUSART_clear_buffer@i,w
  1611     015B  0773               	addwf	EUSART_clear_buffer@buffer,w
  1612     015C  00F2               	movwf	??_EUSART_clear_buffer
  1613     015D  0872               	movf	??_EUSART_clear_buffer,w
  1614     015E  0086               	movwf	6
  1615     015F  0187               	clrf	7
  1616     0160  0181               	clrf	1
  1617     0161                     l1262:
  1618                           
  1619                           ;./eusart_driver.h: 62:     }
  1620     0161  3001               	movlw	1
  1621     0162  00F2               	movwf	??_EUSART_clear_buffer
  1622     0163  0872               	movf	??_EUSART_clear_buffer,w
  1623     0164  07F4               	addwf	EUSART_clear_buffer@i,f
  1624     0165                     l1264:
  1625     0165  0871               	movf	EUSART_clear_buffer@size,w
  1626     0166  0274               	subwf	EUSART_clear_buffer@i,w
  1627     0167  1C03               	skipc
  1628     0168  296A               	goto	u341
  1629     0169  296B               	goto	u340
  1630     016A                     u341:
  1631     016A  295A               	goto	l1260
  1632     016B                     u340:
  1633     016B                     l114:
  1634     016B  0008               	return
  1635     016C                     __end_of_EUSART_clear_buffer:
  1636                           
  1637                           	psect	text6
  1638     016C                     __ptext6:	
  1639 ;; *************** function _AT_command *****************
  1640 ;; Defined at:
  1641 ;;		line 53 in file "./lora_driver.h"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  at_command      2    8[COMMON] PTR const unsigned char 
  1644 ;;		 -> STR_12(13), STR_1(11), 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1660 ;;Total ram usage:        3 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 3
  1663 ;; This function calls:
  1664 ;;		_EUSART_print
  1665 ;;		_EUSART_write
  1666 ;; This function is called by:
  1667 ;;		_LoRa_setup
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672     016C                     _AT_command:	
  1673                           ;psect for function _AT_command
  1674                           
  1675     016C                     l1266:	
  1676                           ;incstack = 0
  1677                           ; Regs used in _AT_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1678                           
  1679                           
  1680                           ;./lora_driver.h: 54:     EUSART_print(at_command);
  1681     016C  0879               	movf	AT_command@at_command+1,w
  1682     016D  00F3               	movwf	EUSART_print@string+1
  1683     016E  0878               	movf	AT_command@at_command,w
  1684     016F  00F2               	movwf	EUSART_print@string
  1685     0170  3181  211B  3181   	fcall	_EUSART_print
  1686     0173                     l1268:
  1687                           
  1688                           ;./lora_driver.h: 55:     EUSART_write(0x0A);
  1689     0173  300A               	movlw	10
  1690     0174  3181  21D0  3181   	fcall	_EUSART_write
  1691     0177                     l1270:
  1692                           
  1693                           ;./lora_driver.h: 56:     _delay((unsigned long)((20)*(1000000/4000.0)));
  1694     0177  3007               	movlw	7
  1695     0178  00FA               	movwf	??_AT_command
  1696     0179  307D               	movlw	125
  1697     017A                     u447:
  1698     017A  0B89               	decfsz	9,f
  1699     017B  297A               	goto	u447
  1700     017C  0BFA               	decfsz	??_AT_command,f
  1701     017D  297A               	goto	u447
  1702     017E  0000               	nop
  1703     017F                     l193:
  1704     017F  0008               	return
  1705     0180                     __end_of_AT_command:
  1706                           
  1707                           	psect	text7
  1708     011B                     __ptext7:	
  1709 ;; *************** function _EUSART_print *****************
  1710 ;; Defined at:
  1711 ;;		line 42 in file "./eusart_driver.h"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  string          2    2[COMMON] PTR const unsigned char 
  1714 ;;		 -> STR_12(13), STR_11(12), STR_9(8), STR_6(11), 
  1715 ;;		 -> STR_4(3), STR_1(11), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  c               1    7[COMMON] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1730 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;Total ram usage:        6 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 2
  1734 ;; This function calls:
  1735 ;;		_EUSART_write
  1736 ;; This function is called by:
  1737 ;;		_LoRa_setup
  1738 ;;		_AT_command_check
  1739 ;;		_AT_command
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743     011B                     _EUSART_print:	
  1744                           ;psect for function _EUSART_print
  1745                           
  1746     011B                     l1250:	
  1747                           ;incstack = 0
  1748                           ; Regs used in _EUSART_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1749                           
  1750                           
  1751                           ;./eusart_driver.h: 43:     uint8_t c=0;
  1752     011B  01F7               	clrf	EUSART_print@c
  1753                           
  1754                           ;./eusart_driver.h: 44:     while(string[c]!=0){
  1755     011C  2930               	goto	l1256
  1756     011D                     l1252:
  1757                           
  1758                           ;./eusart_driver.h: 45:         EUSART_write(string[c]);
  1759     011D  0873               	movf	EUSART_print@string+1,w
  1760     011E  00F5               	movwf	??_EUSART_print+1
  1761     011F  0872               	movf	EUSART_print@string,w
  1762     0120  00F4               	movwf	??_EUSART_print
  1763     0121  0877               	movf	EUSART_print@c,w
  1764     0122  0774               	addwf	??_EUSART_print,w
  1765     0123  0084               	movwf	4
  1766     0124  0875               	movf	??_EUSART_print+1,w
  1767     0125  1803               	skipnc
  1768     0126  0A75               	incf	??_EUSART_print+1,w
  1769     0127  0085               	movwf	5
  1770     0128  0800               	movf	0,w	;code access
  1771     0129  3181  21D0  3181   	fcall	_EUSART_write
  1772     012C                     l1254:
  1773                           
  1774                           ;./eusart_driver.h: 46:         c++;
  1775     012C  3001               	movlw	1
  1776     012D  00F4               	movwf	??_EUSART_print
  1777     012E  0874               	movf	??_EUSART_print,w
  1778     012F  07F7               	addwf	EUSART_print@c,f
  1779     0130                     l1256:
  1780                           
  1781                           ;./eusart_driver.h: 44:     while(string[c]!=0){
  1782     0130  0873               	movf	EUSART_print@string+1,w
  1783     0131  00F5               	movwf	??_EUSART_print+1
  1784     0132  0872               	movf	EUSART_print@string,w
  1785     0133  00F4               	movwf	??_EUSART_print
  1786     0134  0877               	movf	EUSART_print@c,w
  1787     0135  0774               	addwf	??_EUSART_print,w
  1788     0136  0084               	movwf	4
  1789     0137  0875               	movf	??_EUSART_print+1,w
  1790     0138  1803               	skipnc
  1791     0139  0A75               	incf	??_EUSART_print+1,w
  1792     013A  0085               	movwf	5
  1793     013B  0012               	moviw fsr0++
  1794     013C  1D03               	btfss	3,2
  1795     013D  293F               	goto	u331
  1796     013E  2940               	goto	u330
  1797     013F                     u331:
  1798     013F  291D               	goto	l1252
  1799     0140                     u330:
  1800     0140                     l105:
  1801     0140  0008               	return
  1802     0141                     __end_of_EUSART_print:
  1803                           
  1804                           	psect	text8
  1805     01D0                     __ptext8:	
  1806 ;; *************** function _EUSART_write *****************
  1807 ;; Defined at:
  1808 ;;		line 32 in file "./eusart_driver.h"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  txData          1    wreg     unsigned char 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  txData          1    1[COMMON] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1826 ;;Total ram usage:        1 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_EUSART_print
  1833 ;;		_AT_command_check
  1834 ;;		_AT_command
  1835 ;;		_EUSART_print_num
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839     01D0                     _EUSART_write:	
  1840                           ;psect for function _EUSART_write
  1841                           
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _EUSART_write: [wreg]
  1845                           ;EUSART_write@txData stored from wreg
  1846     01D0  00F1               	movwf	EUSART_write@txData
  1847     01D1                     l1246:
  1848     01D1                     l90:	
  1849                           ;./eusart_driver.h: 33:     while(PIR3bits.TX2IF == 0){}
  1850                           
  1851     01D1  0141               	movlb	1	; select bank1
  1852     01D2  1E0F               	btfss	15,4	;volatile
  1853     01D3  29D5               	goto	u321
  1854     01D4  29D6               	goto	u320
  1855     01D5                     u321:
  1856     01D5  29D1               	goto	l90
  1857     01D6                     u320:
  1858     01D6                     l1248:
  1859                           
  1860                           ;./eusart_driver.h: 34:     TX2REG = txData;
  1861     01D6  0871               	movf	EUSART_write@txData,w
  1862     01D7  014C               	movlb	12	; select bank12
  1863     01D8  0097               	movwf	23	;volatile
  1864     01D9                     l93:
  1865     01D9  0008               	return
  1866     01DA                     __end_of_EUSART_write:
  1867                           
  1868                           	psect	text9
  1869     0180                     __ptext9:	
  1870 ;; *************** function _EUSART_setup *****************
  1871 ;; Defined at:
  1872 ;;		line 6 in file "./eusart_driver.h"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900     0180                     _EUSART_setup:	
  1901                           ;psect for function _EUSART_setup
  1902                           
  1903     0180                     l1164:	
  1904                           ;incstack = 0
  1905                           ; Regs used in _EUSART_setup: [wreg+status,2]
  1906                           
  1907                           
  1908                           ;./eusart_driver.h: 8:     BAUD2CONbits.BRG16 = 1;
  1909     0180  014C               	movlb	12	; select bank12
  1910     0181  159C               	bsf	28,3	;volatile
  1911                           
  1912                           ;./eusart_driver.h: 10:     TX2STAbits.SYNC = 0;
  1913     0182  121B               	bcf	27,4	;volatile
  1914                           
  1915                           ;./eusart_driver.h: 12:     TX2STAbits.TXEN = 1;
  1916     0183  169B               	bsf	27,5	;volatile
  1917                           
  1918                           ;./eusart_driver.h: 14:     TX2STAbits.BRGH = 1;
  1919     0184  151B               	bsf	27,2	;volatile
  1920                           
  1921                           ;./eusart_driver.h: 16:     RC2STAbits.CREN = 1;
  1922     0185  161A               	bsf	26,4	;volatile
  1923                           
  1924                           ;./eusart_driver.h: 18:     RC2STAbits.SPEN = 1;
  1925     0186  179A               	bsf	26,7	;volatile
  1926     0187                     l1166:
  1927                           
  1928                           ;./eusart_driver.h: 20:     SP2BRGL = 25;
  1929     0187  3019               	movlw	25
  1930     0188  0098               	movwf	24	;volatile
  1931     0189                     l1168:
  1932                           
  1933                           ;./eusart_driver.h: 21:     SP2BRGH = 0;
  1934     0189  0199               	clrf	25	;volatile
  1935     018A                     l1170:
  1936                           
  1937                           ;./eusart_driver.h: 23:     RA5PPS = 0x11;
  1938     018A  3011               	movlw	17
  1939     018B  017B               	movlb	59	; select bank59
  1940     018C  0091               	movwf	17	;volatile
  1941     018D                     l1172:
  1942                           
  1943                           ;./eusart_driver.h: 25:     RX2PPS = 0x4;
  1944     018D  3004               	movlw	4
  1945     018E  017C               	movlb	60	; select bank60
  1946     018F  00C3               	movwf	67	;volatile
  1947     0190                     l1174:
  1948                           
  1949                           ;./eusart_driver.h: 27:     TRISAbits.TRISA5 = 0;
  1950     0190  0140               	movlb	0	; select bank0
  1951     0191  1292               	bcf	18,5	;volatile
  1952     0192                     l1176:
  1953                           
  1954                           ;./eusart_driver.h: 29:     TRISAbits.TRISA4 = 1;
  1955     0192  1612               	bsf	18,4	;volatile
  1956     0193                     l87:
  1957     0193  0008               	return
  1958     0194                     __end_of_EUSART_setup:
  1959                           
  1960                           	psect	text10
  1961     01A1                     __ptext10:	
  1962 ;; *************** function _Analog_setup *****************
  1963 ;; Defined at:
  1964 ;;		line 7 in file "./analog_driver.h"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 1
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992     01A1                     _Analog_setup:	
  1993                           ;psect for function _Analog_setup
  1994                           
  1995     01A1                     l1178:	
  1996                           ;incstack = 0
  1997                           ; Regs used in _Analog_setup: [wreg+status,2+status,0]
  1998                           
  1999                           
  2000                           ;./analog_driver.h: 9:     TRISA |= (1<<0);
  2001     01A1  0140               	movlb	0	; select bank0
  2002     01A2  1412               	bsf	18,0	;volatile
  2003                           
  2004                           ;./analog_driver.h: 10:     ANSELA |= (1<<0);
  2005     01A3  017D               	movlb	61	; select bank61
  2006     01A4  140C               	bsf	12,0	;volatile
  2007     01A5                     l1180:
  2008                           
  2009                           ;./analog_driver.h: 11:     ADPCH = 0 & 0b00111111;
  2010     01A5  017A               	movlb	58	; select bank58
  2011     01A6  019F               	clrf	31	;volatile
  2012                           
  2013                           ;./analog_driver.h: 12:     ADREF = 0x0;
  2014     01A7  01AB               	clrf	43	;volatile
  2015     01A8                     l1182:
  2016                           
  2017                           ;./analog_driver.h: 13:     ADCON0bits.CS = 1;
  2018     01A8  1626               	bsf	38,4	;volatile
  2019     01A9                     l1184:
  2020                           
  2021                           ;./analog_driver.h: 14:     ADCON0bits.FM = 1;
  2022     01A9  0826               	movf	38,w	;volatile
  2023     01AA  39F3               	andlw	-13
  2024     01AB  3804               	iorlw	4
  2025     01AC  00A6               	movwf	38	;volatile
  2026     01AD                     l161:
  2027     01AD  0008               	return
  2028     01AE                     __end_of_Analog_setup:
  2029                           
  2030                           	psect	intentry
  2031     0004                     __pintentry:	
  2032 ;; *************** function _ISR *****************
  2033 ;; Defined at:
  2034 ;;		line 71 in file "main.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2052 ;;Total ram usage:        1 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		Interrupt level 1
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061     0004                     _ISR:
  2062                           
  2063                           ;incstack = 0
  2064     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2065                           
  2066                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2067     0005  3180               	pagesel	$
  2068     0006                     i1l1206:
  2069                           
  2070                           ;main.c: 73:     if(PIR3bits.RC2IF){
  2071     0006  0141               	movlb	1	; select bank1
  2072     0007  1E8F               	btfss	15,5	;volatile
  2073     0008  280A               	goto	u28_21
  2074     0009  280B               	goto	u28_20
  2075     000A                     u28_21:
  2076     000A  2829               	goto	i1l202
  2077     000B                     u28_20:
  2078     000B                     i1l1208:
  2079                           
  2080                           ;main.c: 76:             if(RX_index < 80){
  2081     000B  3050               	movlw	80
  2082     000C  027C               	subwf	_RX_index,w
  2083     000D  1803               	skipnc
  2084     000E  2810               	goto	u29_21
  2085     000F  2811               	goto	u29_20
  2086     0010                     u29_21:
  2087     0010  281C               	goto	i1l1214
  2088     0011                     u29_20:
  2089     0011                     i1l1210:
  2090                           
  2091                           ;main.c: 77:                 RX_buffer[RX_index] = RC2REG;
  2092     0011  087C               	movf	_RX_index,w
  2093     0012  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  2094     0013  0086               	movwf	6
  2095     0014  0187               	clrf	7
  2096     0015  014C               	movlb	12	; select bank12
  2097     0016  0816               	movf	22,w	;volatile
  2098     0017  0081               	movwf	1
  2099     0018                     i1l1212:
  2100                           
  2101                           ;main.c: 78:                 RX_index ++;
  2102     0018  3001               	movlw	1
  2103     0019  00F0               	movwf	??_ISR
  2104     001A  0870               	movf	??_ISR,w
  2105     001B  07FC               	addwf	_RX_index,f
  2106     001C                     i1l1214:
  2107                           
  2108                           ;main.c: 81:         if(RC2STAbits.FERR){
  2109     001C  014C               	movlb	12	; select bank12
  2110     001D  1D1A               	btfss	26,2	;volatile
  2111     001E  2820               	goto	u30_21
  2112     001F  2821               	goto	u30_20
  2113     0020                     u30_21:
  2114     0020  2823               	goto	i1l200
  2115     0021                     u30_20:
  2116     0021                     i1l1216:
  2117                           
  2118                           ;main.c: 83:             RC2STAbits.SPEN = 0;
  2119     0021  139A               	bcf	26,7	;volatile
  2120                           
  2121                           ;main.c: 84:             RC2STAbits.SPEN = 1;
  2122     0022  179A               	bsf	26,7	;volatile
  2123     0023                     i1l200:	
  2124                           ;main.c: 86:         }
  2125                           
  2126                           
  2127                           ;main.c: 87:         if(RC2STAbits.OERR){
  2128     0023  1C9A               	btfss	26,1	;volatile
  2129     0024  2826               	goto	u31_21
  2130     0025  2827               	goto	u31_20
  2131     0026                     u31_21:
  2132     0026  2829               	goto	i1l202
  2133     0027                     u31_20:
  2134     0027                     i1l1218:
  2135                           
  2136                           ;main.c: 89:             RC2STAbits.CREN = 0;
  2137     0027  121A               	bcf	26,4	;volatile
  2138                           
  2139                           ;main.c: 90:             RC2STAbits.CREN = 1;
  2140     0028  161A               	bsf	26,4	;volatile
  2141     0029                     i1l202:
  2142     0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2143     002A  0009               	retfie
  2144     002B                     __end_of_ISR:
  2145     007E                     btemp	set	126	;btemp
  2146     007E                     int$flags	set	126
  2147     007E                     wtemp0	set	126
  2148                           
  2149                           	psect	idloc
  2150                           
  2151                           ;Config register IDLOC0 @ 0x8000
  2152                           ;	unspecified, using default values
  2153     8000                     	org	32768
  2154     8000  3FFF               	dw	16383
  2155                           
  2156                           ;Config register IDLOC1 @ 0x8001
  2157                           ;	unspecified, using default values
  2158     8001                     	org	32769
  2159     8001  3FFF               	dw	16383
  2160                           
  2161                           ;Config register IDLOC2 @ 0x8002
  2162                           ;	unspecified, using default values
  2163     8002                     	org	32770
  2164     8002  3FFF               	dw	16383
  2165                           
  2166                           ;Config register IDLOC3 @ 0x8003
  2167                           ;	unspecified, using default values
  2168     8003                     	org	32771
  2169     8003  3FFF               	dw	16383
  2170                           
  2171                           	psect	config
  2172                           
  2173                           ;Config register CONFIG1 @ 0x8007
  2174                           ;	External Oscillator Selection bits
  2175                           ;	FEXTOSC = OFF, Oscillator not enabled
  2176                           ;	Reset Oscillator Selection bits
  2177                           ;	RSTOSC = HFINTOSC_1MHz, HFINTOSC (1MHz)
  2178                           ;	Clock Out Enable bit
  2179                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  2180                           ;	VDD Range Analog Calibration Selection bit
  2181                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3 - 5
      +                          .5V
  2182     8007                     	org	32775
  2183     8007  3FEC               	dw	16364
  2184                           
  2185                           ;Config register CONFIG2 @ 0x8008
  2186                           ;	Master Clear Enable bit
  2187                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  2188                           ;	Power-up Timer Selection bits
  2189                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2190                           ;	WDT Operating Mode bits
  2191                           ;	WDTE = ON, WDT enabled regardless of Sleep; SEN bit is ignored
  2192                           ;	Brown-out Reset Enable bits
  2193                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit is ignored
  2194                           ;	DAC Buffer Automatic Range Select Enable bit
  2195                           ;	DACAUTOEN = OFF, DAC Buffer reference range is determined by the REFRNG bit
  2196                           ;	Brown-out Reset Voltage Selection bit
  2197                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  2198                           ;	ZCD Disable bit
  2199                           ;	ZCD = OFF, ZCD module is disabled; ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2200                           ;	PPSLOCKED One-Way Set Enable bit
  2201                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once after an unlocking se
      +                          quence is executed; once PPSLOCKED is set, all future changes to PPS registers are preve
      +                          nted
  2202                           ;	Stack Overflow/Underflow Reset Enable bit
  2203                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  2204     8008                     	org	32776
  2205     8008  3FFF               	dw	16383
  2206                           
  2207                           ;Config register CONFIG3 @ 0x8009
  2208                           ;	unspecified, using default values
  2209     8009                     	org	32777
  2210     8009  3FFF               	dw	16383
  2211                           
  2212                           ;Config register CONFIG4 @ 0x800A
  2213                           ;	Boot Block Size Selection bits
  2214                           ;	BBSIZE = BB512, 512 words boot block size
  2215                           ;	Boot Block Enable bit
  2216                           ;	BBEN = OFF, Boot Block disabled
  2217                           ;	Storage Area Flash (SAF) Enable bit
  2218                           ;	SAFEN = OFF, SAF disabled
  2219                           ;	Application Block Write Protection bit
  2220                           ;	WRTAPP = OFF, Application Block is NOT write protected
  2221                           ;	Boot Block Write Protection bit
  2222                           ;	WRTB = OFF, Boot Block is NOT write protected
  2223                           ;	Configuration Register Write Protection bit
  2224                           ;	WRTC = OFF, Configuration Register is NOT write protected
  2225                           ;	Data EEPROM Write-Protection bit
  2226                           ;	WRTD = OFF, Data EEPROM is NOT write-protected
  2227                           ;	Storage Area Flash (SAF) Write Protection bit
  2228                           ;	WRTSAF = OFF, SAF is NOT write protected
  2229                           ;	Low Voltage Programming Enable bit
  2230                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored
  2231     800A                     	org	32778
  2232     800A  3FFF               	dw	16383
  2233                           
  2234                           ;Config register CONFIG5 @ 0x800B
  2235                           ;	Program Flash Memory Code Protection bit
  2236                           ;	CP = OFF, Program Flash Memory code protection is disabled
  2237                           ;	Data EEPROM Code Protection bit
  2238                           ;	CPD = OFF, EEPROM code protection is disabled
  2239     800B                     	org	32779
  2240     800B  3FFF               	dw	16383

Data Sizes:
    Strings     88
    Constant    0
    Data        0
    BSS         81
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      9       9
    BANK1            80      0      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    AT_command@at_command	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_12(CODE[13]), STR_1(CODE[11]), 

    AT_command_check@expected_response	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[22]), STR_5(CODE[8]), 

    AT_command_check@at_command	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_9(CODE[8]), STR_4(CODE[3]), 

    EUSART_clear_buffer@buffer	PTR unsigned char  size(1) Largest target is 80
		 -> RX_buffer(BANK1[80]), 

    EUSART_print@string	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_9(CODE[8]), STR_6(CODE[11]), 
		 -> STR_4(CODE[3]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _LoRa_setup->_AT_command_check
    _AT_command_check->_EUSART_print
    _AT_command->_EUSART_print
    _EUSART_print->_EUSART_write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LoRa_setup
    _LoRa_setup->_AT_command_check

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    4132
                                              7 BANK0      2     2      0
                         _AT_command
                       _Analog_setup
                _EUSART_clear_buffer
                       _EUSART_setup
                         _LoRa_setup
                        _SLEEP_start
                          _WDT_setup
 ---------------------------------------------------------------------------------
 (1) _WDT_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SLEEP_start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRa_setup                                           2     2      0    2984
                                              5 BANK0      2     2      0
                         _AT_command
                   _AT_command_check
                       _EUSART_print
 ---------------------------------------------------------------------------------
 (2) _AT_command_check                                    10     5      5    1700
                                              8 COMMON     4     4      0
                                              0 BANK0      5     0      5
                _EUSART_clear_buffer
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_clear_buffer                                  4     3      1     382
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _AT_command                                           3     1      2     763
                                              8 COMMON     3     1      2
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_print                                         6     4      2     521
                                              2 COMMON     6     4      2
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Analog_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AT_command
     _EUSART_print
       _EUSART_write
     _EUSART_write
   _Analog_setup
   _EUSART_clear_buffer
   _EUSART_setup
   _LoRa_setup
     _AT_command
     _AT_command_check
       _EUSART_clear_buffer
       _EUSART_print
       _EUSART_write
     _EUSART_print
   _SLEEP_start
   _WDT_setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      66       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      9       9       6       11.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      66      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 24 16:03:47 2024

                               l81 01F5                                 l90 01D1  
                               l84 01FB                                 l93 01D9  
                               l87 0193                                l105 0140  
                              l114 016B                                l161 01AD  
                              l182 0049                                l193 017F  
                              l177 00E4                                l189 009A  
                              u320 01D6                                u400 00DD  
                              u321 01D5                                u401 00DC  
                              u330 0140                                u331 013F  
                              u340 016B                                u341 016A  
                              u350 0049                                u351 0048  
                              u360 006D                                u361 006C  
                              u417 00FF                                u370 008C  
                              u371 008B                                u427 00C3  
                              u380 0099                                _ISR 0004  
                              u381 0098                                u437 006E  
                              u365 0069                                u390 00B5  
                              u447 017A                                u391 00B4  
                              wreg 0009                               ?_ISR 0070  
                     _BAUD2CONbits 061C                               l1300 0092  
                             l1302 0099                               l1310 00B5  
                             l1312 00BD                               l1160 01F0  
                             l1170 018A                               l1250 011B  
                             l1314 00CA                               l1306 009B  
                             l1162 01F9                               l1330 00EB  
                             l1180 01A5                               l1172 018D  
                             l1164 0180                               l1252 011D  
                             l1260 015A                               l1316 00DD  
                             l1308 00A2                               l1340 0106  
                             l1332 00EE                               l1182 01A8  
                             l1174 0190                               l1166 0187  
                             l1246 01D1                               l1254 012C  
                             l1270 0177                               l1262 0161  
                             l1350 0111                               l1342 0109  
                             l1334 00F4                               l1326 00E5  
                             l1184 01A9                               l1176 0192  
                             l1168 0189                               l1248 01D6  
                             l1256 0130                               l1264 0165  
                             l1280 004E                               l1272 003A  
                             l1344 010B                               l1336 00F7  
                             l1328 00E7                               l1178 01A1  
                             l1266 016C                               l1258 0158  
                             l1290 0073                               l1282 0056  
                             l1274 0040                               l1346 010E  
                             l1338 00F9                               l1268 0173  
                             l1292 0075                               l1284 005A  
                             l1276 0042                               l1348 010E  
                             l1294 008C                               l1286 006D  
                             l1278 0044                               l1288 0071  
                             l1298 008E                               STR_1 01BA  
                             STR_2 01F6                               STR_3 01DA  
                             STR_4 01F6                               STR_5 01DA  
                             STR_6 01C5                               STR_7 01E2  
                             STR_8 0141                               STR_9 01E2  
                             _main 00E5                               fsr0h 0005  
                             fsr1h 0007                               indf0 0000  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             start 002B           __end_of_AT_command_check 009B  
               EUSART_write@txData 0071                        ?_AT_command 0078  
                            ??_ISR 0070                              ?_main 0070  
                            _ADPCH 1D1F                              _ADREF 1D2B  
                            _ADRES 1D1D                              STR_10 0141  
                            STR_11 01AE                              STR_12 0194  
                    ?_EUSART_setup 0070                      ?_EUSART_print 0072  
                    ?_EUSART_write 0070                              i1l200 0023  
                            i1l202 0029                              u30_20 0021  
                            u30_21 0020                              u31_20 0027  
                            u31_21 0026                              _PORTA 000C  
                            u28_20 000B                              u28_21 000A  
                            u29_20 0011                              u29_21 0010  
                            _TRISA 0012                         _LoRa_setup 009B  
        EUSART_clear_buffer@buffer 0073                              status 0003  
                            wtemp0 007E         AT_command_check@at_command 0020  
          EUSART_clear_buffer@size 0071                    __initialization 002D  
                     __end_of_main 011B                     ??_EUSART_setup 0071  
                   ??_EUSART_print 0074                     ??_EUSART_write 0071  
                           ??_main 0027                       ?_SLEEP_start 0070  
                           _ANSELA 1E8C                             _RA1PPS 1D8D  
                           _RA2PPS 1D8E                             _RC2REG 0616  
                           _RA5PPS 1D91                             i1l1210 0011  
                           i1l1212 0018                             i1l1214 001C  
                           i1l1206 0006                             i1l1216 0021  
                           i1l1208 000B                             i1l1218 0027  
                           _RX2PPS 1E43                             _TX2REG 0617  
                     _Analog_setup 01A1                  __end_of_WDT_setup 01F6  
                      ?_LoRa_setup 0070            __end_of__initialization 0036  
                   __pcstackCOMMON 0070                         __pbssBANK1 00A0  
             __end_of_EUSART_setup 0194               __end_of_EUSART_print 0141  
             __end_of_EUSART_write 01DA                  ?_AT_command_check 0020  
                     ??_AT_command 007A                         __pmaintext 00E5  
               ??_AT_command_check 0078                         __pintentry 0004  
                          _SP2BRGH 0619                            _SP2BRGL 0618  
                          _SSP1ADD 068D                            _SSP1BUF 068C  
               __end_of_AT_command 0180                            __ptext1 01F0  
                          __ptext2 01F9                            __ptext3 009B  
                          __ptext4 003A                            __ptext5 0157  
                          __ptext6 016C                            __ptext7 011B  
                          __ptext8 01D0                            __ptext9 0180  
                          clrloop0 01EB               end_of_initialization 0036  
                    EUSART_print@c 0077                          _TRISAbits 0012  
AT_command_check@expected_response 0022                       ??_LoRa_setup 0025  
             AT_command@at_command 0078                          _WDT_setup 01F0  
               __end_of_LoRa_setup 00E5                          _RX_buffer 00A0  
                     _EUSART_setup 0180                       _EUSART_print 011B  
                     _EUSART_write 01D0                start_initialization 002D  
                      __end_of_ISR 002B                _EUSART_clear_buffer 0157  
                       ?_WDT_setup 0070               ?_EUSART_clear_buffer 0071  
                AT_command_check@i 007B                        __pbssCOMMON 007C  
                        ___latbits 0002                      __pcstackBANK0 0020  
            ??_EUSART_clear_buffer 0072                      ??_SLEEP_start 0071  
                      ??_WDT_setup 0071                          clear_ram0 01EA  
                         _PIE3bits 0099                           _PIR3bits 008F  
                         _SSP1CON2 0691                           _SSP1STAT 068F  
                       _ADCON0bits 1D26                      ?_Analog_setup 0070  
                         _RX_index 007C                __end_of_SLEEP_start 01FC  
                   ??_Analog_setup 0071                   _AT_command_check 003A  
               EUSART_print@string 0072                           __ptext10 01A1  
                     _SSP1CON1bits 0690                       _SSP1CON2bits 0691  
                       _RC2STAbits 061A                           int$flags 007E  
                       _ODCONAbits 1E8E                       _SSP1STATbits 068F  
    AT_command_check@response_size 0024               EUSART_clear_buffer@i 0074  
                       _INTCONbits 000B                        _SLEEP_start 01F9  
                         intlevel1 0000                         _AT_command 016C  
                    __pstringtext1 0141                      __pstringtext2 0194  
                    __pstringtext3 01AE                      __pstringtext4 01BA  
                    __pstringtext5 01C5                      __pstringtext6 01DA  
                    __pstringtext7 01E2                      __pstringtext8 01F6  
                    __pstringtext9 0000                         _SSP1DATPPS 1E48  
                       _SSP1CLKPPS 1E47                         _WDTCONbits 018C  
                       _TX2STAbits 061B               __end_of_Analog_setup 01AE  
      __end_of_EUSART_clear_buffer 016C  
